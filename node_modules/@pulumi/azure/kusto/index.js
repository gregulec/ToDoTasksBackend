"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./attachedDatabaseConfiguration"));
__export(require("./cluster"));
__export(require("./clusterCustomerManagedKey"));
__export(require("./clusterPrincipalAssignment"));
__export(require("./database"));
__export(require("./databasePrincipal"));
__export(require("./databasePrincipalAssignment"));
__export(require("./eventGridDataConnection"));
__export(require("./eventhubDataConnection"));
__export(require("./getCluster"));
__export(require("./iotHubDataConnection"));
// Import resources to register:
const attachedDatabaseConfiguration_1 = require("./attachedDatabaseConfiguration");
const cluster_1 = require("./cluster");
const clusterCustomerManagedKey_1 = require("./clusterCustomerManagedKey");
const clusterPrincipalAssignment_1 = require("./clusterPrincipalAssignment");
const database_1 = require("./database");
const databasePrincipal_1 = require("./databasePrincipal");
const databasePrincipalAssignment_1 = require("./databasePrincipalAssignment");
const eventGridDataConnection_1 = require("./eventGridDataConnection");
const eventhubDataConnection_1 = require("./eventhubDataConnection");
const iotHubDataConnection_1 = require("./iotHubDataConnection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration":
                return new attachedDatabaseConfiguration_1.AttachedDatabaseConfiguration(name, undefined, { urn });
            case "azure:kusto/cluster:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure:kusto/clusterCustomerManagedKey:ClusterCustomerManagedKey":
                return new clusterCustomerManagedKey_1.ClusterCustomerManagedKey(name, undefined, { urn });
            case "azure:kusto/clusterPrincipalAssignment:ClusterPrincipalAssignment":
                return new clusterPrincipalAssignment_1.ClusterPrincipalAssignment(name, undefined, { urn });
            case "azure:kusto/database:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure:kusto/databasePrincipal:DatabasePrincipal":
                return new databasePrincipal_1.DatabasePrincipal(name, undefined, { urn });
            case "azure:kusto/databasePrincipalAssignment:DatabasePrincipalAssignment":
                return new databasePrincipalAssignment_1.DatabasePrincipalAssignment(name, undefined, { urn });
            case "azure:kusto/eventGridDataConnection:EventGridDataConnection":
                return new eventGridDataConnection_1.EventGridDataConnection(name, undefined, { urn });
            case "azure:kusto/eventhubDataConnection:EventhubDataConnection":
                return new eventhubDataConnection_1.EventhubDataConnection(name, undefined, { urn });
            case "azure:kusto/iotHubDataConnection:IotHubDataConnection":
                return new iotHubDataConnection_1.IotHubDataConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "kusto/attachedDatabaseConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/cluster", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/clusterCustomerManagedKey", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/clusterPrincipalAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/database", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/databasePrincipal", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/databasePrincipalAssignment", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/eventGridDataConnection", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/eventhubDataConnection", _module);
pulumi.runtime.registerResourceModule("azure", "kusto/iotHubDataConnection", _module);
//# sourceMappingURL=index.js.map