"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./domain"));
__export(require("./domainTopic"));
__export(require("./eventSubscription"));
__export(require("./getDomainTopic"));
__export(require("./getSystemTopic"));
__export(require("./getTopic"));
__export(require("./systemTopic"));
__export(require("./systemTopicEventSubscription"));
__export(require("./topic"));
__export(require("./zMixins"));
// Import resources to register:
const domain_1 = require("./domain");
const domainTopic_1 = require("./domainTopic");
const eventSubscription_1 = require("./eventSubscription");
const getSystemTopic_1 = require("./getSystemTopic");
const systemTopic_1 = require("./systemTopic");
const systemTopicEventSubscription_1 = require("./systemTopicEventSubscription");
const topic_1 = require("./topic");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:eventgrid/domain:Domain":
                return new domain_1.Domain(name, undefined, { urn });
            case "azure:eventgrid/domainTopic:DomainTopic":
                return new domainTopic_1.DomainTopic(name, undefined, { urn });
            case "azure:eventgrid/eventSubscription:EventSubscription":
                return new eventSubscription_1.EventSubscription(name, undefined, { urn });
            case "azure:eventgrid/getSystemTopic:getSystemTopic":
                return new getSystemTopic_1.GetSystemTopic(name, undefined, { urn });
            case "azure:eventgrid/systemTopic:SystemTopic":
                return new systemTopic_1.SystemTopic(name, undefined, { urn });
            case "azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription":
                return new systemTopicEventSubscription_1.SystemTopicEventSubscription(name, undefined, { urn });
            case "azure:eventgrid/topic:Topic":
                return new topic_1.Topic(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "eventgrid/domain", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/domainTopic", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/eventSubscription", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/getSystemTopic", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/systemTopic", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/systemTopicEventSubscription", _module);
pulumi.runtime.registerResourceModule("azure", "eventgrid/topic", _module);
//# sourceMappingURL=index.js.map