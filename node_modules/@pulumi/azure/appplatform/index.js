"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getSpringCloudApp"));
__export(require("./getSpringCloudService"));
__export(require("./springCloudActiveDeployment"));
__export(require("./springCloudApp"));
__export(require("./springCloudAppCosmosDBAssociation"));
__export(require("./springCloudAppMysqlAssociation"));
__export(require("./springCloudAppRedisAssociation"));
__export(require("./springCloudCertificate"));
__export(require("./springCloudCustomDomain"));
__export(require("./springCloudJavaDeployment"));
__export(require("./springCloudService"));
// Import resources to register:
const springCloudActiveDeployment_1 = require("./springCloudActiveDeployment");
const springCloudApp_1 = require("./springCloudApp");
const springCloudAppCosmosDBAssociation_1 = require("./springCloudAppCosmosDBAssociation");
const springCloudAppMysqlAssociation_1 = require("./springCloudAppMysqlAssociation");
const springCloudAppRedisAssociation_1 = require("./springCloudAppRedisAssociation");
const springCloudCertificate_1 = require("./springCloudCertificate");
const springCloudCustomDomain_1 = require("./springCloudCustomDomain");
const springCloudJavaDeployment_1 = require("./springCloudJavaDeployment");
const springCloudService_1 = require("./springCloudService");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:appplatform/springCloudActiveDeployment:SpringCloudActiveDeployment":
                return new springCloudActiveDeployment_1.SpringCloudActiveDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudApp:SpringCloudApp":
                return new springCloudApp_1.SpringCloudApp(name, undefined, { urn });
            case "azure:appplatform/springCloudAppCosmosDBAssociation:SpringCloudAppCosmosDBAssociation":
                return new springCloudAppCosmosDBAssociation_1.SpringCloudAppCosmosDBAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation":
                return new springCloudAppMysqlAssociation_1.SpringCloudAppMysqlAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation":
                return new springCloudAppRedisAssociation_1.SpringCloudAppRedisAssociation(name, undefined, { urn });
            case "azure:appplatform/springCloudCertificate:SpringCloudCertificate":
                return new springCloudCertificate_1.SpringCloudCertificate(name, undefined, { urn });
            case "azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain":
                return new springCloudCustomDomain_1.SpringCloudCustomDomain(name, undefined, { urn });
            case "azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment":
                return new springCloudJavaDeployment_1.SpringCloudJavaDeployment(name, undefined, { urn });
            case "azure:appplatform/springCloudService:SpringCloudService":
                return new springCloudService_1.SpringCloudService(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudActiveDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudApp", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppCosmosDBAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppMysqlAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudAppRedisAssociation", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudCustomDomain", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudJavaDeployment", _module);
pulumi.runtime.registerResourceModule("azure", "appplatform/springCloudService", _module);
//# sourceMappingURL=index.js.map