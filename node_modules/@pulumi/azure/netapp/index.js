"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./account"));
__export(require("./getAccount"));
__export(require("./getPool"));
__export(require("./getSnapshot"));
__export(require("./getVolume"));
__export(require("./pool"));
__export(require("./snapshot"));
__export(require("./volume"));
// Import resources to register:
const account_1 = require("./account");
const pool_1 = require("./pool");
const snapshot_1 = require("./snapshot");
const volume_1 = require("./volume");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:netapp/account:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure:netapp/pool:Pool":
                return new pool_1.Pool(name, undefined, { urn });
            case "azure:netapp/snapshot:Snapshot":
                return new snapshot_1.Snapshot(name, undefined, { urn });
            case "azure:netapp/volume:Volume":
                return new volume_1.Volume(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "netapp/account", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/pool", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/snapshot", _module);
pulumi.runtime.registerResourceModule("azure", "netapp/volume", _module);
//# sourceMappingURL=index.js.map