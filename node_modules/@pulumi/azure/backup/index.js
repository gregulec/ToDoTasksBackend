"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./containerStorageAccount"));
__export(require("./getPolicyVM"));
__export(require("./policyFileShare"));
__export(require("./policyVM"));
__export(require("./protectedFileShare"));
__export(require("./protectedVM"));
// Import resources to register:
const containerStorageAccount_1 = require("./containerStorageAccount");
const policyFileShare_1 = require("./policyFileShare");
const policyVM_1 = require("./policyVM");
const protectedFileShare_1 = require("./protectedFileShare");
const protectedVM_1 = require("./protectedVM");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:backup/containerStorageAccount:ContainerStorageAccount":
                return new containerStorageAccount_1.ContainerStorageAccount(name, undefined, { urn });
            case "azure:backup/policyFileShare:PolicyFileShare":
                return new policyFileShare_1.PolicyFileShare(name, undefined, { urn });
            case "azure:backup/policyVM:PolicyVM":
                return new policyVM_1.PolicyVM(name, undefined, { urn });
            case "azure:backup/protectedFileShare:ProtectedFileShare":
                return new protectedFileShare_1.ProtectedFileShare(name, undefined, { urn });
            case "azure:backup/protectedVM:ProtectedVM":
                return new protectedVM_1.ProtectedVM(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "backup/containerStorageAccount", _module);
pulumi.runtime.registerResourceModule("azure", "backup/policyFileShare", _module);
pulumi.runtime.registerResourceModule("azure", "backup/policyVM", _module);
pulumi.runtime.registerResourceModule("azure", "backup/protectedFileShare", _module);
pulumi.runtime.registerResourceModule("azure", "backup/protectedVM", _module);
//# sourceMappingURL=index.js.map