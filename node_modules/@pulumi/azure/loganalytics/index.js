"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./cluster"));
__export(require("./clusterCustomerManagedKey"));
__export(require("./dataExportRule"));
__export(require("./dataSourceWindowsEvent"));
__export(require("./dataSourceWindowsPerformanceCounter"));
__export(require("./linkedService"));
__export(require("./linkedStorageAccount"));
__export(require("./savedSearch"));
__export(require("./storageInsights"));
// Import resources to register:
const cluster_1 = require("./cluster");
const clusterCustomerManagedKey_1 = require("./clusterCustomerManagedKey");
const dataExportRule_1 = require("./dataExportRule");
const dataSourceWindowsEvent_1 = require("./dataSourceWindowsEvent");
const dataSourceWindowsPerformanceCounter_1 = require("./dataSourceWindowsPerformanceCounter");
const linkedService_1 = require("./linkedService");
const linkedStorageAccount_1 = require("./linkedStorageAccount");
const savedSearch_1 = require("./savedSearch");
const storageInsights_1 = require("./storageInsights");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:loganalytics/cluster:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey":
                return new clusterCustomerManagedKey_1.ClusterCustomerManagedKey(name, undefined, { urn });
            case "azure:loganalytics/dataExportRule:DataExportRule":
                return new dataExportRule_1.DataExportRule(name, undefined, { urn });
            case "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent":
                return new dataSourceWindowsEvent_1.DataSourceWindowsEvent(name, undefined, { urn });
            case "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter":
                return new dataSourceWindowsPerformanceCounter_1.DataSourceWindowsPerformanceCounter(name, undefined, { urn });
            case "azure:loganalytics/linkedService:LinkedService":
                return new linkedService_1.LinkedService(name, undefined, { urn });
            case "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount":
                return new linkedStorageAccount_1.LinkedStorageAccount(name, undefined, { urn });
            case "azure:loganalytics/savedSearch:SavedSearch":
                return new savedSearch_1.SavedSearch(name, undefined, { urn });
            case "azure:loganalytics/storageInsights:StorageInsights":
                return new storageInsights_1.StorageInsights(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "loganalytics/cluster", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/clusterCustomerManagedKey", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataExportRule", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataSourceWindowsEvent", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataSourceWindowsPerformanceCounter", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/linkedService", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/linkedStorageAccount", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/savedSearch", _module);
pulumi.runtime.registerResourceModule("azure", "loganalytics/storageInsights", _module);
//# sourceMappingURL=index.js.map