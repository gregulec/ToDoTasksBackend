"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./asset"));
__export(require("./assetFilter"));
__export(require("./contentKeyPolicy"));
__export(require("./job"));
__export(require("./liveEvent"));
__export(require("./liveEventOutput"));
__export(require("./serviceAccount"));
__export(require("./streamingEndpoint"));
__export(require("./streamingLocator"));
__export(require("./streamingPolicy"));
__export(require("./transform"));
// Import resources to register:
const asset_1 = require("./asset");
const assetFilter_1 = require("./assetFilter");
const contentKeyPolicy_1 = require("./contentKeyPolicy");
const job_1 = require("./job");
const liveEvent_1 = require("./liveEvent");
const liveEventOutput_1 = require("./liveEventOutput");
const serviceAccount_1 = require("./serviceAccount");
const streamingEndpoint_1 = require("./streamingEndpoint");
const streamingLocator_1 = require("./streamingLocator");
const streamingPolicy_1 = require("./streamingPolicy");
const transform_1 = require("./transform");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:media/asset:Asset":
                return new asset_1.Asset(name, undefined, { urn });
            case "azure:media/assetFilter:AssetFilter":
                return new assetFilter_1.AssetFilter(name, undefined, { urn });
            case "azure:media/contentKeyPolicy:ContentKeyPolicy":
                return new contentKeyPolicy_1.ContentKeyPolicy(name, undefined, { urn });
            case "azure:media/job:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure:media/liveEvent:LiveEvent":
                return new liveEvent_1.LiveEvent(name, undefined, { urn });
            case "azure:media/liveEventOutput:LiveEventOutput":
                return new liveEventOutput_1.LiveEventOutput(name, undefined, { urn });
            case "azure:media/serviceAccount:ServiceAccount":
                return new serviceAccount_1.ServiceAccount(name, undefined, { urn });
            case "azure:media/streamingEndpoint:StreamingEndpoint":
                return new streamingEndpoint_1.StreamingEndpoint(name, undefined, { urn });
            case "azure:media/streamingLocator:StreamingLocator":
                return new streamingLocator_1.StreamingLocator(name, undefined, { urn });
            case "azure:media/streamingPolicy:StreamingPolicy":
                return new streamingPolicy_1.StreamingPolicy(name, undefined, { urn });
            case "azure:media/transform:Transform":
                return new transform_1.Transform(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "media/asset", _module);
pulumi.runtime.registerResourceModule("azure", "media/assetFilter", _module);
pulumi.runtime.registerResourceModule("azure", "media/contentKeyPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "media/job", _module);
pulumi.runtime.registerResourceModule("azure", "media/liveEvent", _module);
pulumi.runtime.registerResourceModule("azure", "media/liveEventOutput", _module);
pulumi.runtime.registerResourceModule("azure", "media/serviceAccount", _module);
pulumi.runtime.registerResourceModule("azure", "media/streamingEndpoint", _module);
pulumi.runtime.registerResourceModule("azure", "media/streamingLocator", _module);
pulumi.runtime.registerResourceModule("azure", "media/streamingPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "media/transform", _module);
//# sourceMappingURL=index.js.map