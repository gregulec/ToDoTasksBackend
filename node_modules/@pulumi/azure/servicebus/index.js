"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getNamespace"));
__export(require("./getNamespaceAuthorizationRule"));
__export(require("./getNamespaceDisasterRecoveryConfig"));
__export(require("./getQueue"));
__export(require("./getQueueAuthorizationRule"));
__export(require("./getSubscription"));
__export(require("./getTopic"));
__export(require("./getTopicAuthorizationRule"));
__export(require("./namespace"));
__export(require("./namespaceAuthorizationRule"));
__export(require("./namespaceDisasterRecoveryConfig"));
__export(require("./namespaceNetworkRuleSet"));
__export(require("./queue"));
__export(require("./queueAuthorizationRule"));
__export(require("./subscription"));
__export(require("./subscriptionRule"));
__export(require("./topic"));
__export(require("./topicAuthorizationRule"));
__export(require("./zMixins"));
// Import resources to register:
const namespace_1 = require("./namespace");
const namespaceAuthorizationRule_1 = require("./namespaceAuthorizationRule");
const namespaceDisasterRecoveryConfig_1 = require("./namespaceDisasterRecoveryConfig");
const namespaceNetworkRuleSet_1 = require("./namespaceNetworkRuleSet");
const queue_1 = require("./queue");
const queueAuthorizationRule_1 = require("./queueAuthorizationRule");
const subscription_1 = require("./subscription");
const subscriptionRule_1 = require("./subscriptionRule");
const topic_1 = require("./topic");
const topicAuthorizationRule_1 = require("./topicAuthorizationRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:servicebus/namespace:Namespace":
                return new namespace_1.Namespace(name, undefined, { urn });
            case "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule":
                return new namespaceAuthorizationRule_1.NamespaceAuthorizationRule(name, undefined, { urn });
            case "azure:servicebus/namespaceDisasterRecoveryConfig:NamespaceDisasterRecoveryConfig":
                return new namespaceDisasterRecoveryConfig_1.NamespaceDisasterRecoveryConfig(name, undefined, { urn });
            case "azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet":
                return new namespaceNetworkRuleSet_1.NamespaceNetworkRuleSet(name, undefined, { urn });
            case "azure:servicebus/queue:Queue":
                return new queue_1.Queue(name, undefined, { urn });
            case "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule":
                return new queueAuthorizationRule_1.QueueAuthorizationRule(name, undefined, { urn });
            case "azure:servicebus/subscription:Subscription":
                return new subscription_1.Subscription(name, undefined, { urn });
            case "azure:servicebus/subscriptionRule:SubscriptionRule":
                return new subscriptionRule_1.SubscriptionRule(name, undefined, { urn });
            case "azure:servicebus/topic:Topic":
                return new topic_1.Topic(name, undefined, { urn });
            case "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule":
                return new topicAuthorizationRule_1.TopicAuthorizationRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "servicebus/namespace", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceAuthorizationRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceDisasterRecoveryConfig", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceNetworkRuleSet", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/queue", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/queueAuthorizationRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/subscription", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/subscriptionRule", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/topic", _module);
pulumi.runtime.registerResourceModule("azure", "servicebus/topicAuthorizationRule", _module);
//# sourceMappingURL=index.js.map