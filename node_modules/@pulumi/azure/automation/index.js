"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./account"));
__export(require("./boolVariable"));
__export(require("./certificate"));
__export(require("./connection"));
__export(require("./connectionCertificate"));
__export(require("./connectionClassicCertificate"));
__export(require("./connectionServicePrincipal"));
__export(require("./credential"));
__export(require("./dateTimeVariable"));
__export(require("./dscConfiguration"));
__export(require("./dscNodeConfiguration"));
__export(require("./getAccount"));
__export(require("./getBoolVariable"));
__export(require("./getDateTimeVariable"));
__export(require("./getIntVariable"));
__export(require("./getStringVariable"));
__export(require("./intVariable"));
__export(require("./jobSchedule"));
__export(require("./module"));
__export(require("./runBook"));
__export(require("./schedule"));
__export(require("./stringVariable"));
// Import resources to register:
const account_1 = require("./account");
const boolVariable_1 = require("./boolVariable");
const certificate_1 = require("./certificate");
const connection_1 = require("./connection");
const connectionCertificate_1 = require("./connectionCertificate");
const connectionClassicCertificate_1 = require("./connectionClassicCertificate");
const connectionServicePrincipal_1 = require("./connectionServicePrincipal");
const credential_1 = require("./credential");
const dateTimeVariable_1 = require("./dateTimeVariable");
const dscConfiguration_1 = require("./dscConfiguration");
const dscNodeConfiguration_1 = require("./dscNodeConfiguration");
const intVariable_1 = require("./intVariable");
const jobSchedule_1 = require("./jobSchedule");
const module_1 = require("./module");
const runBook_1 = require("./runBook");
const schedule_1 = require("./schedule");
const stringVariable_1 = require("./stringVariable");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:automation/account:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure:automation/boolVariable:BoolVariable":
                return new boolVariable_1.BoolVariable(name, undefined, { urn });
            case "azure:automation/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure:automation/connection:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "azure:automation/connectionCertificate:ConnectionCertificate":
                return new connectionCertificate_1.ConnectionCertificate(name, undefined, { urn });
            case "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate":
                return new connectionClassicCertificate_1.ConnectionClassicCertificate(name, undefined, { urn });
            case "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal":
                return new connectionServicePrincipal_1.ConnectionServicePrincipal(name, undefined, { urn });
            case "azure:automation/credential:Credential":
                return new credential_1.Credential(name, undefined, { urn });
            case "azure:automation/dateTimeVariable:DateTimeVariable":
                return new dateTimeVariable_1.DateTimeVariable(name, undefined, { urn });
            case "azure:automation/dscConfiguration:DscConfiguration":
                return new dscConfiguration_1.DscConfiguration(name, undefined, { urn });
            case "azure:automation/dscNodeConfiguration:DscNodeConfiguration":
                return new dscNodeConfiguration_1.DscNodeConfiguration(name, undefined, { urn });
            case "azure:automation/intVariable:IntVariable":
                return new intVariable_1.IntVariable(name, undefined, { urn });
            case "azure:automation/jobSchedule:JobSchedule":
                return new jobSchedule_1.JobSchedule(name, undefined, { urn });
            case "azure:automation/module:Module":
                return new module_1.Module(name, undefined, { urn });
            case "azure:automation/runBook:RunBook":
                return new runBook_1.RunBook(name, undefined, { urn });
            case "azure:automation/schedule:Schedule":
                return new schedule_1.Schedule(name, undefined, { urn });
            case "azure:automation/stringVariable:StringVariable":
                return new stringVariable_1.StringVariable(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "automation/account", _module);
pulumi.runtime.registerResourceModule("azure", "automation/boolVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/certificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connection", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionClassicCertificate", _module);
pulumi.runtime.registerResourceModule("azure", "automation/connectionServicePrincipal", _module);
pulumi.runtime.registerResourceModule("azure", "automation/credential", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dateTimeVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dscConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "automation/dscNodeConfiguration", _module);
pulumi.runtime.registerResourceModule("azure", "automation/intVariable", _module);
pulumi.runtime.registerResourceModule("azure", "automation/jobSchedule", _module);
pulumi.runtime.registerResourceModule("azure", "automation/module", _module);
pulumi.runtime.registerResourceModule("azure", "automation/runBook", _module);
pulumi.runtime.registerResourceModule("azure", "automation/schedule", _module);
pulumi.runtime.registerResourceModule("azure", "automation/stringVariable", _module);
//# sourceMappingURL=index.js.map