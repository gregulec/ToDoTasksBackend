import { output as outputs } from "../types";
export declare let auxiliaryTenantIds: string[] | undefined;
/**
 * The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client
 * Certificate
 */
export declare let clientCertificatePassword: string | undefined;
/**
 * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
 * Principal using a Client Certificate.
 */
export declare let clientCertificatePath: string | undefined;
/**
 * The Client ID which should be used.
 */
export declare let clientId: string | undefined;
/**
 * The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.
 */
export declare let clientSecret: string | undefined;
/**
 * This will disable the x-ms-correlation-request-id header.
 */
export declare let disableCorrelationRequestId: boolean | undefined;
/**
 * This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.
 */
export declare let disableTerraformPartnerId: boolean | undefined;
/**
 * The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to
 * public.
 */
export declare let environment: string | undefined;
export declare let features: outputs.config.Features | undefined;
export declare let location: string | undefined;
/**
 * The Hostname which should be used for the Azure Metadata Service.
 */
export declare let metadataHost: string | undefined;
/**
 * Deprecated - replaced by `metadata_host`.
 */
export declare let metadataUrl: string | undefined;
/**
 * The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected
 * automatically.
 */
export declare let msiEndpoint: string | undefined;
/**
 * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.
 */
export declare let partnerId: string | undefined;
/**
 * [DEPRECATED] This will cause the AzureRM Provider to skip verifying the credentials being used are valid.
 */
export declare let skipCredentialsValidation: boolean | undefined;
/**
 * Should the AzureRM Provider skip registering all of the Resource Providers that it supports, if they're not already
 * registered?
 */
export declare let skipProviderRegistration: boolean | undefined;
/**
 * Should the AzureRM Provider use AzureAD to access the Storage Data Plane API's?
 */
export declare let storageUseAzuread: boolean | undefined;
/**
 * The Subscription ID which should be used.
 */
export declare let subscriptionId: string | undefined;
/**
 * The Tenant ID which should be used.
 */
export declare let tenantId: string | undefined;
/**
 * Allowed Managed Service Identity be used for Authentication.
 */
export declare let useMsi: boolean | undefined;
