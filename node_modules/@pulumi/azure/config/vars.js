"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
let __config = new pulumi.Config("azure");
exports.auxiliaryTenantIds = __config.getObject("auxiliaryTenantIds");
/**
 * The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client
 * Certificate
 */
exports.clientCertificatePassword = __config.get("clientCertificatePassword");
/**
 * The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
 * Principal using a Client Certificate.
 */
exports.clientCertificatePath = __config.get("clientCertificatePath");
/**
 * The Client ID which should be used.
 */
exports.clientId = __config.get("clientId");
/**
 * The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.
 */
exports.clientSecret = __config.get("clientSecret");
/**
 * This will disable the x-ms-correlation-request-id header.
 */
exports.disableCorrelationRequestId = __config.getObject("disableCorrelationRequestId");
/**
 * This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.
 */
exports.disableTerraformPartnerId = __config.getObject("disableTerraformPartnerId");
/**
 * The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to
 * public.
 */
exports.environment = __config.get("environment") || (utilities.getEnv("AZURE_ENVIRONMENT", "ARM_ENVIRONMENT") || "public");
exports.features = __config.getObject("features");
exports.location = __config.get("location") || utilities.getEnv("ARM_LOCATION");
/**
 * The Hostname which should be used for the Azure Metadata Service.
 */
exports.metadataHost = __config.get("metadataHost") || utilities.getEnv("ARM_METADATA_HOSTNAME");
/**
 * Deprecated - replaced by `metadata_host`.
 */
exports.metadataUrl = __config.get("metadataUrl") || utilities.getEnv("ARM_METADATA_URL");
/**
 * The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected
 * automatically.
 */
exports.msiEndpoint = __config.get("msiEndpoint");
/**
 * A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.
 */
exports.partnerId = __config.get("partnerId");
/**
 * [DEPRECATED] This will cause the AzureRM Provider to skip verifying the credentials being used are valid.
 */
exports.skipCredentialsValidation = __config.getObject("skipCredentialsValidation");
/**
 * Should the AzureRM Provider skip registering all of the Resource Providers that it supports, if they're not already
 * registered?
 */
exports.skipProviderRegistration = __config.getObject("skipProviderRegistration") || (utilities.getEnvBoolean("ARM_SKIP_PROVIDER_REGISTRATION") || false);
/**
 * Should the AzureRM Provider use AzureAD to access the Storage Data Plane API's?
 */
exports.storageUseAzuread = __config.getObject("storageUseAzuread") || (utilities.getEnvBoolean("ARM_STORAGE_USE_AZUREAD") || false);
/**
 * The Subscription ID which should be used.
 */
exports.subscriptionId = __config.get("subscriptionId") || (utilities.getEnv("ARM_SUBSCRIPTION_ID") || "");
/**
 * The Tenant ID which should be used.
 */
exports.tenantId = __config.get("tenantId");
/**
 * Allowed Managed Service Identity be used for Authentication.
 */
exports.useMsi = __config.getObject("useMsi");
//# sourceMappingURL=vars.js.map