"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./aaaaRecord"));
__export(require("./arecord"));
__export(require("./caaRecord"));
__export(require("./cnameRecord"));
__export(require("./getZone"));
__export(require("./mxRecord"));
__export(require("./nsRecord"));
__export(require("./ptrRecord"));
__export(require("./srvRecord"));
__export(require("./txtRecord"));
__export(require("./zone"));
// Import resources to register:
const arecord_1 = require("./arecord");
const aaaaRecord_1 = require("./aaaaRecord");
const cnameRecord_1 = require("./cnameRecord");
const caaRecord_1 = require("./caaRecord");
const mxRecord_1 = require("./mxRecord");
const nsRecord_1 = require("./nsRecord");
const ptrRecord_1 = require("./ptrRecord");
const srvRecord_1 = require("./srvRecord");
const txtRecord_1 = require("./txtRecord");
const zone_1 = require("./zone");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:dns/aRecord:ARecord":
                return new arecord_1.ARecord(name, undefined, { urn });
            case "azure:dns/aaaaRecord:AaaaRecord":
                return new aaaaRecord_1.AaaaRecord(name, undefined, { urn });
            case "azure:dns/cNameRecord:CNameRecord":
                return new cnameRecord_1.CNameRecord(name, undefined, { urn });
            case "azure:dns/caaRecord:CaaRecord":
                return new caaRecord_1.CaaRecord(name, undefined, { urn });
            case "azure:dns/mxRecord:MxRecord":
                return new mxRecord_1.MxRecord(name, undefined, { urn });
            case "azure:dns/nsRecord:NsRecord":
                return new nsRecord_1.NsRecord(name, undefined, { urn });
            case "azure:dns/ptrRecord:PtrRecord":
                return new ptrRecord_1.PtrRecord(name, undefined, { urn });
            case "azure:dns/srvRecord:SrvRecord":
                return new srvRecord_1.SrvRecord(name, undefined, { urn });
            case "azure:dns/txtRecord:TxtRecord":
                return new txtRecord_1.TxtRecord(name, undefined, { urn });
            case "azure:dns/zone:Zone":
                return new zone_1.Zone(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "dns/aRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/aaaaRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/cNameRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/caaRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/mxRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/nsRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/ptrRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/srvRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/txtRecord", _module);
pulumi.runtime.registerResourceModule("azure", "dns/zone", _module);
//# sourceMappingURL=index.js.map