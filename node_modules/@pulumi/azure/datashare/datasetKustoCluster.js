"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a Data Share Kusto Cluster Dataset.
 *
 * ## Import
 *
 * Data Share Kusto Cluster Datasets can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:datashare/datasetKustoCluster:DatasetKustoCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1/dataSets/dataSet1
 * ```
 */
class DatasetKustoCluster extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["kustoClusterId"] = state ? state.kustoClusterId : undefined;
            inputs["kustoClusterLocation"] = state ? state.kustoClusterLocation : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["shareId"] = state ? state.shareId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.kustoClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoClusterId'");
            }
            if ((!args || args.shareId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shareId'");
            }
            inputs["kustoClusterId"] = args ? args.kustoClusterId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["shareId"] = args ? args.shareId : undefined;
            inputs["displayName"] = undefined /*out*/;
            inputs["kustoClusterLocation"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(DatasetKustoCluster.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DatasetKustoCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DatasetKustoCluster(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DatasetKustoCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasetKustoCluster.__pulumiType;
    }
}
exports.DatasetKustoCluster = DatasetKustoCluster;
/** @internal */
DatasetKustoCluster.__pulumiType = 'azure:datashare/datasetKustoCluster:DatasetKustoCluster';
//# sourceMappingURL=datasetKustoCluster.js.map