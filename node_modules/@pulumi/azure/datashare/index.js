"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./account"));
__export(require("./datasetBlobStorage"));
__export(require("./datasetDataLakeGen1"));
__export(require("./datasetDataLakeGen2"));
__export(require("./datasetKustoCluster"));
__export(require("./datasetKustoDatabase"));
__export(require("./getAccount"));
__export(require("./getDatasetBlobStorage"));
__export(require("./getDatasetDataLakeGen1"));
__export(require("./getDatasetDataLakeGen2"));
__export(require("./getDatasetKustoCluster"));
__export(require("./getDatasetKustoDatabase"));
__export(require("./getShare"));
__export(require("./share"));
// Import resources to register:
const account_1 = require("./account");
const datasetBlobStorage_1 = require("./datasetBlobStorage");
const datasetDataLakeGen1_1 = require("./datasetDataLakeGen1");
const datasetDataLakeGen2_1 = require("./datasetDataLakeGen2");
const datasetKustoCluster_1 = require("./datasetKustoCluster");
const datasetKustoDatabase_1 = require("./datasetKustoDatabase");
const share_1 = require("./share");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:datashare/account:Account":
                return new account_1.Account(name, undefined, { urn });
            case "azure:datashare/datasetBlobStorage:DatasetBlobStorage":
                return new datasetBlobStorage_1.DatasetBlobStorage(name, undefined, { urn });
            case "azure:datashare/datasetDataLakeGen1:DatasetDataLakeGen1":
                return new datasetDataLakeGen1_1.DatasetDataLakeGen1(name, undefined, { urn });
            case "azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2":
                return new datasetDataLakeGen2_1.DatasetDataLakeGen2(name, undefined, { urn });
            case "azure:datashare/datasetKustoCluster:DatasetKustoCluster":
                return new datasetKustoCluster_1.DatasetKustoCluster(name, undefined, { urn });
            case "azure:datashare/datasetKustoDatabase:DatasetKustoDatabase":
                return new datasetKustoDatabase_1.DatasetKustoDatabase(name, undefined, { urn });
            case "azure:datashare/share:Share":
                return new share_1.Share(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "datashare/account", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetBlobStorage", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetDataLakeGen1", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetDataLakeGen2", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetKustoCluster", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/datasetKustoDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "datashare/share", _module);
//# sourceMappingURL=index.js.map