"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./backupInstanceDisk"));
__export(require("./backupInstancePostgresql"));
__export(require("./backupPolicyBlobStorage"));
__export(require("./backupPolicyDisk"));
__export(require("./backupPolicyPostgresql"));
__export(require("./backupVault"));
__export(require("./getBackupVault"));
// Import resources to register:
const backupInstanceDisk_1 = require("./backupInstanceDisk");
const backupInstancePostgresql_1 = require("./backupInstancePostgresql");
const backupPolicyBlobStorage_1 = require("./backupPolicyBlobStorage");
const backupPolicyDisk_1 = require("./backupPolicyDisk");
const backupPolicyPostgresql_1 = require("./backupPolicyPostgresql");
const backupVault_1 = require("./backupVault");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:dataprotection/backupInstanceDisk:BackupInstanceDisk":
                return new backupInstanceDisk_1.BackupInstanceDisk(name, undefined, { urn });
            case "azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql":
                return new backupInstancePostgresql_1.BackupInstancePostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyBlobStorage:BackupPolicyBlobStorage":
                return new backupPolicyBlobStorage_1.BackupPolicyBlobStorage(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyDisk:BackupPolicyDisk":
                return new backupPolicyDisk_1.BackupPolicyDisk(name, undefined, { urn });
            case "azure:dataprotection/backupPolicyPostgresql:BackupPolicyPostgresql":
                return new backupPolicyPostgresql_1.BackupPolicyPostgresql(name, undefined, { urn });
            case "azure:dataprotection/backupVault:BackupVault":
                return new backupVault_1.BackupVault(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstanceDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupInstancePostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyBlobStorage", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyDisk", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupPolicyPostgresql", _module);
pulumi.runtime.registerResourceModule("azure", "dataprotection/backupVault", _module);
//# sourceMappingURL=index.js.map