"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./cache"));
__export(require("./cacheAccessPolicy"));
__export(require("./cacheBlobNfsTarget"));
__export(require("./cacheBlobTarget"));
__export(require("./cacheNfsTarget"));
// Import resources to register:
const cache_1 = require("./cache");
const cacheAccessPolicy_1 = require("./cacheAccessPolicy");
const cacheBlobNfsTarget_1 = require("./cacheBlobNfsTarget");
const cacheBlobTarget_1 = require("./cacheBlobTarget");
const cacheNfsTarget_1 = require("./cacheNfsTarget");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:hpc/cache:Cache":
                return new cache_1.Cache(name, undefined, { urn });
            case "azure:hpc/cacheAccessPolicy:CacheAccessPolicy":
                return new cacheAccessPolicy_1.CacheAccessPolicy(name, undefined, { urn });
            case "azure:hpc/cacheBlobNfsTarget:CacheBlobNfsTarget":
                return new cacheBlobNfsTarget_1.CacheBlobNfsTarget(name, undefined, { urn });
            case "azure:hpc/cacheBlobTarget:CacheBlobTarget":
                return new cacheBlobTarget_1.CacheBlobTarget(name, undefined, { urn });
            case "azure:hpc/cacheNfsTarget:CacheNfsTarget":
                return new cacheNfsTarget_1.CacheNfsTarget(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "hpc/cache", _module);
pulumi.runtime.registerResourceModule("azure", "hpc/cacheAccessPolicy", _module);
pulumi.runtime.registerResourceModule("azure", "hpc/cacheBlobNfsTarget", _module);
pulumi.runtime.registerResourceModule("azure", "hpc/cacheBlobTarget", _module);
pulumi.runtime.registerResourceModule("azure", "hpc/cacheNfsTarget", _module);
//# sourceMappingURL=index.js.map