"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./cache"));
__export(require("./enterpriseCluster"));
__export(require("./enterpriseDatabase"));
__export(require("./firewallRule"));
__export(require("./getCache"));
__export(require("./getEnterpriseDatabase"));
__export(require("./linkedServer"));
// Import resources to register:
const cache_1 = require("./cache");
const enterpriseCluster_1 = require("./enterpriseCluster");
const enterpriseDatabase_1 = require("./enterpriseDatabase");
const firewallRule_1 = require("./firewallRule");
const linkedServer_1 = require("./linkedServer");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure:redis/cache:Cache":
                return new cache_1.Cache(name, undefined, { urn });
            case "azure:redis/enterpriseCluster:EnterpriseCluster":
                return new enterpriseCluster_1.EnterpriseCluster(name, undefined, { urn });
            case "azure:redis/enterpriseDatabase:EnterpriseDatabase":
                return new enterpriseDatabase_1.EnterpriseDatabase(name, undefined, { urn });
            case "azure:redis/firewallRule:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure:redis/linkedServer:LinkedServer":
                return new linkedServer_1.LinkedServer(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "redis/cache", _module);
pulumi.runtime.registerResourceModule("azure", "redis/enterpriseCluster", _module);
pulumi.runtime.registerResourceModule("azure", "redis/enterpriseDatabase", _module);
pulumi.runtime.registerResourceModule("azure", "redis/firewallRule", _module);
pulumi.runtime.registerResourceModule("azure", "redis/linkedServer", _module);
//# sourceMappingURL=index.js.map