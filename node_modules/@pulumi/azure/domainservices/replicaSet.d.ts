import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Replica Set for an Active Directory Domain Service.
 *
 * ## Import
 *
 * Domain Service Replica Sets can be imported using the resource ID of the parent Domain Service and the Replica Set ID, e.g.
 *
 * ```sh
 *  $ pulumi import azure:domainservices/replicaSet:ReplicaSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AAD/domainServices/instance1/replicaSets/00000000-0000-0000-0000-000000000000
 * ```
 */
export declare class ReplicaSet extends pulumi.CustomResource {
    /**
     * Get an existing ReplicaSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicaSetState, opts?: pulumi.CustomResourceOptions): ReplicaSet;
    /**
     * Returns true if the given object is an instance of ReplicaSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReplicaSet;
    /**
     * A list of subnet IP addresses for the domain controllers in this Replica Set, typically two.
     */
    readonly domainControllerIpAddresses: pulumi.Output<string[]>;
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    readonly domainServiceId: pulumi.Output<string>;
    /**
     * The publicly routable IP address for the domain controllers in this Replica Set.
     */
    readonly externalAccessIpAddress: pulumi.Output<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The current service status for the replica set.
     */
    readonly serviceStatus: pulumi.Output<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * Create a ReplicaSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicaSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ReplicaSet resources.
 */
export interface ReplicaSetState {
    /**
     * A list of subnet IP addresses for the domain controllers in this Replica Set, typically two.
     */
    domainControllerIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    domainServiceId?: pulumi.Input<string>;
    /**
     * The publicly routable IP address for the domain controllers in this Replica Set.
     */
    externalAccessIpAddress?: pulumi.Input<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The current service status for the replica set.
     */
    serviceStatus?: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    subnetId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ReplicaSet resource.
 */
export interface ReplicaSetArgs {
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    domainServiceId: pulumi.Input<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    subnetId: pulumi.Input<string>;
}
