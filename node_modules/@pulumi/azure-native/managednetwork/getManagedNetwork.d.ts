import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * The Managed Network resource
 * API Version: 2019-06-01-preview.
 */
export declare function getManagedNetwork(args: GetManagedNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedNetworkResult>;
export interface GetManagedNetworkArgs {
    /**
     * The name of the Managed Network.
     */
    managedNetworkName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The Managed Network resource
 */
export interface GetManagedNetworkResult {
    /**
     * The collection of groups and policies concerned with connectivity
     */
    readonly connectivity: outputs.managednetwork.ConnectivityCollectionResponse;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Provisioning state of the ManagedNetwork resource.
     */
    readonly provisioningState: string;
    /**
     * The collection of management groups, subscriptions, virtual networks, and subnets by the Managed Network. This is a read-only property that is reflective of all ScopeAssignments for this Managed Network
     */
    readonly scope?: outputs.managednetwork.ScopeResponse;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    readonly type: string;
}
