"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiManagementService = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A single API Management service resource in List or Get response.
 */
class ApiManagementService extends pulumi.CustomResource {
    /**
     * Create a ApiManagementService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        var _a, _b;
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.publisherEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publisherEmail'");
            }
            if ((!args || args.publisherName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publisherName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            inputs["additionalLocations"] = args ? args.additionalLocations : undefined;
            inputs["certificates"] = args ? args.certificates : undefined;
            inputs["customProperties"] = args ? args.customProperties : undefined;
            inputs["enableClientCertificate"] = (_a = (args ? args.enableClientCertificate : undefined)) !== null && _a !== void 0 ? _a : false;
            inputs["hostnameConfigurations"] = args ? args.hostnameConfigurations : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["notificationSenderEmail"] = args ? args.notificationSenderEmail : undefined;
            inputs["publisherEmail"] = args ? args.publisherEmail : undefined;
            inputs["publisherName"] = args ? args.publisherName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["virtualNetworkConfiguration"] = args ? args.virtualNetworkConfiguration : undefined;
            inputs["virtualNetworkType"] = (_b = (args ? args.virtualNetworkType : undefined)) !== null && _b !== void 0 ? _b : "None";
            inputs["createdAtUtc"] = undefined /*out*/;
            inputs["developerPortalUrl"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["gatewayRegionalUrl"] = undefined /*out*/;
            inputs["gatewayUrl"] = undefined /*out*/;
            inputs["managementApiUrl"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["portalUrl"] = undefined /*out*/;
            inputs["privateIPAddresses"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicIPAddresses"] = undefined /*out*/;
            inputs["scmUrl"] = undefined /*out*/;
            inputs["targetProvisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["additionalLocations"] = undefined /*out*/;
            inputs["certificates"] = undefined /*out*/;
            inputs["createdAtUtc"] = undefined /*out*/;
            inputs["customProperties"] = undefined /*out*/;
            inputs["developerPortalUrl"] = undefined /*out*/;
            inputs["enableClientCertificate"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["gatewayRegionalUrl"] = undefined /*out*/;
            inputs["gatewayUrl"] = undefined /*out*/;
            inputs["hostnameConfigurations"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["managementApiUrl"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["notificationSenderEmail"] = undefined /*out*/;
            inputs["portalUrl"] = undefined /*out*/;
            inputs["privateIPAddresses"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicIPAddresses"] = undefined /*out*/;
            inputs["publisherEmail"] = undefined /*out*/;
            inputs["publisherName"] = undefined /*out*/;
            inputs["scmUrl"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["targetProvisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["virtualNetworkConfiguration"] = undefined /*out*/;
            inputs["virtualNetworkType"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:apimanagement/v20190101:ApiManagementService" }, { type: "azure-native:apimanagement:ApiManagementService" }, { type: "azure-nextgen:apimanagement:ApiManagementService" }, { type: "azure-native:apimanagement/v20160707:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20160707:ApiManagementService" }, { type: "azure-native:apimanagement/v20161010:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20161010:ApiManagementService" }, { type: "azure-native:apimanagement/v20170301:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20170301:ApiManagementService" }, { type: "azure-native:apimanagement/v20180101:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20180101:ApiManagementService" }, { type: "azure-native:apimanagement/v20180601preview:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20180601preview:ApiManagementService" }, { type: "azure-native:apimanagement/v20191201:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20191201:ApiManagementService" }, { type: "azure-native:apimanagement/v20191201preview:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20191201preview:ApiManagementService" }, { type: "azure-native:apimanagement/v20200601preview:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20200601preview:ApiManagementService" }, { type: "azure-native:apimanagement/v20201201:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20201201:ApiManagementService" }, { type: "azure-native:apimanagement/v20210101preview:ApiManagementService" }, { type: "azure-nextgen:apimanagement/v20210101preview:ApiManagementService" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ApiManagementService.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ApiManagementService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ApiManagementService(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiManagementService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiManagementService.__pulumiType;
    }
}
exports.ApiManagementService = ApiManagementService;
/** @internal */
ApiManagementService.__pulumiType = 'azure-native:apimanagement/v20190101:ApiManagementService';
//# sourceMappingURL=apiManagementService.js.map