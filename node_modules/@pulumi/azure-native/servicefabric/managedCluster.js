"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The manged cluster resource
 *
 * API Version: 2020-01-01-preview.
 */
class ManagedCluster extends pulumi.CustomResource {
    /**
     * Create a ManagedCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        var _a, _b;
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.adminUserName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUserName'");
            }
            if ((!args || args.dnsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["addonFeatures"] = args ? args.addonFeatures : undefined;
            inputs["adminPassword"] = args ? args.adminPassword : undefined;
            inputs["adminUserName"] = args ? args.adminUserName : undefined;
            inputs["azureActiveDirectory"] = args ? args.azureActiveDirectory : undefined;
            inputs["clientConnectionPort"] = (_a = (args ? args.clientConnectionPort : undefined)) !== null && _a !== void 0 ? _a : 19000;
            inputs["clients"] = args ? args.clients : undefined;
            inputs["clusterCodeVersion"] = args ? args.clusterCodeVersion : undefined;
            inputs["clusterName"] = args ? args.clusterName : undefined;
            inputs["dnsName"] = args ? args.dnsName : undefined;
            inputs["fabricSettings"] = args ? args.fabricSettings : undefined;
            inputs["httpGatewayConnectionPort"] = (_b = (args ? args.httpGatewayConnectionPort : undefined)) !== null && _b !== void 0 ? _b : 19080;
            inputs["loadBalancingRules"] = args ? args.loadBalancingRules : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["clusterCertificateThumbprint"] = undefined /*out*/;
            inputs["clusterId"] = undefined /*out*/;
            inputs["clusterState"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["fqdn"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["addonFeatures"] = undefined /*out*/;
            inputs["adminPassword"] = undefined /*out*/;
            inputs["adminUserName"] = undefined /*out*/;
            inputs["azureActiveDirectory"] = undefined /*out*/;
            inputs["clientConnectionPort"] = undefined /*out*/;
            inputs["clients"] = undefined /*out*/;
            inputs["clusterCertificateThumbprint"] = undefined /*out*/;
            inputs["clusterCodeVersion"] = undefined /*out*/;
            inputs["clusterId"] = undefined /*out*/;
            inputs["clusterState"] = undefined /*out*/;
            inputs["dnsName"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["fabricSettings"] = undefined /*out*/;
            inputs["fqdn"] = undefined /*out*/;
            inputs["httpGatewayConnectionPort"] = undefined /*out*/;
            inputs["loadBalancingRules"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:servicefabric:ManagedCluster" }, { type: "azure-native:servicefabric/v20200101preview:ManagedCluster" }, { type: "azure-nextgen:servicefabric/v20200101preview:ManagedCluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedCluster.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ManagedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ManagedCluster(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedCluster.__pulumiType;
    }
}
exports.ManagedCluster = ManagedCluster;
/** @internal */
ManagedCluster.__pulumiType = 'azure-native:servicefabric:ManagedCluster';
//# sourceMappingURL=managedCluster.js.map