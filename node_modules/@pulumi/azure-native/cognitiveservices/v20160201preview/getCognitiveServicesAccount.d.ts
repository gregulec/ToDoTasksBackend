import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU.
 */
export declare function getCognitiveServicesAccount(args: GetCognitiveServicesAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitiveServicesAccountResult>;
export interface GetCognitiveServicesAccountArgs {
    /**
     * The name of the cognitive services account within the specified resource group. Cognitive Services account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
     */
    accountName: string;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: string;
}
/**
 * Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU.
 */
export interface GetCognitiveServicesAccountResult {
    /**
     * Endpoint of the created account
     */
    readonly endpoint?: string;
    /**
     * Entity Tag
     */
    readonly etag?: string;
    /**
     * The id of the created account
     */
    readonly id?: string;
    /**
     * Type of cognitive service account.
     */
    readonly kind?: string;
    /**
     * The location of the resource
     */
    readonly location?: string;
    /**
     * The name of the created account
     */
    readonly name?: string;
    /**
     * Gets the status of the cognitive services account at the time the operation was called.
     */
    readonly provisioningState: string;
    /**
     * The SKU of the cognitive services account.
     */
    readonly sku?: outputs.cognitiveservices.v20160201preview.SkuResponse;
    /**
     * Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type?: string;
}
