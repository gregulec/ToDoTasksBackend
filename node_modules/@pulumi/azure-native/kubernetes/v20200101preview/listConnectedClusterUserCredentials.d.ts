import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * The list of credential result response.
 */
export declare function listConnectedClusterUserCredentials(args: ListConnectedClusterUserCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<ListConnectedClusterUserCredentialsResult>;
export interface ListConnectedClusterUserCredentialsArgs {
    /**
     * The mode of client authentication.
     */
    authenticationMethod: string | enums.kubernetes.v20200101preview.AuthenticationMethod;
    /**
     * Parameter to indicate whether the request is for client side proxy or not
     */
    clientProxy?: boolean;
    /**
     * The name of the Kubernetes cluster on which get is called.
     */
    clusterName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Authentication token value.
     */
    value: inputs.kubernetes.v20200101preview.AuthenticationDetailsValue;
}
/**
 * The list of credential result response.
 */
export interface ListConnectedClusterUserCredentialsResult {
    /**
     * Contains the REP (rendezvous endpoint) and “Sender” access token.
     */
    readonly hybridConnectionConfig: outputs.kubernetes.v20200101preview.HybridConnectionConfigResponse;
    /**
     * Base64-encoded Kubernetes configuration file.
     */
    readonly kubeconfigs: outputs.kubernetes.v20200101preview.CredentialResultResponse[];
}
