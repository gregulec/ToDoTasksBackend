"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./agreement"), exports);
__exportStar(require("./certificate"), exports);
__exportStar(require("./getAgreement"), exports);
__exportStar(require("./getCertificate"), exports);
__exportStar(require("./getIntegrationAccount"), exports);
__exportStar(require("./getIntegrationAccountAssembly"), exports);
__exportStar(require("./getIntegrationAccountBatchConfiguration"), exports);
__exportStar(require("./getMap"), exports);
__exportStar(require("./getPartner"), exports);
__exportStar(require("./getRosettaNetProcessConfiguration"), exports);
__exportStar(require("./getSchema"), exports);
__exportStar(require("./getSession"), exports);
__exportStar(require("./getWorkflow"), exports);
__exportStar(require("./integrationAccount"), exports);
__exportStar(require("./integrationAccountAssembly"), exports);
__exportStar(require("./integrationAccountBatchConfiguration"), exports);
__exportStar(require("./listAgreementContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountAssemblyContentCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountCallbackUrl"), exports);
__exportStar(require("./listIntegrationAccountKeyVaultKeys"), exports);
__exportStar(require("./listMapContentCallbackUrl"), exports);
__exportStar(require("./listPartnerContentCallbackUrl"), exports);
__exportStar(require("./listSchemaContentCallbackUrl"), exports);
__exportStar(require("./listWorkflowCallbackUrl"), exports);
__exportStar(require("./listWorkflowRunActionExpressionTraces"), exports);
__exportStar(require("./listWorkflowRunActionRepetitionExpressionTraces"), exports);
__exportStar(require("./listWorkflowTriggerCallbackUrl"), exports);
__exportStar(require("./listWorkflowVersionCallbackUrl"), exports);
__exportStar(require("./map"), exports);
__exportStar(require("./partner"), exports);
__exportStar(require("./rosettaNetProcessConfiguration"), exports);
__exportStar(require("./schema"), exports);
__exportStar(require("./session"), exports);
__exportStar(require("./workflow"), exports);
// Export enums:
__exportStar(require("../../types/enums/logic/v20160601"), exports);
// Import resources to register:
const agreement_1 = require("./agreement");
const certificate_1 = require("./certificate");
const integrationAccount_1 = require("./integrationAccount");
const integrationAccountAssembly_1 = require("./integrationAccountAssembly");
const integrationAccountBatchConfiguration_1 = require("./integrationAccountBatchConfiguration");
const map_1 = require("./map");
const partner_1 = require("./partner");
const rosettaNetProcessConfiguration_1 = require("./rosettaNetProcessConfiguration");
const schema_1 = require("./schema");
const session_1 = require("./session");
const workflow_1 = require("./workflow");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:logic/v20160601:Agreement":
                return new agreement_1.Agreement(name, undefined, { urn });
            case "azure-native:logic/v20160601:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure-native:logic/v20160601:IntegrationAccount":
                return new integrationAccount_1.IntegrationAccount(name, undefined, { urn });
            case "azure-native:logic/v20160601:IntegrationAccountAssembly":
                return new integrationAccountAssembly_1.IntegrationAccountAssembly(name, undefined, { urn });
            case "azure-native:logic/v20160601:IntegrationAccountBatchConfiguration":
                return new integrationAccountBatchConfiguration_1.IntegrationAccountBatchConfiguration(name, undefined, { urn });
            case "azure-native:logic/v20160601:Map":
                return new map_1.Map(name, undefined, { urn });
            case "azure-native:logic/v20160601:Partner":
                return new partner_1.Partner(name, undefined, { urn });
            case "azure-native:logic/v20160601:RosettaNetProcessConfiguration":
                return new rosettaNetProcessConfiguration_1.RosettaNetProcessConfiguration(name, undefined, { urn });
            case "azure-native:logic/v20160601:Schema":
                return new schema_1.Schema(name, undefined, { urn });
            case "azure-native:logic/v20160601:Session":
                return new session_1.Session(name, undefined, { urn });
            case "azure-native:logic/v20160601:Workflow":
                return new workflow_1.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "logic/v20160601", _module);
//# sourceMappingURL=index.js.map