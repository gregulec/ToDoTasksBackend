"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getIntegrationAccount"), exports);
__exportStar(require("./getIntegrationAccountAgreement"), exports);
__exportStar(require("./getIntegrationAccountCertificate"), exports);
__exportStar(require("./getIntegrationAccountMap"), exports);
__exportStar(require("./getIntegrationAccountPartner"), exports);
__exportStar(require("./getIntegrationAccountSchema"), exports);
__exportStar(require("./integrationAccount"), exports);
__exportStar(require("./integrationAccountAgreement"), exports);
__exportStar(require("./integrationAccountCertificate"), exports);
__exportStar(require("./integrationAccountMap"), exports);
__exportStar(require("./integrationAccountPartner"), exports);
__exportStar(require("./integrationAccountSchema"), exports);
__exportStar(require("./listIntegrationAccountCallbackUrl"), exports);
// Export enums:
__exportStar(require("../../types/enums/logic/v20150801preview"), exports);
// Import resources to register:
const integrationAccount_1 = require("./integrationAccount");
const integrationAccountAgreement_1 = require("./integrationAccountAgreement");
const integrationAccountCertificate_1 = require("./integrationAccountCertificate");
const integrationAccountMap_1 = require("./integrationAccountMap");
const integrationAccountPartner_1 = require("./integrationAccountPartner");
const integrationAccountSchema_1 = require("./integrationAccountSchema");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:logic/v20150801preview:IntegrationAccount":
                return new integrationAccount_1.IntegrationAccount(name, undefined, { urn });
            case "azure-native:logic/v20150801preview:IntegrationAccountAgreement":
                return new integrationAccountAgreement_1.IntegrationAccountAgreement(name, undefined, { urn });
            case "azure-native:logic/v20150801preview:IntegrationAccountCertificate":
                return new integrationAccountCertificate_1.IntegrationAccountCertificate(name, undefined, { urn });
            case "azure-native:logic/v20150801preview:IntegrationAccountMap":
                return new integrationAccountMap_1.IntegrationAccountMap(name, undefined, { urn });
            case "azure-native:logic/v20150801preview:IntegrationAccountPartner":
                return new integrationAccountPartner_1.IntegrationAccountPartner(name, undefined, { urn });
            case "azure-native:logic/v20150801preview:IntegrationAccountSchema":
                return new integrationAccountSchema_1.IntegrationAccountSchema(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "logic/v20150801preview", _module);
//# sourceMappingURL=index.js.map