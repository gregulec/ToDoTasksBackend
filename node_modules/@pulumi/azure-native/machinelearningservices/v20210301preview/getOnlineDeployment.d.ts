import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
export declare function getOnlineDeployment(args: GetOnlineDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetOnlineDeploymentResult>;
export interface GetOnlineDeploymentArgs {
    /**
     * Inference Endpoint Deployment name.
     */
    deploymentName: string;
    /**
     * Inference endpoint name.
     */
    endpointName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: string;
}
export interface GetOnlineDeploymentResult {
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Service identity associated with a resource.
     */
    readonly identity?: outputs.machinelearningservices.v20210301preview.ResourceIdentityResponse;
    /**
     * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.
     */
    readonly kind?: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Additional attributes of the entity.
     */
    readonly properties: outputs.machinelearningservices.v20210301preview.K8sOnlineDeploymentResponse | outputs.machinelearningservices.v20210301preview.ManagedOnlineDeploymentResponse;
    /**
     * System data associated with resource provider
     */
    readonly systemData: outputs.machinelearningservices.v20210301preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
