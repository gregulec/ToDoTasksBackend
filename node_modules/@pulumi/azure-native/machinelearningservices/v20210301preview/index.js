"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./batchDeployment"), exports);
__exportStar(require("./batchEndpoint"), exports);
__exportStar(require("./codeContainer"), exports);
__exportStar(require("./codeVersion"), exports);
__exportStar(require("./compute"), exports);
__exportStar(require("./dataContainer"), exports);
__exportStar(require("./dataVersion"), exports);
__exportStar(require("./datastore"), exports);
__exportStar(require("./environmentContainer"), exports);
__exportStar(require("./environmentSpecificationVersion"), exports);
__exportStar(require("./getBatchDeployment"), exports);
__exportStar(require("./getBatchEndpoint"), exports);
__exportStar(require("./getCodeContainer"), exports);
__exportStar(require("./getCodeVersion"), exports);
__exportStar(require("./getCompute"), exports);
__exportStar(require("./getDataContainer"), exports);
__exportStar(require("./getDataVersion"), exports);
__exportStar(require("./getDatastore"), exports);
__exportStar(require("./getEnvironmentContainer"), exports);
__exportStar(require("./getEnvironmentSpecificationVersion"), exports);
__exportStar(require("./getJob"), exports);
__exportStar(require("./getLabelingJob"), exports);
__exportStar(require("./getModelContainer"), exports);
__exportStar(require("./getModelVersion"), exports);
__exportStar(require("./getOnlineDeployment"), exports);
__exportStar(require("./getOnlineDeploymentLogs"), exports);
__exportStar(require("./getOnlineEndpoint"), exports);
__exportStar(require("./getOnlineEndpointToken"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getWorkspace"), exports);
__exportStar(require("./getWorkspaceConnection"), exports);
__exportStar(require("./job"), exports);
__exportStar(require("./labelingJob"), exports);
__exportStar(require("./listBatchEndpointKeys"), exports);
__exportStar(require("./listComputeKeys"), exports);
__exportStar(require("./listComputeNodes"), exports);
__exportStar(require("./listDatastoreSecrets"), exports);
__exportStar(require("./listOnlineEndpointKeys"), exports);
__exportStar(require("./listWorkspaceKeys"), exports);
__exportStar(require("./listWorkspaceNotebookAccessToken"), exports);
__exportStar(require("./listWorkspaceNotebookKeys"), exports);
__exportStar(require("./listWorkspaceStorageAccountKeys"), exports);
__exportStar(require("./modelContainer"), exports);
__exportStar(require("./modelVersion"), exports);
__exportStar(require("./onlineDeployment"), exports);
__exportStar(require("./onlineEndpoint"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./workspace"), exports);
__exportStar(require("./workspaceConnection"), exports);
// Export enums:
__exportStar(require("../../types/enums/machinelearningservices/v20210301preview"), exports);
// Import resources to register:
const batchDeployment_1 = require("./batchDeployment");
const batchEndpoint_1 = require("./batchEndpoint");
const codeContainer_1 = require("./codeContainer");
const codeVersion_1 = require("./codeVersion");
const compute_1 = require("./compute");
const dataContainer_1 = require("./dataContainer");
const dataVersion_1 = require("./dataVersion");
const datastore_1 = require("./datastore");
const environmentContainer_1 = require("./environmentContainer");
const environmentSpecificationVersion_1 = require("./environmentSpecificationVersion");
const job_1 = require("./job");
const labelingJob_1 = require("./labelingJob");
const modelContainer_1 = require("./modelContainer");
const modelVersion_1 = require("./modelVersion");
const onlineDeployment_1 = require("./onlineDeployment");
const onlineEndpoint_1 = require("./onlineEndpoint");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const workspace_1 = require("./workspace");
const workspaceConnection_1 = require("./workspaceConnection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:machinelearningservices/v20210301preview:BatchDeployment":
                return new batchDeployment_1.BatchDeployment(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:BatchEndpoint":
                return new batchEndpoint_1.BatchEndpoint(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:CodeContainer":
                return new codeContainer_1.CodeContainer(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:CodeVersion":
                return new codeVersion_1.CodeVersion(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:Compute":
                return new compute_1.Compute(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:DataContainer":
                return new dataContainer_1.DataContainer(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:DataVersion":
                return new dataVersion_1.DataVersion(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:Datastore":
                return new datastore_1.Datastore(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:EnvironmentContainer":
                return new environmentContainer_1.EnvironmentContainer(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:EnvironmentSpecificationVersion":
                return new environmentSpecificationVersion_1.EnvironmentSpecificationVersion(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:LabelingJob":
                return new labelingJob_1.LabelingJob(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:ModelContainer":
                return new modelContainer_1.ModelContainer(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:ModelVersion":
                return new modelVersion_1.ModelVersion(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:OnlineDeployment":
                return new onlineDeployment_1.OnlineDeployment(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:OnlineEndpoint":
                return new onlineEndpoint_1.OnlineEndpoint(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:Workspace":
                return new workspace_1.Workspace(name, undefined, { urn });
            case "azure-native:machinelearningservices/v20210301preview:WorkspaceConnection":
                return new workspaceConnection_1.WorkspaceConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "machinelearningservices/v20210301preview", _module);
//# sourceMappingURL=index.js.map