import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Represents Dynamics365 data connector.
 */
export declare function getDynamics365DataConnector(args: GetDynamics365DataConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamics365DataConnectorResult>;
export interface GetDynamics365DataConnectorArgs {
    /**
     * Connector ID
     */
    dataConnectorId: string;
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    operationalInsightsResourceProvider: string;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}
/**
 * Represents Dynamics365 data connector.
 */
export interface GetDynamics365DataConnectorResult {
    /**
     * The available data types for the connector.
     */
    readonly dataTypes: outputs.securityinsights.v20190101preview.Dynamics365DataConnectorDataTypesResponse;
    /**
     * Etag of the azure resource
     */
    readonly etag?: string;
    /**
     * Azure resource Id
     */
    readonly id: string;
    /**
     *
     * Expected value is 'Dynamics365'.
     */
    readonly kind: "Dynamics365";
    /**
     * Azure resource name
     */
    readonly name: string;
    /**
     * The tenant id to connect to, and get the data from.
     */
    readonly tenantId: string;
    /**
     * Azure resource type
     */
    readonly type: string;
}
