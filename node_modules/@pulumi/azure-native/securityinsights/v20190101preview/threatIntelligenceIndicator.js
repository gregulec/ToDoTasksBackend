"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThreatIntelligenceIndicator = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Threat intelligence information object.
 */
class ThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.operationalInsightsResourceProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operationalInsightsResourceProvider'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["confidence"] = args ? args.confidence : undefined;
            inputs["created"] = args ? args.created : undefined;
            inputs["createdByRef"] = args ? args.createdByRef : undefined;
            inputs["defanged"] = args ? args.defanged : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["extensions"] = args ? args.extensions : undefined;
            inputs["externalId"] = args ? args.externalId : undefined;
            inputs["externalLastUpdatedTimeUtc"] = args ? args.externalLastUpdatedTimeUtc : undefined;
            inputs["externalReferences"] = args ? args.externalReferences : undefined;
            inputs["granularMarkings"] = args ? args.granularMarkings : undefined;
            inputs["indicatorTypes"] = args ? args.indicatorTypes : undefined;
            inputs["killChainPhases"] = args ? args.killChainPhases : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["language"] = args ? args.language : undefined;
            inputs["lastUpdatedTimeUtc"] = args ? args.lastUpdatedTimeUtc : undefined;
            inputs["modified"] = args ? args.modified : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["objectMarkingRefs"] = args ? args.objectMarkingRefs : undefined;
            inputs["operationalInsightsResourceProvider"] = args ? args.operationalInsightsResourceProvider : undefined;
            inputs["parsedPattern"] = args ? args.parsedPattern : undefined;
            inputs["pattern"] = args ? args.pattern : undefined;
            inputs["patternType"] = args ? args.patternType : undefined;
            inputs["patternVersion"] = args ? args.patternVersion : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["revoked"] = args ? args.revoked : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["threatIntelligenceTags"] = args ? args.threatIntelligenceTags : undefined;
            inputs["threatTypes"] = args ? args.threatTypes : undefined;
            inputs["validFrom"] = args ? args.validFrom : undefined;
            inputs["validUntil"] = args ? args.validUntil : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["etag"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:securityinsights/v20190101preview:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights:ThreatIntelligenceIndicator" }, { type: "azure-nextgen:securityinsights:ThreatIntelligenceIndicator" }, { type: "azure-native:securityinsights/v20210401:ThreatIntelligenceIndicator" }, { type: "azure-nextgen:securityinsights/v20210401:ThreatIntelligenceIndicator" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ThreatIntelligenceIndicator.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ThreatIntelligenceIndicator(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatIntelligenceIndicator.__pulumiType;
    }
}
exports.ThreatIntelligenceIndicator = ThreatIntelligenceIndicator;
/** @internal */
ThreatIntelligenceIndicator.__pulumiType = 'azure-native:securityinsights/v20190101preview:ThreatIntelligenceIndicator';
//# sourceMappingURL=threatIntelligenceIndicator.js.map