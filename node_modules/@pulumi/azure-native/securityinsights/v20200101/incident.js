"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Incident = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Represents an incident in Azure Security Insights.
 */
class Incident extends pulumi.CustomResource {
    /**
     * Create a Incident resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["classification"] = args ? args.classification : undefined;
            inputs["classificationComment"] = args ? args.classificationComment : undefined;
            inputs["classificationReason"] = args ? args.classificationReason : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["firstActivityTimeUtc"] = args ? args.firstActivityTimeUtc : undefined;
            inputs["incidentId"] = args ? args.incidentId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["lastActivityTimeUtc"] = args ? args.lastActivityTimeUtc : undefined;
            inputs["owner"] = args ? args.owner : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["severity"] = args ? args.severity : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["title"] = args ? args.title : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["additionalData"] = undefined /*out*/;
            inputs["createdTimeUtc"] = undefined /*out*/;
            inputs["incidentNumber"] = undefined /*out*/;
            inputs["incidentUrl"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["relatedAnalyticRuleIds"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["additionalData"] = undefined /*out*/;
            inputs["classification"] = undefined /*out*/;
            inputs["classificationComment"] = undefined /*out*/;
            inputs["classificationReason"] = undefined /*out*/;
            inputs["createdTimeUtc"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["firstActivityTimeUtc"] = undefined /*out*/;
            inputs["incidentNumber"] = undefined /*out*/;
            inputs["incidentUrl"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["lastActivityTimeUtc"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["owner"] = undefined /*out*/;
            inputs["relatedAnalyticRuleIds"] = undefined /*out*/;
            inputs["severity"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["title"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:securityinsights/v20200101:Incident" }, { type: "azure-native:securityinsights:Incident" }, { type: "azure-nextgen:securityinsights:Incident" }, { type: "azure-native:securityinsights/v20190101preview:Incident" }, { type: "azure-nextgen:securityinsights/v20190101preview:Incident" }, { type: "azure-native:securityinsights/v20210301preview:Incident" }, { type: "azure-nextgen:securityinsights/v20210301preview:Incident" }, { type: "azure-native:securityinsights/v20210401:Incident" }, { type: "azure-nextgen:securityinsights/v20210401:Incident" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Incident.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Incident resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Incident(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Incident.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Incident.__pulumiType;
    }
}
exports.Incident = Incident;
/** @internal */
Incident.__pulumiType = 'azure-native:securityinsights/v20200101:Incident';
//# sourceMappingURL=incident.js.map