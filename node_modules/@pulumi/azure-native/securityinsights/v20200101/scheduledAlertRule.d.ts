import * as pulumi from "@pulumi/pulumi";
import { enums } from "../../types";
/**
 * Represents scheduled alert rule.
 */
export declare class ScheduledAlertRule extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledAlertRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ScheduledAlertRule;
    /**
     * Returns true if the given object is an instance of ScheduledAlertRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ScheduledAlertRule;
    /**
     * The Name of the alert rule template used to create this rule.
     */
    readonly alertRuleTemplateName: pulumi.Output<string | undefined>;
    /**
     * The description of the alert rule.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name for alerts created by this alert rule.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * Determines whether this alert rule is enabled or disabled.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * Etag of the azure resource
     */
    readonly etag: pulumi.Output<string | undefined>;
    /**
     * The kind of the alert rule
     * Expected value is 'Scheduled'.
     */
    readonly kind: pulumi.Output<"Scheduled">;
    /**
     * The last time that this alert rule has been modified.
     */
    readonly lastModifiedUtc: pulumi.Output<string>;
    /**
     * Azure resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The query that creates alerts for this rule.
     */
    readonly query: pulumi.Output<string>;
    /**
     * The frequency (in ISO 8601 duration format) for this alert rule to run.
     */
    readonly queryFrequency: pulumi.Output<string>;
    /**
     * The period (in ISO 8601 duration format) that this alert rule looks at.
     */
    readonly queryPeriod: pulumi.Output<string>;
    /**
     * The severity for alerts created by this alert rule.
     */
    readonly severity: pulumi.Output<string>;
    /**
     * The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
     */
    readonly suppressionDuration: pulumi.Output<string>;
    /**
     * Determines whether the suppression for this alert rule is enabled or disabled.
     */
    readonly suppressionEnabled: pulumi.Output<boolean>;
    /**
     * The tactics of the alert rule
     */
    readonly tactics: pulumi.Output<string[] | undefined>;
    /**
     * The operation against the threshold that triggers alert rule.
     */
    readonly triggerOperator: pulumi.Output<string>;
    /**
     * The threshold triggers this alert rule.
     */
    readonly triggerThreshold: pulumi.Output<number>;
    /**
     * Azure resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ScheduledAlertRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledAlertRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ScheduledAlertRule resource.
 */
export interface ScheduledAlertRuleArgs {
    /**
     * The Name of the alert rule template used to create this rule.
     */
    alertRuleTemplateName?: pulumi.Input<string>;
    /**
     * The description of the alert rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name for alerts created by this alert rule.
     */
    displayName: pulumi.Input<string>;
    /**
     * Determines whether this alert rule is enabled or disabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Etag of the azure resource
     */
    etag?: pulumi.Input<string>;
    /**
     * The kind of the alert rule
     * Expected value is 'Scheduled'.
     */
    kind: pulumi.Input<"Scheduled">;
    /**
     * The query that creates alerts for this rule.
     */
    query: pulumi.Input<string>;
    /**
     * The frequency (in ISO 8601 duration format) for this alert rule to run.
     */
    queryFrequency: pulumi.Input<string>;
    /**
     * The period (in ISO 8601 duration format) that this alert rule looks at.
     */
    queryPeriod: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Alert rule ID
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The severity for alerts created by this alert rule.
     */
    severity: pulumi.Input<string | enums.securityinsights.v20200101.AlertSeverity>;
    /**
     * The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.
     */
    suppressionDuration: pulumi.Input<string>;
    /**
     * Determines whether the suppression for this alert rule is enabled or disabled.
     */
    suppressionEnabled: pulumi.Input<boolean>;
    /**
     * The tactics of the alert rule
     */
    tactics?: pulumi.Input<pulumi.Input<string | enums.securityinsights.v20200101.AttackTactic>[]>;
    /**
     * The operation against the threshold that triggers alert rule.
     */
    triggerOperator: pulumi.Input<enums.securityinsights.v20200101.TriggerOperator>;
    /**
     * The threshold triggers this alert rule.
     */
    triggerThreshold: pulumi.Input<number>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
