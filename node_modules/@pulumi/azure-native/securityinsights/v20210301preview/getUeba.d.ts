import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Settings with single toggle.
 */
export declare function getUeba(args: GetUebaArgs, opts?: pulumi.InvokeOptions): Promise<GetUebaResult>;
export interface GetUebaArgs {
    /**
     * The namespace of workspaces resource provider- Microsoft.OperationalInsights.
     */
    operationalInsightsResourceProvider: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
     */
    settingsName: string;
    /**
     * The name of the workspace.
     */
    workspaceName: string;
}
/**
 * Settings with single toggle.
 */
export interface GetUebaResult {
    /**
     * The relevant data sources that enriched by ueba
     */
    readonly dataSources?: string[];
    /**
     * Etag of the azure resource
     */
    readonly etag?: string;
    /**
     * Azure resource Id
     */
    readonly id: string;
    /**
     * The kind of the setting
     * Expected value is 'Ueba'.
     */
    readonly kind: "Ueba";
    /**
     * Azure resource name
     */
    readonly name: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.securityinsights.v20210301preview.SystemDataResponse;
    /**
     * Azure resource type
     */
    readonly type: string;
}
