import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * Subscription Information with the alias.
 */
export declare class SubscriptionAlias extends pulumi.CustomResource {
    /**
     * Get an existing SubscriptionAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubscriptionAlias;
    /**
     * Returns true if the given object is an instance of SubscriptionAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SubscriptionAlias;
    /**
     * Alias ID.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Put Alias response properties.
     */
    readonly properties: pulumi.Output<outputs.subscription.v20191001preview.PutAliasResponsePropertiesResponse>;
    /**
     * Resource type, Microsoft.Subscription/aliases.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SubscriptionAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SubscriptionAliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SubscriptionAlias resource.
 */
export interface SubscriptionAliasArgs {
    /**
     * Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesnâ€™t have any other lifecycle need beyond the request for subscription creation.
     */
    aliasName?: pulumi.Input<string>;
    /**
     * Put alias request properties.
     */
    properties?: pulumi.Input<inputs.subscription.v20191001preview.PutAliasRequestPropertiesArgs>;
}
