"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./defaultRollout"), exports);
__exportStar(require("./getDefaultRollout"), exports);
__exportStar(require("./getNotificationRegistration"), exports);
__exportStar(require("./getProviderRegistration"), exports);
__exportStar(require("./getResourceTypeRegistration"), exports);
__exportStar(require("./getSkus"), exports);
__exportStar(require("./getSkusNestedResourceTypeFirst"), exports);
__exportStar(require("./getSkusNestedResourceTypeSecond"), exports);
__exportStar(require("./getSkusNestedResourceTypeThird"), exports);
__exportStar(require("./notificationRegistration"), exports);
__exportStar(require("./operationByProviderRegistration"), exports);
__exportStar(require("./providerRegistration"), exports);
__exportStar(require("./resourceTypeRegistration"), exports);
__exportStar(require("./skus"), exports);
__exportStar(require("./skusNestedResourceTypeFirst"), exports);
__exportStar(require("./skusNestedResourceTypeSecond"), exports);
__exportStar(require("./skusNestedResourceTypeThird"), exports);
// Export enums:
__exportStar(require("../../types/enums/providerhub/v20201120"), exports);
// Import resources to register:
const defaultRollout_1 = require("./defaultRollout");
const notificationRegistration_1 = require("./notificationRegistration");
const operationByProviderRegistration_1 = require("./operationByProviderRegistration");
const providerRegistration_1 = require("./providerRegistration");
const resourceTypeRegistration_1 = require("./resourceTypeRegistration");
const skus_1 = require("./skus");
const skusNestedResourceTypeFirst_1 = require("./skusNestedResourceTypeFirst");
const skusNestedResourceTypeSecond_1 = require("./skusNestedResourceTypeSecond");
const skusNestedResourceTypeThird_1 = require("./skusNestedResourceTypeThird");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:providerhub/v20201120:DefaultRollout":
                return new defaultRollout_1.DefaultRollout(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:NotificationRegistration":
                return new notificationRegistration_1.NotificationRegistration(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:OperationByProviderRegistration":
                return new operationByProviderRegistration_1.OperationByProviderRegistration(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:ProviderRegistration":
                return new providerRegistration_1.ProviderRegistration(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:ResourceTypeRegistration":
                return new resourceTypeRegistration_1.ResourceTypeRegistration(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:Skus":
                return new skus_1.Skus(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:SkusNestedResourceTypeFirst":
                return new skusNestedResourceTypeFirst_1.SkusNestedResourceTypeFirst(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:SkusNestedResourceTypeSecond":
                return new skusNestedResourceTypeSecond_1.SkusNestedResourceTypeSecond(name, undefined, { urn });
            case "azure-native:providerhub/v20201120:SkusNestedResourceTypeThird":
                return new skusNestedResourceTypeThird_1.SkusNestedResourceTypeThird(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "providerhub/v20201120", _module);
//# sourceMappingURL=index.js.map