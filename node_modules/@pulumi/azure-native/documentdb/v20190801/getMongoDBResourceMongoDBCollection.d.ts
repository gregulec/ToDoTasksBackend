import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * An Azure Cosmos DB MongoDB collection.
 */
export declare function getMongoDBResourceMongoDBCollection(args: GetMongoDBResourceMongoDBCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetMongoDBResourceMongoDBCollectionResult>;
export interface GetMongoDBResourceMongoDBCollectionArgs {
    /**
     * Cosmos DB database account name.
     */
    accountName: string;
    /**
     * Cosmos DB collection name.
     */
    collectionName: string;
    /**
     * Cosmos DB database name.
     */
    databaseName: string;
    /**
     * Name of an Azure resource group.
     */
    resourceGroupName: string;
}
/**
 * An Azure Cosmos DB MongoDB collection.
 */
export interface GetMongoDBResourceMongoDBCollectionResult {
    /**
     * The unique resource identifier of the ARM resource.
     */
    readonly id: string;
    /**
     * The location of the resource group to which the resource belongs.
     */
    readonly location?: string;
    /**
     * The name of the ARM resource.
     */
    readonly name: string;
    readonly resource?: outputs.documentdb.v20190801.MongoDBCollectionGetPropertiesResponseResource;
    /**
     * Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of Azure resource.
     */
    readonly type: string;
}
