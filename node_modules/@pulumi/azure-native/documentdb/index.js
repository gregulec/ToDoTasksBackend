"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210615 = exports.v20210515 = exports.v20210415 = exports.v20210401preview = exports.v20210315 = exports.v20210301preview = exports.v20210115 = exports.v20200901 = exports.v20200601preview = exports.v20200401 = exports.v20200301 = exports.v20191212 = exports.v20190801preview = exports.v20190801 = exports.v20160331 = exports.v20160319 = exports.v20151106 = exports.v20150408 = exports.v20150401 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./cassandraCluster"), exports);
__exportStar(require("./cassandraDataCenter"), exports);
__exportStar(require("./cassandraResourceCassandraKeyspace"), exports);
__exportStar(require("./cassandraResourceCassandraTable"), exports);
__exportStar(require("./databaseAccount"), exports);
__exportStar(require("./getCassandraCluster"), exports);
__exportStar(require("./getCassandraDataCenter"), exports);
__exportStar(require("./getCassandraResourceCassandraKeyspace"), exports);
__exportStar(require("./getCassandraResourceCassandraTable"), exports);
__exportStar(require("./getDatabaseAccount"), exports);
__exportStar(require("./getGremlinResourceGremlinDatabase"), exports);
__exportStar(require("./getGremlinResourceGremlinGraph"), exports);
__exportStar(require("./getMongoDBResourceMongoDBCollection"), exports);
__exportStar(require("./getMongoDBResourceMongoDBDatabase"), exports);
__exportStar(require("./getNotebookWorkspace"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getService"), exports);
__exportStar(require("./getSqlResourceSqlContainer"), exports);
__exportStar(require("./getSqlResourceSqlDatabase"), exports);
__exportStar(require("./getSqlResourceSqlRoleAssignment"), exports);
__exportStar(require("./getSqlResourceSqlRoleDefinition"), exports);
__exportStar(require("./getSqlResourceSqlStoredProcedure"), exports);
__exportStar(require("./getSqlResourceSqlTrigger"), exports);
__exportStar(require("./getSqlResourceSqlUserDefinedFunction"), exports);
__exportStar(require("./getTableResourceTable"), exports);
__exportStar(require("./gremlinResourceGremlinDatabase"), exports);
__exportStar(require("./gremlinResourceGremlinGraph"), exports);
__exportStar(require("./listDatabaseAccountConnectionStrings"), exports);
__exportStar(require("./listDatabaseAccountKeys"), exports);
__exportStar(require("./listNotebookWorkspaceConnectionInfo"), exports);
__exportStar(require("./mongoDBResourceMongoDBCollection"), exports);
__exportStar(require("./mongoDBResourceMongoDBDatabase"), exports);
__exportStar(require("./notebookWorkspace"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./service"), exports);
__exportStar(require("./sqlResourceSqlContainer"), exports);
__exportStar(require("./sqlResourceSqlDatabase"), exports);
__exportStar(require("./sqlResourceSqlRoleAssignment"), exports);
__exportStar(require("./sqlResourceSqlRoleDefinition"), exports);
__exportStar(require("./sqlResourceSqlStoredProcedure"), exports);
__exportStar(require("./sqlResourceSqlTrigger"), exports);
__exportStar(require("./sqlResourceSqlUserDefinedFunction"), exports);
__exportStar(require("./tableResourceTable"), exports);
// Export enums:
__exportStar(require("../types/enums/documentdb"), exports);
// Export sub-modules:
const v20150401 = require("./v20150401");
exports.v20150401 = v20150401;
const v20150408 = require("./v20150408");
exports.v20150408 = v20150408;
const v20151106 = require("./v20151106");
exports.v20151106 = v20151106;
const v20160319 = require("./v20160319");
exports.v20160319 = v20160319;
const v20160331 = require("./v20160331");
exports.v20160331 = v20160331;
const v20190801 = require("./v20190801");
exports.v20190801 = v20190801;
const v20190801preview = require("./v20190801preview");
exports.v20190801preview = v20190801preview;
const v20191212 = require("./v20191212");
exports.v20191212 = v20191212;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200401 = require("./v20200401");
exports.v20200401 = v20200401;
const v20200601preview = require("./v20200601preview");
exports.v20200601preview = v20200601preview;
const v20200901 = require("./v20200901");
exports.v20200901 = v20200901;
const v20210115 = require("./v20210115");
exports.v20210115 = v20210115;
const v20210301preview = require("./v20210301preview");
exports.v20210301preview = v20210301preview;
const v20210315 = require("./v20210315");
exports.v20210315 = v20210315;
const v20210401preview = require("./v20210401preview");
exports.v20210401preview = v20210401preview;
const v20210415 = require("./v20210415");
exports.v20210415 = v20210415;
const v20210515 = require("./v20210515");
exports.v20210515 = v20210515;
const v20210615 = require("./v20210615");
exports.v20210615 = v20210615;
// Import resources to register:
const cassandraCluster_1 = require("./cassandraCluster");
const cassandraDataCenter_1 = require("./cassandraDataCenter");
const cassandraResourceCassandraKeyspace_1 = require("./cassandraResourceCassandraKeyspace");
const cassandraResourceCassandraTable_1 = require("./cassandraResourceCassandraTable");
const databaseAccount_1 = require("./databaseAccount");
const gremlinResourceGremlinDatabase_1 = require("./gremlinResourceGremlinDatabase");
const gremlinResourceGremlinGraph_1 = require("./gremlinResourceGremlinGraph");
const mongoDBResourceMongoDBCollection_1 = require("./mongoDBResourceMongoDBCollection");
const mongoDBResourceMongoDBDatabase_1 = require("./mongoDBResourceMongoDBDatabase");
const notebookWorkspace_1 = require("./notebookWorkspace");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const service_1 = require("./service");
const sqlResourceSqlContainer_1 = require("./sqlResourceSqlContainer");
const sqlResourceSqlDatabase_1 = require("./sqlResourceSqlDatabase");
const sqlResourceSqlRoleAssignment_1 = require("./sqlResourceSqlRoleAssignment");
const sqlResourceSqlRoleDefinition_1 = require("./sqlResourceSqlRoleDefinition");
const sqlResourceSqlStoredProcedure_1 = require("./sqlResourceSqlStoredProcedure");
const sqlResourceSqlTrigger_1 = require("./sqlResourceSqlTrigger");
const sqlResourceSqlUserDefinedFunction_1 = require("./sqlResourceSqlUserDefinedFunction");
const tableResourceTable_1 = require("./tableResourceTable");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:documentdb:CassandraCluster":
                return new cassandraCluster_1.CassandraCluster(name, undefined, { urn });
            case "azure-native:documentdb:CassandraDataCenter":
                return new cassandraDataCenter_1.CassandraDataCenter(name, undefined, { urn });
            case "azure-native:documentdb:CassandraResourceCassandraKeyspace":
                return new cassandraResourceCassandraKeyspace_1.CassandraResourceCassandraKeyspace(name, undefined, { urn });
            case "azure-native:documentdb:CassandraResourceCassandraTable":
                return new cassandraResourceCassandraTable_1.CassandraResourceCassandraTable(name, undefined, { urn });
            case "azure-native:documentdb:DatabaseAccount":
                return new databaseAccount_1.DatabaseAccount(name, undefined, { urn });
            case "azure-native:documentdb:GremlinResourceGremlinDatabase":
                return new gremlinResourceGremlinDatabase_1.GremlinResourceGremlinDatabase(name, undefined, { urn });
            case "azure-native:documentdb:GremlinResourceGremlinGraph":
                return new gremlinResourceGremlinGraph_1.GremlinResourceGremlinGraph(name, undefined, { urn });
            case "azure-native:documentdb:MongoDBResourceMongoDBCollection":
                return new mongoDBResourceMongoDBCollection_1.MongoDBResourceMongoDBCollection(name, undefined, { urn });
            case "azure-native:documentdb:MongoDBResourceMongoDBDatabase":
                return new mongoDBResourceMongoDBDatabase_1.MongoDBResourceMongoDBDatabase(name, undefined, { urn });
            case "azure-native:documentdb:NotebookWorkspace":
                return new notebookWorkspace_1.NotebookWorkspace(name, undefined, { urn });
            case "azure-native:documentdb:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:documentdb:Service":
                return new service_1.Service(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlContainer":
                return new sqlResourceSqlContainer_1.SqlResourceSqlContainer(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlDatabase":
                return new sqlResourceSqlDatabase_1.SqlResourceSqlDatabase(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlRoleAssignment":
                return new sqlResourceSqlRoleAssignment_1.SqlResourceSqlRoleAssignment(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlRoleDefinition":
                return new sqlResourceSqlRoleDefinition_1.SqlResourceSqlRoleDefinition(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlStoredProcedure":
                return new sqlResourceSqlStoredProcedure_1.SqlResourceSqlStoredProcedure(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlTrigger":
                return new sqlResourceSqlTrigger_1.SqlResourceSqlTrigger(name, undefined, { urn });
            case "azure-native:documentdb:SqlResourceSqlUserDefinedFunction":
                return new sqlResourceSqlUserDefinedFunction_1.SqlResourceSqlUserDefinedFunction(name, undefined, { urn });
            case "azure-native:documentdb:TableResourceTable":
                return new tableResourceTable_1.TableResourceTable(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "documentdb", _module);
//# sourceMappingURL=index.js.map