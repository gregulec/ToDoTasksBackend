"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseAccount = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * An Azure Cosmos DB database account.
 */
class DatabaseAccount extends pulumi.CustomResource {
    /**
     * Create a DatabaseAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        var _a;
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.databaseAccountOfferType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseAccountOfferType'");
            }
            if ((!args || args.locations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locations'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["apiProperties"] = args ? args.apiProperties : undefined;
            inputs["backupPolicy"] = args ? args.backupPolicy : undefined;
            inputs["capabilities"] = args ? args.capabilities : undefined;
            inputs["connectorOffer"] = args ? args.connectorOffer : undefined;
            inputs["consistencyPolicy"] = args ? args.consistencyPolicy : undefined;
            inputs["cors"] = args ? args.cors : undefined;
            inputs["databaseAccountOfferType"] = args ? args.databaseAccountOfferType : undefined;
            inputs["defaultIdentity"] = args ? args.defaultIdentity : undefined;
            inputs["disableKeyBasedMetadataWriteAccess"] = args ? args.disableKeyBasedMetadataWriteAccess : undefined;
            inputs["enableAnalyticalStorage"] = args ? args.enableAnalyticalStorage : undefined;
            inputs["enableAutomaticFailover"] = args ? args.enableAutomaticFailover : undefined;
            inputs["enableCassandraConnector"] = args ? args.enableCassandraConnector : undefined;
            inputs["enableFreeTier"] = args ? args.enableFreeTier : undefined;
            inputs["enableMultipleWriteLocations"] = args ? args.enableMultipleWriteLocations : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["ipRules"] = args ? args.ipRules : undefined;
            inputs["isVirtualNetworkFilterEnabled"] = args ? args.isVirtualNetworkFilterEnabled : undefined;
            inputs["keyVaultKeyUri"] = args ? args.keyVaultKeyUri : undefined;
            inputs["kind"] = (_a = (args ? args.kind : undefined)) !== null && _a !== void 0 ? _a : "GlobalDocumentDB";
            inputs["location"] = args ? args.location : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["networkAclBypass"] = args ? args.networkAclBypass : undefined;
            inputs["networkAclBypassResourceIds"] = args ? args.networkAclBypassResourceIds : undefined;
            inputs["publicNetworkAccess"] = args ? args.publicNetworkAccess : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["virtualNetworkRules"] = args ? args.virtualNetworkRules : undefined;
            inputs["documentEndpoint"] = undefined /*out*/;
            inputs["failoverPolicies"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["privateEndpointConnections"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["readLocations"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["writeLocations"] = undefined /*out*/;
        }
        else {
            inputs["apiProperties"] = undefined /*out*/;
            inputs["backupPolicy"] = undefined /*out*/;
            inputs["capabilities"] = undefined /*out*/;
            inputs["connectorOffer"] = undefined /*out*/;
            inputs["consistencyPolicy"] = undefined /*out*/;
            inputs["cors"] = undefined /*out*/;
            inputs["databaseAccountOfferType"] = undefined /*out*/;
            inputs["defaultIdentity"] = undefined /*out*/;
            inputs["disableKeyBasedMetadataWriteAccess"] = undefined /*out*/;
            inputs["documentEndpoint"] = undefined /*out*/;
            inputs["enableAnalyticalStorage"] = undefined /*out*/;
            inputs["enableAutomaticFailover"] = undefined /*out*/;
            inputs["enableCassandraConnector"] = undefined /*out*/;
            inputs["enableFreeTier"] = undefined /*out*/;
            inputs["enableMultipleWriteLocations"] = undefined /*out*/;
            inputs["failoverPolicies"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["ipRules"] = undefined /*out*/;
            inputs["isVirtualNetworkFilterEnabled"] = undefined /*out*/;
            inputs["keyVaultKeyUri"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["locations"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkAclBypass"] = undefined /*out*/;
            inputs["networkAclBypassResourceIds"] = undefined /*out*/;
            inputs["privateEndpointConnections"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicNetworkAccess"] = undefined /*out*/;
            inputs["readLocations"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["virtualNetworkRules"] = undefined /*out*/;
            inputs["writeLocations"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:documentdb/v20210415:DatabaseAccount" }, { type: "azure-native:documentdb:DatabaseAccount" }, { type: "azure-nextgen:documentdb:DatabaseAccount" }, { type: "azure-native:documentdb/v20150401:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20150401:DatabaseAccount" }, { type: "azure-native:documentdb/v20150408:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20150408:DatabaseAccount" }, { type: "azure-native:documentdb/v20151106:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20151106:DatabaseAccount" }, { type: "azure-native:documentdb/v20160319:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20160319:DatabaseAccount" }, { type: "azure-native:documentdb/v20160331:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20160331:DatabaseAccount" }, { type: "azure-native:documentdb/v20190801:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20190801:DatabaseAccount" }, { type: "azure-native:documentdb/v20191212:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20191212:DatabaseAccount" }, { type: "azure-native:documentdb/v20200301:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20200301:DatabaseAccount" }, { type: "azure-native:documentdb/v20200401:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20200401:DatabaseAccount" }, { type: "azure-native:documentdb/v20200601preview:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20200601preview:DatabaseAccount" }, { type: "azure-native:documentdb/v20200901:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20200901:DatabaseAccount" }, { type: "azure-native:documentdb/v20210115:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210115:DatabaseAccount" }, { type: "azure-native:documentdb/v20210301preview:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210301preview:DatabaseAccount" }, { type: "azure-native:documentdb/v20210315:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210315:DatabaseAccount" }, { type: "azure-native:documentdb/v20210401preview:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210401preview:DatabaseAccount" }, { type: "azure-native:documentdb/v20210515:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210515:DatabaseAccount" }, { type: "azure-native:documentdb/v20210615:DatabaseAccount" }, { type: "azure-nextgen:documentdb/v20210615:DatabaseAccount" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(DatabaseAccount.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing DatabaseAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new DatabaseAccount(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DatabaseAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseAccount.__pulumiType;
    }
}
exports.DatabaseAccount = DatabaseAccount;
/** @internal */
DatabaseAccount.__pulumiType = 'azure-native:documentdb/v20210415:DatabaseAccount';
//# sourceMappingURL=databaseAccount.js.map