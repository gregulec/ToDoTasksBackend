import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * A virtual machine.
 */
export declare class VirtualMachineResource extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineResource;
    /**
     * Returns true if the given object is an instance of VirtualMachineResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualMachineResource;
    /**
     * The artifact deployment status for the virtual machine.
     */
    readonly artifactDeploymentStatus: pulumi.Output<outputs.devtestlab.v20150521preview.ArtifactDeploymentStatusPropertiesResponse | undefined>;
    /**
     * The artifacts to be installed on the virtual machine.
     */
    readonly artifacts: pulumi.Output<outputs.devtestlab.v20150521preview.ArtifactInstallPropertiesResponse[] | undefined>;
    /**
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    readonly computeId: pulumi.Output<string | undefined>;
    /**
     * The email address of creator of the virtual machine.
     */
    readonly createdByUser: pulumi.Output<string | undefined>;
    /**
     * The object identifier of the creator of the virtual machine.
     */
    readonly createdByUserId: pulumi.Output<string | undefined>;
    /**
     * The custom image identifier of the virtual machine.
     */
    readonly customImageId: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the virtual machine is to be created without a public IP address.
     */
    readonly disallowPublicIpAddress: pulumi.Output<boolean | undefined>;
    /**
     * The fully-qualified domain name of the virtual machine.
     */
    readonly fqdn: pulumi.Output<string | undefined>;
    /**
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    readonly galleryImageReference: pulumi.Output<outputs.devtestlab.v20150521preview.GalleryImageReferenceResponse | undefined>;
    /**
     * A value indicating whether this virtual machine uses an SSH key for authentication.
     */
    readonly isAuthenticationWithSshKey: pulumi.Output<boolean | undefined>;
    /**
     * The lab subnet name of the virtual machine.
     */
    readonly labSubnetName: pulumi.Output<string | undefined>;
    /**
     * The lab virtual network identifier of the virtual machine.
     */
    readonly labVirtualNetworkId: pulumi.Output<string | undefined>;
    /**
     * The location of the resource.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The notes of the virtual machine.
     */
    readonly notes: pulumi.Output<string | undefined>;
    /**
     * The OS type of the virtual machine.
     */
    readonly osType: pulumi.Output<string | undefined>;
    /**
     * The object identifier of the owner of the virtual machine.
     */
    readonly ownerObjectId: pulumi.Output<string | undefined>;
    /**
     * The password of the virtual machine administrator.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * The provisioning status of the resource.
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * The size of the virtual machine.
     */
    readonly size: pulumi.Output<string | undefined>;
    /**
     * The SSH key of the virtual machine administrator.
     */
    readonly sshKey: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * The user name of the virtual machine.
     */
    readonly userName: pulumi.Output<string | undefined>;
    /**
     * Create a VirtualMachineResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineResourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualMachineResource resource.
 */
export interface VirtualMachineResourceArgs {
    /**
     * The artifact deployment status for the virtual machine.
     */
    artifactDeploymentStatus?: pulumi.Input<inputs.devtestlab.v20150521preview.ArtifactDeploymentStatusPropertiesArgs>;
    /**
     * The artifacts to be installed on the virtual machine.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.devtestlab.v20150521preview.ArtifactInstallPropertiesArgs>[]>;
    /**
     * The resource identifier (Microsoft.Compute) of the virtual machine.
     */
    computeId?: pulumi.Input<string>;
    /**
     * The email address of creator of the virtual machine.
     */
    createdByUser?: pulumi.Input<string>;
    /**
     * The object identifier of the creator of the virtual machine.
     */
    createdByUserId?: pulumi.Input<string>;
    /**
     * The custom image identifier of the virtual machine.
     */
    customImageId?: pulumi.Input<string>;
    /**
     * Indicates whether the virtual machine is to be created without a public IP address.
     */
    disallowPublicIpAddress?: pulumi.Input<boolean>;
    /**
     * The fully-qualified domain name of the virtual machine.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The Microsoft Azure Marketplace image reference of the virtual machine.
     */
    galleryImageReference?: pulumi.Input<inputs.devtestlab.v20150521preview.GalleryImageReferenceArgs>;
    /**
     * The identifier of the resource.
     */
    id?: pulumi.Input<string>;
    /**
     * A value indicating whether this virtual machine uses an SSH key for authentication.
     */
    isAuthenticationWithSshKey?: pulumi.Input<boolean>;
    /**
     * The name of the lab.
     */
    labName: pulumi.Input<string>;
    /**
     * The lab subnet name of the virtual machine.
     */
    labSubnetName?: pulumi.Input<string>;
    /**
     * The lab virtual network identifier of the virtual machine.
     */
    labVirtualNetworkId?: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The notes of the virtual machine.
     */
    notes?: pulumi.Input<string>;
    /**
     * The OS type of the virtual machine.
     */
    osType?: pulumi.Input<string>;
    /**
     * The object identifier of the owner of the virtual machine.
     */
    ownerObjectId?: pulumi.Input<string>;
    /**
     * The password of the virtual machine administrator.
     */
    password?: pulumi.Input<string>;
    /**
     * The provisioning status of the resource.
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The size of the virtual machine.
     */
    size?: pulumi.Input<string>;
    /**
     * The SSH key of the virtual machine administrator.
     */
    sshKey?: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of the resource.
     */
    type?: pulumi.Input<string>;
    /**
     * The user name of the virtual machine.
     */
    userName?: pulumi.Input<string>;
}
