import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A Service Fabric.
 */
export declare function getServiceFabric(args: GetServiceFabricArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceFabricResult>;
export interface GetServiceFabricArgs {
    /**
     * Specify the $expand query. Example: 'properties($expand=applicableSchedule)'
     */
    expand?: string;
    /**
     * The name of the lab.
     */
    labName: string;
    /**
     * The name of the service fabric.
     */
    name: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the user profile.
     */
    userName: string;
}
/**
 * A Service Fabric.
 */
export interface GetServiceFabricResult {
    /**
     * The applicable schedule for the virtual machine.
     */
    readonly applicableSchedule: outputs.devtestlab.v20180915.ApplicableScheduleResponse;
    /**
     * The resource id of the environment under which the service fabric resource is present
     */
    readonly environmentId?: string;
    /**
     * The backing service fabric resource's id
     */
    readonly externalServiceFabricId?: string;
    /**
     * The identifier of the resource.
     */
    readonly id: string;
    /**
     * The location of the resource.
     */
    readonly location?: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The provisioning status of the resource.
     */
    readonly provisioningState: string;
    /**
     * The tags of the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource.
     */
    readonly type: string;
    /**
     * The unique immutable identifier of a resource (Guid).
     */
    readonly uniqueIdentifier: string;
}
