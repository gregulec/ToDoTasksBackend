import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * An object that represents a token for a container registry.
 */
export declare function getToken(args: GetTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetTokenResult>;
export interface GetTokenArgs {
    /**
     * The name of the container registry.
     */
    registryName: string;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: string;
    /**
     * The name of the token.
     */
    tokenName: string;
}
/**
 * An object that represents a token for a container registry.
 */
export interface GetTokenResult {
    /**
     * The creation date of scope map.
     */
    readonly creationDate: string;
    /**
     * The credentials that can be used for authenticating the token.
     */
    readonly credentials?: outputs.containerregistry.v20210601preview.TokenCredentialsPropertiesResponse;
    /**
     * The resource ID.
     */
    readonly id: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * The resource ID of the scope map to which the token will be associated with.
     */
    readonly scopeMapId?: string;
    /**
     * The status of the token example enabled or disabled.
     */
    readonly status?: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.containerregistry.v20210601preview.SystemDataResponse;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
