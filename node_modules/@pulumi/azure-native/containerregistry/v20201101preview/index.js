"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./connectedRegistry"), exports);
__exportStar(require("./exportPipeline"), exports);
__exportStar(require("./getConnectedRegistry"), exports);
__exportStar(require("./getExportPipeline"), exports);
__exportStar(require("./getImportPipeline"), exports);
__exportStar(require("./getPipelineRun"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getRegistry"), exports);
__exportStar(require("./getReplication"), exports);
__exportStar(require("./getScopeMap"), exports);
__exportStar(require("./getToken"), exports);
__exportStar(require("./getWebhook"), exports);
__exportStar(require("./getWebhookCallbackConfig"), exports);
__exportStar(require("./importPipeline"), exports);
__exportStar(require("./listRegistryCredentials"), exports);
__exportStar(require("./listWebhookEvents"), exports);
__exportStar(require("./pipelineRun"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./registry"), exports);
__exportStar(require("./replication"), exports);
__exportStar(require("./scopeMap"), exports);
__exportStar(require("./token"), exports);
__exportStar(require("./webhook"), exports);
// Export enums:
__exportStar(require("../../types/enums/containerregistry/v20201101preview"), exports);
// Import resources to register:
const connectedRegistry_1 = require("./connectedRegistry");
const exportPipeline_1 = require("./exportPipeline");
const importPipeline_1 = require("./importPipeline");
const pipelineRun_1 = require("./pipelineRun");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const registry_1 = require("./registry");
const replication_1 = require("./replication");
const scopeMap_1 = require("./scopeMap");
const token_1 = require("./token");
const webhook_1 = require("./webhook");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:containerregistry/v20201101preview:ConnectedRegistry":
                return new connectedRegistry_1.ConnectedRegistry(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:ExportPipeline":
                return new exportPipeline_1.ExportPipeline(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:ImportPipeline":
                return new importPipeline_1.ImportPipeline(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:PipelineRun":
                return new pipelineRun_1.PipelineRun(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:Registry":
                return new registry_1.Registry(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:Replication":
                return new replication_1.Replication(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:ScopeMap":
                return new scopeMap_1.ScopeMap(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:Token":
                return new token_1.Token(name, undefined, { urn });
            case "azure-native:containerregistry/v20201101preview:Webhook":
                return new webhook_1.Webhook(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "containerregistry/v20201101preview", _module);
//# sourceMappingURL=index.js.map