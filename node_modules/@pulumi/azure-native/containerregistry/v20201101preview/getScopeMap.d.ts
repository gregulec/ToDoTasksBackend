import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * An object that represents a scope map for a container registry.
 */
export declare function getScopeMap(args: GetScopeMapArgs, opts?: pulumi.InvokeOptions): Promise<GetScopeMapResult>;
export interface GetScopeMapArgs {
    /**
     * The name of the container registry.
     */
    registryName: string;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: string;
    /**
     * The name of the scope map.
     */
    scopeMapName: string;
}
/**
 * An object that represents a scope map for a container registry.
 */
export interface GetScopeMapResult {
    /**
     * The list of scoped permissions for registry artifacts.
     * E.g. repositories/repository-name/content/read,
     * repositories/repository-name/metadata/write
     */
    readonly actions: string[];
    /**
     * The creation date of scope map.
     */
    readonly creationDate: string;
    /**
     * The user friendly description of the scope map.
     */
    readonly description?: string;
    /**
     * The resource ID.
     */
    readonly id: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.containerregistry.v20201101preview.SystemDataResponse;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
