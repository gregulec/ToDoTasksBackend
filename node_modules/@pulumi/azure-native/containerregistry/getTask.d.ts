import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * The task that has the ARM resource and task properties.
 * The task will have all information to schedule a run against it.
 * API Version: 2019-06-01-preview.
 */
export declare function getTask(args: GetTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskResult>;
export interface GetTaskArgs {
    /**
     * The name of the container registry.
     */
    registryName: string;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: string;
    /**
     * The name of the container registry task.
     */
    taskName: string;
}
/**
 * The task that has the ARM resource and task properties.
 * The task will have all information to schedule a run against it.
 */
export interface GetTaskResult {
    /**
     * The machine configuration of the run agent.
     */
    readonly agentConfiguration?: outputs.containerregistry.AgentPropertiesResponse;
    /**
     * The dedicated agent pool for the task.
     */
    readonly agentPoolName?: string;
    /**
     * The creation date of task.
     */
    readonly creationDate: string;
    /**
     * The properties that describes a set of credentials that will be used when this run is invoked.
     */
    readonly credentials?: outputs.containerregistry.CredentialsResponse;
    /**
     * The resource ID.
     */
    readonly id: string;
    /**
     * Identity for the resource.
     */
    readonly identity?: outputs.containerregistry.IdentityPropertiesResponse;
    /**
     * The value of this property indicates whether the task resource is system task or not.
     */
    readonly isSystemTask?: boolean;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    readonly location: string;
    /**
     * The template that describes the repository and tag information for run log artifact.
     */
    readonly logTemplate?: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The platform properties against which the run has to happen.
     */
    readonly platform?: outputs.containerregistry.PlatformPropertiesResponse;
    /**
     * The provisioning state of the task.
     */
    readonly provisioningState: string;
    /**
     * The current status of task.
     */
    readonly status?: string;
    /**
     * The properties of a task step.
     */
    readonly step?: outputs.containerregistry.DockerBuildStepResponse | outputs.containerregistry.EncodedTaskStepResponse | outputs.containerregistry.FileTaskStepResponse;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: outputs.containerregistry.SystemDataResponse;
    /**
     * The tags of the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Run timeout in seconds.
     */
    readonly timeout?: number;
    /**
     * The properties that describe all triggers for the task.
     */
    readonly trigger?: outputs.containerregistry.TriggerPropertiesResponse;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
