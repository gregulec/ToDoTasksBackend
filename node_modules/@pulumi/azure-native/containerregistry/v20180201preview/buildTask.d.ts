import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * The build task that has the resource properties and all build items. The build task will have all information to schedule a build against it.
 */
export declare class BuildTask extends pulumi.CustomResource {
    /**
     * Get an existing BuildTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BuildTask;
    /**
     * Returns true if the given object is an instance of BuildTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BuildTask;
    /**
     * The alternative updatable name for a build task.
     */
    readonly alias: pulumi.Output<string>;
    /**
     * The creation date of build task.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The platform properties against which the build has to happen.
     */
    readonly platform: pulumi.Output<outputs.containerregistry.v20180201preview.PlatformPropertiesResponse>;
    /**
     * The provisioning state of the build task.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The properties that describes the source(code) for the build task.
     */
    readonly sourceRepository: pulumi.Output<outputs.containerregistry.v20180201preview.SourceRepositoryPropertiesResponse>;
    /**
     * The current status of build task.
     */
    readonly status: pulumi.Output<string | undefined>;
    /**
     * The tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Build timeout in seconds.
     */
    readonly timeout: pulumi.Output<number | undefined>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a BuildTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BuildTaskArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BuildTask resource.
 */
export interface BuildTaskArgs {
    /**
     * The alternative updatable name for a build task.
     */
    alias: pulumi.Input<string>;
    /**
     * The name of the container registry build task.
     */
    buildTaskName?: pulumi.Input<string>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    location?: pulumi.Input<string>;
    /**
     * The platform properties against which the build has to happen.
     */
    platform: pulumi.Input<inputs.containerregistry.v20180201preview.PlatformPropertiesArgs>;
    /**
     * The name of the container registry.
     */
    registryName: pulumi.Input<string>;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The properties that describes the source(code) for the build task.
     */
    sourceRepository: pulumi.Input<inputs.containerregistry.v20180201preview.SourceRepositoryPropertiesArgs>;
    /**
     * The current status of build task.
     */
    status?: pulumi.Input<string | enums.containerregistry.v20180201preview.BuildTaskStatus>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Build timeout in seconds.
     */
    timeout?: pulumi.Input<number>;
}
