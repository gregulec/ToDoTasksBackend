import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A function object, containing all information associated with the named function. All functions are contained under a streaming job.
 */
export declare function getFunction(args: GetFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionResult>;
export interface GetFunctionArgs {
    /**
     * The name of the function.
     */
    functionName: string;
    /**
     * The name of the streaming job.
     */
    jobName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * A function object, containing all information associated with the named function. All functions are contained under a streaming job.
 */
export interface GetFunctionResult {
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource name
     */
    readonly name?: string;
    /**
     * The properties that are associated with a function.
     */
    readonly properties: outputs.streamanalytics.v20170401preview.AggregateFunctionPropertiesResponse | outputs.streamanalytics.v20170401preview.ScalarFunctionPropertiesResponse;
    /**
     * Resource type
     */
    readonly type: string;
}
