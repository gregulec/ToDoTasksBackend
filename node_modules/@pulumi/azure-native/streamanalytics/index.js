"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20200301preview = exports.v20200301 = exports.v20170401preview = exports.v20160301 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./cluster"), exports);
__exportStar(require("./function"), exports);
__exportStar(require("./getCluster"), exports);
__exportStar(require("./getFunction"), exports);
__exportStar(require("./getInput"), exports);
__exportStar(require("./getOutput"), exports);
__exportStar(require("./getPrivateEndpoint"), exports);
__exportStar(require("./getStreamingJob"), exports);
__exportStar(require("./input"), exports);
__exportStar(require("./listClusterStreamingJobs"), exports);
__exportStar(require("./output"), exports);
__exportStar(require("./privateEndpoint"), exports);
__exportStar(require("./streamingJob"), exports);
// Export enums:
__exportStar(require("../types/enums/streamanalytics"), exports);
// Export sub-modules:
const v20160301 = require("./v20160301");
exports.v20160301 = v20160301;
const v20170401preview = require("./v20170401preview");
exports.v20170401preview = v20170401preview;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
// Import resources to register:
const cluster_1 = require("./cluster");
const function_1 = require("./function");
const input_1 = require("./input");
const output_1 = require("./output");
const privateEndpoint_1 = require("./privateEndpoint");
const streamingJob_1 = require("./streamingJob");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:streamanalytics:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure-native:streamanalytics:Function":
                return new function_1.Function(name, undefined, { urn });
            case "azure-native:streamanalytics:Input":
                return new input_1.Input(name, undefined, { urn });
            case "azure-native:streamanalytics:Output":
                return new output_1.Output(name, undefined, { urn });
            case "azure-native:streamanalytics:PrivateEndpoint":
                return new privateEndpoint_1.PrivateEndpoint(name, undefined, { urn });
            case "azure-native:streamanalytics:StreamingJob":
                return new streamingJob_1.StreamingJob(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "streamanalytics", _module);
//# sourceMappingURL=index.js.map