import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Information about appliance definition.
 */
export declare class ApplianceDefinition extends pulumi.CustomResource {
    /**
     * Get an existing ApplianceDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ApplianceDefinition;
    /**
     * Returns true if the given object is an instance of ApplianceDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApplianceDefinition;
    /**
     * The collection of appliance artifacts. The portal will use the files specified as artifacts to construct the user experience of creating an appliance from an appliance definition.
     */
    readonly artifacts: pulumi.Output<outputs.solutions.v20160901preview.ApplianceArtifactResponse[] | undefined>;
    /**
     * The appliance provider authorizations.
     */
    readonly authorizations: pulumi.Output<outputs.solutions.v20160901preview.ApplianceProviderAuthorizationResponse[]>;
    /**
     * The appliance definition description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The appliance definition display name.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The identity of the resource.
     */
    readonly identity: pulumi.Output<outputs.solutions.v20160901preview.IdentityResponse | undefined>;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The appliance lock level.
     */
    readonly lockLevel: pulumi.Output<string>;
    /**
     * ID of the resource that manages this resource.
     */
    readonly managedBy: pulumi.Output<string | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The appliance definition package file Uri.
     */
    readonly packageFileUri: pulumi.Output<string>;
    /**
     * The SKU of the resource.
     */
    readonly sku: pulumi.Output<outputs.solutions.v20160901preview.SkuResponse | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ApplianceDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplianceDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ApplianceDefinition resource.
 */
export interface ApplianceDefinitionArgs {
    /**
     * The name of the appliance definition.
     */
    applianceDefinitionName?: pulumi.Input<string>;
    /**
     * The collection of appliance artifacts. The portal will use the files specified as artifacts to construct the user experience of creating an appliance from an appliance definition.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.solutions.v20160901preview.ApplianceArtifactArgs>[]>;
    /**
     * The appliance provider authorizations.
     */
    authorizations: pulumi.Input<pulumi.Input<inputs.solutions.v20160901preview.ApplianceProviderAuthorizationArgs>[]>;
    /**
     * The appliance definition description.
     */
    description?: pulumi.Input<string>;
    /**
     * The appliance definition display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The identity of the resource.
     */
    identity?: pulumi.Input<inputs.solutions.v20160901preview.IdentityArgs>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The appliance lock level.
     */
    lockLevel: pulumi.Input<enums.solutions.v20160901preview.ApplianceLockLevel>;
    /**
     * ID of the resource that manages this resource.
     */
    managedBy?: pulumi.Input<string>;
    /**
     * The appliance definition package file Uri.
     */
    packageFileUri: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the resource.
     */
    sku?: pulumi.Input<inputs.solutions.v20160901preview.SkuArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
