import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * IoT sensor model
 */
export declare function getSensor(args: GetSensorArgs, opts?: pulumi.InvokeOptions): Promise<GetSensorResult>;
export interface GetSensorArgs {
    /**
     * Scope of the query (IoT Hub, /providers/Microsoft.Devices/iotHubs/myHub)
     */
    scope: string;
    /**
     * Name of the IoT sensor
     */
    sensorName: string;
}
/**
 * IoT sensor model
 */
export interface GetSensorResult {
    /**
     * Last connectivity time of the IoT sensor
     */
    readonly connectivityTime: string;
    /**
     * Dynamic mode status of the IoT sensor
     */
    readonly dynamicLearning: boolean;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * Learning mode status of the IoT sensor
     */
    readonly learningMode: boolean;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Status of the IoT sensor
     */
    readonly sensorStatus: string;
    /**
     * Type of sensor
     */
    readonly sensorType?: string;
    /**
     * Version of the IoT sensor
     */
    readonly sensorVersion: string;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    readonly systemData: outputs.iotsecurity.v20210901preview.SystemDataResponse;
    /**
     * TI Automatic mode status of the IoT sensor
     */
    readonly tiAutomaticUpdates?: boolean;
    /**
     * TI Status of the IoT sensor
     */
    readonly tiStatus: string;
    /**
     * TI Version of the IoT sensor
     */
    readonly tiVersion: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * Zone of the IoT sensor
     */
    readonly zone?: string;
}
