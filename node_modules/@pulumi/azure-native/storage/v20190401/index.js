"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./blobContainer"), exports);
__exportStar(require("./blobContainerImmutabilityPolicy"), exports);
__exportStar(require("./blobServiceProperties"), exports);
__exportStar(require("./fileServiceProperties"), exports);
__exportStar(require("./fileShare"), exports);
__exportStar(require("./getBlobContainer"), exports);
__exportStar(require("./getBlobContainerImmutabilityPolicy"), exports);
__exportStar(require("./getBlobServiceProperties"), exports);
__exportStar(require("./getFileServiceProperties"), exports);
__exportStar(require("./getFileShare"), exports);
__exportStar(require("./getManagementPolicy"), exports);
__exportStar(require("./getStorageAccount"), exports);
__exportStar(require("./listStorageAccountKeys"), exports);
__exportStar(require("./listStorageAccountSAS"), exports);
__exportStar(require("./listStorageAccountServiceSAS"), exports);
__exportStar(require("./managementPolicy"), exports);
__exportStar(require("./storageAccount"), exports);
// Export enums:
__exportStar(require("../../types/enums/storage/v20190401"), exports);
// Import resources to register:
const blobContainer_1 = require("./blobContainer");
const blobContainerImmutabilityPolicy_1 = require("./blobContainerImmutabilityPolicy");
const blobServiceProperties_1 = require("./blobServiceProperties");
const fileServiceProperties_1 = require("./fileServiceProperties");
const fileShare_1 = require("./fileShare");
const managementPolicy_1 = require("./managementPolicy");
const storageAccount_1 = require("./storageAccount");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:storage/v20190401:BlobContainer":
                return new blobContainer_1.BlobContainer(name, undefined, { urn });
            case "azure-native:storage/v20190401:BlobContainerImmutabilityPolicy":
                return new blobContainerImmutabilityPolicy_1.BlobContainerImmutabilityPolicy(name, undefined, { urn });
            case "azure-native:storage/v20190401:BlobServiceProperties":
                return new blobServiceProperties_1.BlobServiceProperties(name, undefined, { urn });
            case "azure-native:storage/v20190401:FileServiceProperties":
                return new fileServiceProperties_1.FileServiceProperties(name, undefined, { urn });
            case "azure-native:storage/v20190401:FileShare":
                return new fileShare_1.FileShare(name, undefined, { urn });
            case "azure-native:storage/v20190401:ManagementPolicy":
                return new managementPolicy_1.ManagementPolicy(name, undefined, { urn });
            case "azure-native:storage/v20190401:StorageAccount":
                return new storageAccount_1.StorageAccount(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "storage/v20190401", _module);
//# sourceMappingURL=index.js.map