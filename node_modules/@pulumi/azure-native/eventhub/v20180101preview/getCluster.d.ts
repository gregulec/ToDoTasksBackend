import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Single Event Hubs Cluster resource in List or Get operations.
 */
export declare function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult>;
export interface GetClusterArgs {
    /**
     * The name of the Event Hubs Cluster.
     */
    clusterName: string;
    /**
     * Name of the resource group within the azure subscription.
     */
    resourceGroupName: string;
}
/**
 * Single Event Hubs Cluster resource in List or Get operations.
 */
export interface GetClusterResult {
    /**
     * The UTC time when the Event Hubs Cluster was created.
     */
    readonly createdAt: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * The metric ID of the cluster resource. Provided by the service and not modifiable by the user.
     */
    readonly metricId: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Properties of the cluster SKU.
     */
    readonly sku?: outputs.eventhub.v20180101preview.ClusterSkuResponse;
    /**
     * Status of the Cluster resource
     */
    readonly status: string;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * The UTC time when the Event Hubs Cluster was last updated.
     */
    readonly updatedAt: string;
}
