"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./cluster"), exports);
__exportStar(require("./consumerGroup"), exports);
__exportStar(require("./disasterRecoveryConfig"), exports);
__exportStar(require("./eventHub"), exports);
__exportStar(require("./eventHubAuthorizationRule"), exports);
__exportStar(require("./getCluster"), exports);
__exportStar(require("./getConsumerGroup"), exports);
__exportStar(require("./getDisasterRecoveryConfig"), exports);
__exportStar(require("./getEventHub"), exports);
__exportStar(require("./getEventHubAuthorizationRule"), exports);
__exportStar(require("./getNamespace"), exports);
__exportStar(require("./getNamespaceAuthorizationRule"), exports);
__exportStar(require("./getNamespaceIpFilterRule"), exports);
__exportStar(require("./getNamespaceNetworkRuleSet"), exports);
__exportStar(require("./getNamespaceVirtualNetworkRule"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./listDisasterRecoveryConfigKeys"), exports);
__exportStar(require("./listEventHubKeys"), exports);
__exportStar(require("./listNamespaceKeys"), exports);
__exportStar(require("./namespace"), exports);
__exportStar(require("./namespaceAuthorizationRule"), exports);
__exportStar(require("./namespaceIpFilterRule"), exports);
__exportStar(require("./namespaceNetworkRuleSet"), exports);
__exportStar(require("./namespaceVirtualNetworkRule"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
// Export enums:
__exportStar(require("../../types/enums/eventhub/v20180101preview"), exports);
// Import resources to register:
const cluster_1 = require("./cluster");
const consumerGroup_1 = require("./consumerGroup");
const disasterRecoveryConfig_1 = require("./disasterRecoveryConfig");
const eventHub_1 = require("./eventHub");
const eventHubAuthorizationRule_1 = require("./eventHubAuthorizationRule");
const namespace_1 = require("./namespace");
const namespaceAuthorizationRule_1 = require("./namespaceAuthorizationRule");
const namespaceIpFilterRule_1 = require("./namespaceIpFilterRule");
const namespaceNetworkRuleSet_1 = require("./namespaceNetworkRuleSet");
const namespaceVirtualNetworkRule_1 = require("./namespaceVirtualNetworkRule");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:eventhub/v20180101preview:Cluster":
                return new cluster_1.Cluster(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:ConsumerGroup":
                return new consumerGroup_1.ConsumerGroup(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:DisasterRecoveryConfig":
                return new disasterRecoveryConfig_1.DisasterRecoveryConfig(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:EventHub":
                return new eventHub_1.EventHub(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:EventHubAuthorizationRule":
                return new eventHubAuthorizationRule_1.EventHubAuthorizationRule(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:Namespace":
                return new namespace_1.Namespace(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:NamespaceAuthorizationRule":
                return new namespaceAuthorizationRule_1.NamespaceAuthorizationRule(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:NamespaceIpFilterRule":
                return new namespaceIpFilterRule_1.NamespaceIpFilterRule(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:NamespaceNetworkRuleSet":
                return new namespaceNetworkRuleSet_1.NamespaceNetworkRuleSet(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:NamespaceVirtualNetworkRule":
                return new namespaceVirtualNetworkRule_1.NamespaceVirtualNetworkRule(name, undefined, { urn });
            case "azure-native:eventhub/v20180101preview:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "eventhub/v20180101preview", _module);
//# sourceMappingURL=index.js.map