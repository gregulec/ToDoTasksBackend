import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Kubernetes role.
 * API Version: 2020-12-01.
 */
export declare function getKubernetesRole(args: GetKubernetesRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesRoleResult>;
export interface GetKubernetesRoleArgs {
    /**
     * The device name.
     */
    deviceName: string;
    /**
     * The role name.
     */
    name: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
}
/**
 * Kubernetes role.
 */
export interface GetKubernetesRoleResult {
    /**
     * Host OS supported by the Kubernetes role.
     */
    readonly hostPlatform: string;
    /**
     * Platform where the runtime is hosted.
     */
    readonly hostPlatformType: string;
    /**
     * The path ID that uniquely identifies the object.
     */
    readonly id: string;
    /**
     * Role type.
     * Expected value is 'Kubernetes'.
     */
    readonly kind: "Kubernetes";
    /**
     * Kubernetes cluster configuration
     */
    readonly kubernetesClusterInfo: outputs.databoxedge.KubernetesClusterInfoResponse;
    /**
     * Kubernetes role resources
     */
    readonly kubernetesRoleResources: outputs.databoxedge.KubernetesRoleResourcesResponse;
    /**
     * The object name.
     */
    readonly name: string;
    /**
     * State of Kubernetes deployment
     */
    readonly provisioningState: string;
    /**
     * Role status.
     */
    readonly roleStatus: string;
    /**
     * Role configured on ASE resource
     */
    readonly systemData: outputs.databoxedge.SystemDataResponse;
    /**
     * The hierarchical type of the object.
     */
    readonly type: string;
}
