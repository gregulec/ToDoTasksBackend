import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * Configuration of Azure web site
 */
export declare class SiteLogsConfig extends pulumi.CustomResource {
    /**
     * Get an existing SiteLogsConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SiteLogsConfig;
    /**
     * Returns true if the given object is an instance of SiteLogsConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SiteLogsConfig;
    /**
     * Application logs configuration
     */
    readonly applicationLogs: pulumi.Output<outputs.web.v20150801.ApplicationLogsConfigResponse | undefined>;
    /**
     * Detailed error messages configuration
     */
    readonly detailedErrorMessages: pulumi.Output<outputs.web.v20150801.EnabledConfigResponse | undefined>;
    /**
     * Failed requests tracing configuration
     */
    readonly failedRequestsTracing: pulumi.Output<outputs.web.v20150801.EnabledConfigResponse | undefined>;
    /**
     * Http logs configuration
     */
    readonly httpLogs: pulumi.Output<outputs.web.v20150801.HttpLogsConfigResponse | undefined>;
    /**
     * Kind of resource
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Resource Location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource Name
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * Create a SiteLogsConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteLogsConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SiteLogsConfig resource.
 */
export interface SiteLogsConfigArgs {
    /**
     * Application logs configuration
     */
    applicationLogs?: pulumi.Input<inputs.web.v20150801.ApplicationLogsConfigArgs>;
    /**
     * Detailed error messages configuration
     */
    detailedErrorMessages?: pulumi.Input<inputs.web.v20150801.EnabledConfigArgs>;
    /**
     * Failed requests tracing configuration
     */
    failedRequestsTracing?: pulumi.Input<inputs.web.v20150801.EnabledConfigArgs>;
    /**
     * Http logs configuration
     */
    httpLogs?: pulumi.Input<inputs.web.v20150801.HttpLogsConfigArgs>;
    /**
     * Resource Id
     */
    id?: pulumi.Input<string>;
    /**
     * Kind of resource
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location
     */
    location?: pulumi.Input<string>;
    /**
     * Resource Name
     */
    name: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Resource type
     */
    type?: pulumi.Input<string>;
}
