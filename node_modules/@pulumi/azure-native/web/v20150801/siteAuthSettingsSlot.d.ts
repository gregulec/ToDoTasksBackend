import * as pulumi from "@pulumi/pulumi";
import { enums } from "../../types";
/**
 * Configuration settings for the Azure App Service Authentication / Authorization feature.
 */
export declare class SiteAuthSettingsSlot extends pulumi.CustomResource {
    /**
     * Get an existing SiteAuthSettingsSlot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SiteAuthSettingsSlot;
    /**
     * Returns true if the given object is an instance of SiteAuthSettingsSlot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SiteAuthSettingsSlot;
    readonly aadClientId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when
     *             a user logs in. Each parameter must be in the form "key=value".
     */
    readonly additionalLoginParams: pulumi.Output<string[] | undefined>;
    /**
     * Gets or sets a list of allowed audience values to consider when validating JWTs issued by
     *             Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an
     *             allowed audience, regardless of this setting.
     */
    readonly allowedAudiences: pulumi.Output<string[] | undefined>;
    /**
     * Gets or sets a collection of external URLs that can be redirected to as part of logging in
     *             or logging out of the web app. Note that the query string part of the URL is ignored.
     *             This is an advanced setting typically only needed by Windows Store application backends.
     *             Note that URLs within the current domain are always implicitly allowed.
     */
    readonly allowedExternalRedirectUrls: pulumi.Output<string[] | undefined>;
    /**
     * Gets or sets the Client ID of this relying party application, known as the client_id.
     *             This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
     *             other 3rd party OpenID Connect providers.
     *             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
     */
    readonly clientId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
     *             This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
     *             Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
     *             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
     */
    readonly clientSecret: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the default authentication provider to use when multiple providers are configured.
     *             This setting is only needed if multiple providers are configured and the unauthenticated client
     *             action is set to "RedirectToLoginPage".
     */
    readonly defaultProvider: pulumi.Output<string | undefined>;
    /**
     * Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Gets or sets the App ID of the Facebook app used for login.
     *             This setting is required for enabling Facebook Login.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    readonly facebookAppId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the App Secret of the Facebook app used for Facebook Login.
     *             This setting is required for enabling Facebook Login.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    readonly facebookAppSecret: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
     *             This setting is optional.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    readonly facebookOAuthScopes: pulumi.Output<string[] | undefined>;
    /**
     * Gets or sets the OpenID Connect Client ID for the Google web application.
     *             This setting is required for enabling Google Sign-In.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    readonly googleClientId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the client secret associated with the Google web application.
     *             This setting is required for enabling Google Sign-In.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    readonly googleClientSecret: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
     *             This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    readonly googleOAuthScopes: pulumi.Output<string[] | undefined>;
    /**
     * Gets or sets the relative path prefix used by platform HTTP APIs.
     *             Changing this value is not recommended except for compatibility reasons.
     */
    readonly httpApiPrefixPath: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
     *             When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
     *             This URI is a case-sensitive identifier for the token issuer.
     *             More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
     */
    readonly issuer: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.
     *             This setting is required for enabling Microsoft Account authentication.
     *             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
     */
    readonly microsoftAccountClientId: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.
     *             This setting is required for enabling Microsoft Account authentication.
     *             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
     */
    readonly microsoftAccountClientSecret: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
     *             This setting is optional. If not specified, "wl.basic" is used as the default scope.
     *             Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
     */
    readonly microsoftAccountOAuthScopes: pulumi.Output<string[] | undefined>;
    readonly openIdIssuer: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the number of hours after session token expiration that a session token can be used to
     *             call the token refresh API. The default is 72 hours.
     */
    readonly tokenRefreshExtensionHours: pulumi.Output<number | undefined>;
    /**
     * Gets or sets a value indicating whether to durably store platform-specific security tokens
     *             obtained during login flows. This capability is disabled by default.
     */
    readonly tokenStoreEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.
     *             This setting is required for enabling Twitter Sign-In.
     *             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
     */
    readonly twitterConsumerKey: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     *             This setting is required for enabling Twitter Sign-In.
     *             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
     */
    readonly twitterConsumerSecret: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the action to take when an unauthenticated client attempts to access the app.
     */
    readonly unauthenticatedClientAction: pulumi.Output<string | undefined>;
    /**
     * Create a SiteAuthSettingsSlot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteAuthSettingsSlotArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SiteAuthSettingsSlot resource.
 */
export interface SiteAuthSettingsSlotArgs {
    aadClientId?: pulumi.Input<string>;
    /**
     * Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when
     *             a user logs in. Each parameter must be in the form "key=value".
     */
    additionalLoginParams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets a list of allowed audience values to consider when validating JWTs issued by
     *             Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an
     *             allowed audience, regardless of this setting.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets a collection of external URLs that can be redirected to as part of logging in
     *             or logging out of the web app. Note that the query string part of the URL is ignored.
     *             This is an advanced setting typically only needed by Windows Store application backends.
     *             Note that URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the Client ID of this relying party application, known as the client_id.
     *             This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
     *             other 3rd party OpenID Connect providers.
     *             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
     */
    clientId?: pulumi.Input<string>;
    /**
     * Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).
     *             This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.
     *             Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.
     *             More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Gets or sets the default authentication provider to use when multiple providers are configured.
     *             This setting is only needed if multiple providers are configured and the unauthenticated client
     *             action is set to "RedirectToLoginPage".
     */
    defaultProvider?: pulumi.Input<enums.web.v20150801.BuiltInAuthenticationProvider>;
    /**
     * Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Gets or sets the App ID of the Facebook app used for login.
     *             This setting is required for enabling Facebook Login.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    facebookAppId?: pulumi.Input<string>;
    /**
     * Gets or sets the App Secret of the Facebook app used for Facebook Login.
     *             This setting is required for enabling Facebook Login.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    facebookAppSecret?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.
     *             This setting is optional.
     *             Facebook Login documentation: https://developers.facebook.com/docs/facebook-login
     */
    facebookOAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the OpenID Connect Client ID for the Google web application.
     *             This setting is required for enabling Google Sign-In.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    googleClientId?: pulumi.Input<string>;
    /**
     * Gets or sets the client secret associated with the Google web application.
     *             This setting is required for enabling Google Sign-In.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    googleClientSecret?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.
     *             This setting is optional. If not specified, "openid", "profile", and "email" are used as default scopes.
     *             Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/
     */
    googleOAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Gets or sets the relative path prefix used by platform HTTP APIs.
     *             Changing this value is not recommended except for compatibility reasons.
     */
    httpApiPrefixPath?: pulumi.Input<string>;
    /**
     * Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
     *             When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
     *             This URI is a case-sensitive identifier for the token issuer.
     *             More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
     */
    issuer?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.
     *             This setting is required for enabling Microsoft Account authentication.
     *             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
     */
    microsoftAccountClientId?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.
     *             This setting is required for enabling Microsoft Account authentication.
     *             Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm
     */
    microsoftAccountClientSecret?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.
     *             This setting is optional. If not specified, "wl.basic" is used as the default scope.
     *             Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx
     */
    microsoftAccountOAuthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of web app
     */
    name: pulumi.Input<string>;
    openIdIssuer?: pulumi.Input<string>;
    /**
     * Name of resource group
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of web app slot. If not specified then will default to production slot.
     */
    slot: pulumi.Input<string>;
    /**
     * Gets or sets the number of hours after session token expiration that a session token can be used to
     *             call the token refresh API. The default is 72 hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Gets or sets a value indicating whether to durably store platform-specific security tokens
     *             obtained during login flows. This capability is disabled by default.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.
     *             This setting is required for enabling Twitter Sign-In.
     *             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
     */
    twitterConsumerKey?: pulumi.Input<string>;
    /**
     * Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     *             This setting is required for enabling Twitter Sign-In.
     *             Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
     */
    twitterConsumerSecret?: pulumi.Input<string>;
    /**
     * Gets or sets the action to take when an unauthenticated client attempts to access the app.
     */
    unauthenticatedClientAction?: pulumi.Input<enums.web.v20150801.UnauthenticatedClientAction>;
}
