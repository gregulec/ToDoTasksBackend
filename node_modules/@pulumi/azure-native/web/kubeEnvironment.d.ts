import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * A Kubernetes cluster specialized for web workloads by Azure App Service
 * API Version: 2021-01-01.
 */
export declare class KubeEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing KubeEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KubeEnvironment;
    /**
     * Returns true if the given object is an instance of KubeEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KubeEnvironment;
    readonly aksResourceID: pulumi.Output<string | undefined>;
    /**
     * Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only "log-analytics" is
     * supported
     */
    readonly appLogsConfiguration: pulumi.Output<outputs.web.AppLogsConfigurationResponse | undefined>;
    /**
     * Cluster configuration which determines the ARC cluster
     * components types. Eg: Choosing between BuildService kind,
     * FrontEnd Service ArtifactsStorageType etc.
     */
    readonly arcConfiguration: pulumi.Output<outputs.web.ArcConfigurationResponse | undefined>;
    /**
     * Default Domain Name for the cluster
     */
    readonly defaultDomain: pulumi.Output<string>;
    /**
     * Any errors that occurred during deployment or deployment validation
     */
    readonly deploymentErrors: pulumi.Output<string>;
    /**
     * Extended Location.
     */
    readonly extendedLocation: pulumi.Output<outputs.web.ExtendedLocationResponse | undefined>;
    /**
     * Only visible within Vnet/Subnet
     */
    readonly internalLoadBalancerEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Kind of resource.
     */
    readonly kind: pulumi.Output<string | undefined>;
    /**
     * Resource Location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource Name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the Kubernetes Environment.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Static IP of the KubeEnvironment
     */
    readonly staticIp: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a KubeEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubeEnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KubeEnvironment resource.
 */
export interface KubeEnvironmentArgs {
    aksResourceID?: pulumi.Input<string>;
    /**
     * Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only "log-analytics" is
     * supported
     */
    appLogsConfiguration?: pulumi.Input<inputs.web.AppLogsConfigurationArgs>;
    /**
     * Cluster configuration which determines the ARC cluster
     * components types. Eg: Choosing between BuildService kind,
     * FrontEnd Service ArtifactsStorageType etc.
     */
    arcConfiguration?: pulumi.Input<inputs.web.ArcConfigurationArgs>;
    /**
     * Extended Location.
     */
    extendedLocation?: pulumi.Input<inputs.web.ExtendedLocationArgs>;
    /**
     * Only visible within Vnet/Subnet
     */
    internalLoadBalancerEnabled?: pulumi.Input<boolean>;
    /**
     * Kind of resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * Resource Location.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the Kubernetes Environment.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the resource group to which the resource belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Static IP of the KubeEnvironment
     */
    staticIp?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
