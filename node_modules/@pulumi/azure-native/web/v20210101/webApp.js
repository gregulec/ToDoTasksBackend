"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebApp = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A web app, a mobile app backend, or an API app.
 */
class WebApp extends pulumi.CustomResource {
    /**
     * Create a WebApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        var _a, _b, _c, _d;
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["clientAffinityEnabled"] = args ? args.clientAffinityEnabled : undefined;
            inputs["clientCertEnabled"] = args ? args.clientCertEnabled : undefined;
            inputs["clientCertExclusionPaths"] = args ? args.clientCertExclusionPaths : undefined;
            inputs["clientCertMode"] = args ? args.clientCertMode : undefined;
            inputs["cloningInfo"] = args ? args.cloningInfo : undefined;
            inputs["containerSize"] = args ? args.containerSize : undefined;
            inputs["customDomainVerificationId"] = args ? args.customDomainVerificationId : undefined;
            inputs["dailyMemoryTimeQuota"] = args ? args.dailyMemoryTimeQuota : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["extendedLocation"] = args ? args.extendedLocation : undefined;
            inputs["hostNameSslStates"] = args ? args.hostNameSslStates : undefined;
            inputs["hostNamesDisabled"] = args ? args.hostNamesDisabled : undefined;
            inputs["hostingEnvironmentProfile"] = args ? args.hostingEnvironmentProfile : undefined;
            inputs["httpsOnly"] = args ? args.httpsOnly : undefined;
            inputs["hyperV"] = (_a = (args ? args.hyperV : undefined)) !== null && _a !== void 0 ? _a : false;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["isXenon"] = (_b = (args ? args.isXenon : undefined)) !== null && _b !== void 0 ? _b : false;
            inputs["keyVaultReferenceIdentity"] = args ? args.keyVaultReferenceIdentity : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["redundancyMode"] = args ? args.redundancyMode : undefined;
            inputs["reserved"] = (_c = (args ? args.reserved : undefined)) !== null && _c !== void 0 ? _c : false;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["scmSiteAlsoStopped"] = (_d = (args ? args.scmSiteAlsoStopped : undefined)) !== null && _d !== void 0 ? _d : false;
            inputs["serverFarmId"] = args ? args.serverFarmId : undefined;
            inputs["siteConfig"] = args ? args.siteConfig : undefined;
            inputs["storageAccountRequired"] = args ? args.storageAccountRequired : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["virtualNetworkSubnetId"] = args ? args.virtualNetworkSubnetId : undefined;
            inputs["availabilityState"] = undefined /*out*/;
            inputs["defaultHostName"] = undefined /*out*/;
            inputs["enabledHostNames"] = undefined /*out*/;
            inputs["hostNames"] = undefined /*out*/;
            inputs["inProgressOperationId"] = undefined /*out*/;
            inputs["isDefaultContainer"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["maxNumberOfWorkers"] = undefined /*out*/;
            inputs["outboundIpAddresses"] = undefined /*out*/;
            inputs["possibleOutboundIpAddresses"] = undefined /*out*/;
            inputs["repositorySiteName"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["slotSwapStatus"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["suspendedTill"] = undefined /*out*/;
            inputs["targetSwapSlot"] = undefined /*out*/;
            inputs["trafficManagerHostNames"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["usageState"] = undefined /*out*/;
        }
        else {
            inputs["availabilityState"] = undefined /*out*/;
            inputs["clientAffinityEnabled"] = undefined /*out*/;
            inputs["clientCertEnabled"] = undefined /*out*/;
            inputs["clientCertExclusionPaths"] = undefined /*out*/;
            inputs["clientCertMode"] = undefined /*out*/;
            inputs["containerSize"] = undefined /*out*/;
            inputs["customDomainVerificationId"] = undefined /*out*/;
            inputs["dailyMemoryTimeQuota"] = undefined /*out*/;
            inputs["defaultHostName"] = undefined /*out*/;
            inputs["enabled"] = undefined /*out*/;
            inputs["enabledHostNames"] = undefined /*out*/;
            inputs["extendedLocation"] = undefined /*out*/;
            inputs["hostNameSslStates"] = undefined /*out*/;
            inputs["hostNames"] = undefined /*out*/;
            inputs["hostNamesDisabled"] = undefined /*out*/;
            inputs["hostingEnvironmentProfile"] = undefined /*out*/;
            inputs["httpsOnly"] = undefined /*out*/;
            inputs["hyperV"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["inProgressOperationId"] = undefined /*out*/;
            inputs["isDefaultContainer"] = undefined /*out*/;
            inputs["isXenon"] = undefined /*out*/;
            inputs["keyVaultReferenceIdentity"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["lastModifiedTimeUtc"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maxNumberOfWorkers"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["outboundIpAddresses"] = undefined /*out*/;
            inputs["possibleOutboundIpAddresses"] = undefined /*out*/;
            inputs["redundancyMode"] = undefined /*out*/;
            inputs["repositorySiteName"] = undefined /*out*/;
            inputs["reserved"] = undefined /*out*/;
            inputs["resourceGroup"] = undefined /*out*/;
            inputs["scmSiteAlsoStopped"] = undefined /*out*/;
            inputs["serverFarmId"] = undefined /*out*/;
            inputs["siteConfig"] = undefined /*out*/;
            inputs["slotSwapStatus"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["storageAccountRequired"] = undefined /*out*/;
            inputs["suspendedTill"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["targetSwapSlot"] = undefined /*out*/;
            inputs["trafficManagerHostNames"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["usageState"] = undefined /*out*/;
            inputs["virtualNetworkSubnetId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:web/v20210101:WebApp" }, { type: "azure-native:web:WebApp" }, { type: "azure-nextgen:web:WebApp" }, { type: "azure-native:web/v20150801:WebApp" }, { type: "azure-nextgen:web/v20150801:WebApp" }, { type: "azure-native:web/v20160801:WebApp" }, { type: "azure-nextgen:web/v20160801:WebApp" }, { type: "azure-native:web/v20180201:WebApp" }, { type: "azure-nextgen:web/v20180201:WebApp" }, { type: "azure-native:web/v20181101:WebApp" }, { type: "azure-nextgen:web/v20181101:WebApp" }, { type: "azure-native:web/v20190801:WebApp" }, { type: "azure-nextgen:web/v20190801:WebApp" }, { type: "azure-native:web/v20200601:WebApp" }, { type: "azure-nextgen:web/v20200601:WebApp" }, { type: "azure-native:web/v20200901:WebApp" }, { type: "azure-nextgen:web/v20200901:WebApp" }, { type: "azure-native:web/v20201001:WebApp" }, { type: "azure-nextgen:web/v20201001:WebApp" }, { type: "azure-native:web/v20201201:WebApp" }, { type: "azure-nextgen:web/v20201201:WebApp" }, { type: "azure-native:web/v20210115:WebApp" }, { type: "azure-nextgen:web/v20210115:WebApp" }, { type: "azure-native:web/v20210201:WebApp" }, { type: "azure-nextgen:web/v20210201:WebApp" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(WebApp.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing WebApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new WebApp(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WebApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebApp.__pulumiType;
    }
}
exports.WebApp = WebApp;
/** @internal */
WebApp.__pulumiType = 'azure-native:web/v20210101:WebApp';
//# sourceMappingURL=webApp.js.map