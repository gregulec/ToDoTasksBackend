"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Represents a server group for create.
 */
class ServerGroup extends pulumi.CustomResource {
    /**
     * Create a ServerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["administratorLogin"] = args ? args.administratorLogin : undefined;
            inputs["administratorLoginPassword"] = args ? args.administratorLoginPassword : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["backupRetentionDays"] = args ? args.backupRetentionDays : undefined;
            inputs["citusVersion"] = args ? args.citusVersion : undefined;
            inputs["createMode"] = args ? args.createMode : undefined;
            inputs["delegatedSubnetArguments"] = args ? args.delegatedSubnetArguments : undefined;
            inputs["enableMx"] = args ? args.enableMx : undefined;
            inputs["enableShardsOnCoordinator"] = args ? args.enableShardsOnCoordinator : undefined;
            inputs["enableZfs"] = args ? args.enableZfs : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            inputs["pointInTimeUTC"] = args ? args.pointInTimeUTC : undefined;
            inputs["postgresqlVersion"] = args ? args.postgresqlVersion : undefined;
            inputs["privateDnsZoneArguments"] = args ? args.privateDnsZoneArguments : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["serverGroupName"] = args ? args.serverGroupName : undefined;
            inputs["serverRoleGroups"] = args ? args.serverRoleGroups : undefined;
            inputs["sourceLocation"] = args ? args.sourceLocation : undefined;
            inputs["sourceResourceGroupName"] = args ? args.sourceResourceGroupName : undefined;
            inputs["sourceServerGroupName"] = args ? args.sourceServerGroupName : undefined;
            inputs["sourceSubscriptionId"] = args ? args.sourceSubscriptionId : undefined;
            inputs["standbyAvailabilityZone"] = args ? args.standbyAvailabilityZone : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["earliestRestoreTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["readReplicas"] = undefined /*out*/;
            inputs["resourceProviderType"] = undefined /*out*/;
            inputs["sourceServerGroup"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["administratorLogin"] = undefined /*out*/;
            inputs["availabilityZone"] = undefined /*out*/;
            inputs["backupRetentionDays"] = undefined /*out*/;
            inputs["citusVersion"] = undefined /*out*/;
            inputs["delegatedSubnetArguments"] = undefined /*out*/;
            inputs["earliestRestoreTime"] = undefined /*out*/;
            inputs["enableMx"] = undefined /*out*/;
            inputs["enableShardsOnCoordinator"] = undefined /*out*/;
            inputs["enableZfs"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maintenanceWindow"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["postgresqlVersion"] = undefined /*out*/;
            inputs["privateDnsZoneArguments"] = undefined /*out*/;
            inputs["readReplicas"] = undefined /*out*/;
            inputs["resourceProviderType"] = undefined /*out*/;
            inputs["serverRoleGroups"] = undefined /*out*/;
            inputs["sourceServerGroup"] = undefined /*out*/;
            inputs["standbyAvailabilityZone"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["systemData"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:dbforpostgresql/v20201005privatepreview:ServerGroup" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ServerGroup.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ServerGroup(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerGroup.__pulumiType;
    }
}
exports.ServerGroup = ServerGroup;
/** @internal */
ServerGroup.__pulumiType = 'azure-native:dbforpostgresql/v20201005privatepreview:ServerGroup';
//# sourceMappingURL=serverGroup.js.map