import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Represents order item contract
 */
export declare function getOrderItemByName(args: GetOrderItemByNameArgs, opts?: pulumi.InvokeOptions): Promise<GetOrderItemByNameResult>;
export interface GetOrderItemByNameArgs {
    /**
     * $expand is supported on device details parameter for order item, which provides details on the devices of the product.
     */
    expand?: string;
    /**
     * The name of the order item
     */
    orderItemName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Represents order item contract
 */
export interface GetOrderItemByNameResult {
    /**
     * Represents shipping and return address for order item
     */
    readonly addressDetails: outputs.edgeorder.v20201201preview.AddressDetailsResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * Id of the order to which order item belongs to
     */
    readonly orderId: string;
    /**
     * Represents order item details.
     */
    readonly orderItemDetails: outputs.edgeorder.v20201201preview.OrderItemDetailsResponse;
    /**
     * Start time of order item
     */
    readonly startTime: string;
    /**
     * Represents resource creation and update time
     */
    readonly systemData: outputs.edgeorder.v20201201preview.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
