"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationRecoveryPlan = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Recovery plan details.
 */
class ReplicationRecoveryPlan extends pulumi.CustomResource {
    /**
     * Create a ReplicationRecoveryPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.resourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            inputs["properties"] = args ? args.properties : undefined;
            inputs["recoveryPlanName"] = args ? args.recoveryPlanName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:recoveryservices/v20210301:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20160810:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20160810:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20180110:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20180110:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20180710:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20180710:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20210210:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20210210:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20210401:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20210401:ReplicationRecoveryPlan" }, { type: "azure-native:recoveryservices/v20210601:ReplicationRecoveryPlan" }, { type: "azure-nextgen:recoveryservices/v20210601:ReplicationRecoveryPlan" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ReplicationRecoveryPlan.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ReplicationRecoveryPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ReplicationRecoveryPlan(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ReplicationRecoveryPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationRecoveryPlan.__pulumiType;
    }
}
exports.ReplicationRecoveryPlan = ReplicationRecoveryPlan;
/** @internal */
ReplicationRecoveryPlan.__pulumiType = 'azure-native:recoveryservices/v20210301:ReplicationRecoveryPlan';
//# sourceMappingURL=replicationRecoveryPlan.js.map