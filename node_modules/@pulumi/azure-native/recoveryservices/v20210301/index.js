"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getProtectedItem"), exports);
__exportStar(require("./getProtectionContainer"), exports);
__exportStar(require("./getProtectionIntent"), exports);
__exportStar(require("./getProtectionPolicy"), exports);
__exportStar(require("./getReplicationFabric"), exports);
__exportStar(require("./getReplicationMigrationItem"), exports);
__exportStar(require("./getReplicationNetworkMapping"), exports);
__exportStar(require("./getReplicationPolicy"), exports);
__exportStar(require("./getReplicationProtectedItem"), exports);
__exportStar(require("./getReplicationProtectionContainerMapping"), exports);
__exportStar(require("./getReplicationRecoveryPlan"), exports);
__exportStar(require("./getReplicationRecoveryServicesProvider"), exports);
__exportStar(require("./getReplicationStorageClassificationMapping"), exports);
__exportStar(require("./getReplicationvCenter"), exports);
__exportStar(require("./getVault"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./protectedItem"), exports);
__exportStar(require("./protectionContainer"), exports);
__exportStar(require("./protectionIntent"), exports);
__exportStar(require("./protectionPolicy"), exports);
__exportStar(require("./replicationFabric"), exports);
__exportStar(require("./replicationMigrationItem"), exports);
__exportStar(require("./replicationNetworkMapping"), exports);
__exportStar(require("./replicationPolicy"), exports);
__exportStar(require("./replicationProtectedItem"), exports);
__exportStar(require("./replicationProtectionContainerMapping"), exports);
__exportStar(require("./replicationRecoveryPlan"), exports);
__exportStar(require("./replicationRecoveryServicesProvider"), exports);
__exportStar(require("./replicationStorageClassificationMapping"), exports);
__exportStar(require("./replicationvCenter"), exports);
__exportStar(require("./vault"), exports);
// Export enums:
__exportStar(require("../../types/enums/recoveryservices/v20210301"), exports);
// Import resources to register:
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const protectedItem_1 = require("./protectedItem");
const protectionContainer_1 = require("./protectionContainer");
const protectionIntent_1 = require("./protectionIntent");
const protectionPolicy_1 = require("./protectionPolicy");
const replicationFabric_1 = require("./replicationFabric");
const replicationMigrationItem_1 = require("./replicationMigrationItem");
const replicationNetworkMapping_1 = require("./replicationNetworkMapping");
const replicationPolicy_1 = require("./replicationPolicy");
const replicationProtectedItem_1 = require("./replicationProtectedItem");
const replicationProtectionContainerMapping_1 = require("./replicationProtectionContainerMapping");
const replicationRecoveryPlan_1 = require("./replicationRecoveryPlan");
const replicationRecoveryServicesProvider_1 = require("./replicationRecoveryServicesProvider");
const replicationStorageClassificationMapping_1 = require("./replicationStorageClassificationMapping");
const replicationvCenter_1 = require("./replicationvCenter");
const vault_1 = require("./vault");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:recoveryservices/v20210301:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ProtectedItem":
                return new protectedItem_1.ProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ProtectionContainer":
                return new protectionContainer_1.ProtectionContainer(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ProtectionIntent":
                return new protectionIntent_1.ProtectionIntent(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ProtectionPolicy":
                return new protectionPolicy_1.ProtectionPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationFabric":
                return new replicationFabric_1.ReplicationFabric(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationMigrationItem":
                return new replicationMigrationItem_1.ReplicationMigrationItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationNetworkMapping":
                return new replicationNetworkMapping_1.ReplicationNetworkMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationPolicy":
                return new replicationPolicy_1.ReplicationPolicy(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationProtectedItem":
                return new replicationProtectedItem_1.ReplicationProtectedItem(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationProtectionContainerMapping":
                return new replicationProtectionContainerMapping_1.ReplicationProtectionContainerMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationRecoveryPlan":
                return new replicationRecoveryPlan_1.ReplicationRecoveryPlan(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationRecoveryServicesProvider":
                return new replicationRecoveryServicesProvider_1.ReplicationRecoveryServicesProvider(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationStorageClassificationMapping":
                return new replicationStorageClassificationMapping_1.ReplicationStorageClassificationMapping(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:ReplicationvCenter":
                return new replicationvCenter_1.ReplicationvCenter(name, undefined, { urn });
            case "azure-native:recoveryservices/v20210301:Vault":
                return new vault_1.Vault(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "recoveryservices/v20210301", _module);
//# sourceMappingURL=index.js.map