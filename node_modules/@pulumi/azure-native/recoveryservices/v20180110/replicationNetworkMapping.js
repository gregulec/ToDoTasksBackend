"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicationNetworkMapping = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.
 */
class ReplicationNetworkMapping extends pulumi.CustomResource {
    /**
     * Create a ReplicationNetworkMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.fabricName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fabricName'");
            }
            if ((!args || args.networkName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.resourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            inputs["fabricName"] = args ? args.fabricName : undefined;
            inputs["networkMappingName"] = args ? args.networkMappingName : undefined;
            inputs["networkName"] = args ? args.networkName : undefined;
            inputs["properties"] = args ? args.properties : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["properties"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:recoveryservices/v20180110:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20160810:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20160810:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20180710:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20180710:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20210210:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20210210:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20210301:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20210301:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20210401:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20210401:ReplicationNetworkMapping" }, { type: "azure-native:recoveryservices/v20210601:ReplicationNetworkMapping" }, { type: "azure-nextgen:recoveryservices/v20210601:ReplicationNetworkMapping" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ReplicationNetworkMapping.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ReplicationNetworkMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ReplicationNetworkMapping(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ReplicationNetworkMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationNetworkMapping.__pulumiType;
    }
}
exports.ReplicationNetworkMapping = ReplicationNetworkMapping;
/** @internal */
ReplicationNetworkMapping.__pulumiType = 'azure-native:recoveryservices/v20180110:ReplicationNetworkMapping';
//# sourceMappingURL=replicationNetworkMapping.js.map