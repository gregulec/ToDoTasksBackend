import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Represents the response of a service unit resource.
 * API Version: 2019-11-01-preview.
 */
export declare class ServiceUnit extends pulumi.CustomResource {
    /**
     * Get an existing ServiceUnit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceUnit;
    /**
     * Returns true if the given object is an instance of ServiceUnit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceUnit;
    /**
     * The artifacts for the service unit.
     */
    readonly artifacts: pulumi.Output<outputs.deploymentmanager.ServiceUnitArtifactsResponse | undefined>;
    /**
     * Describes the type of ARM deployment to be performed on the resource.
     */
    readonly deploymentMode: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     */
    readonly targetResourceGroup: pulumi.Output<string>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ServiceUnit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceUnitArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ServiceUnit resource.
 */
export interface ServiceUnitArgs {
    /**
     * The artifacts for the service unit.
     */
    artifacts?: pulumi.Input<inputs.deploymentmanager.ServiceUnitArtifactsArgs>;
    /**
     * Describes the type of ARM deployment to be performed on the resource.
     */
    deploymentMode: pulumi.Input<enums.deploymentmanager.DeploymentMode>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the service resource.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The name of the service topology .
     */
    serviceTopologyName: pulumi.Input<string>;
    /**
     * The name of the service unit resource.
     */
    serviceUnitName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     */
    targetResourceGroup: pulumi.Input<string>;
}
