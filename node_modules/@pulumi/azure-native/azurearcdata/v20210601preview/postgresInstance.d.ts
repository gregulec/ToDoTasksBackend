import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * A Postgres Instance.
 */
export declare class PostgresInstance extends pulumi.CustomResource {
    /**
     * Get an existing PostgresInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PostgresInstance;
    /**
     * Returns true if the given object is an instance of PostgresInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PostgresInstance;
    /**
     * The extendedLocation of the resource.
     */
    readonly extendedLocation: pulumi.Output<outputs.azurearcdata.v20210601preview.ExtendedLocationResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * null
     */
    readonly properties: pulumi.Output<outputs.azurearcdata.v20210601preview.PostgresInstancePropertiesResponse>;
    /**
     * Resource sku.
     */
    readonly sku: pulumi.Output<outputs.azurearcdata.v20210601preview.PostgresInstanceSkuResponse | undefined>;
    /**
     * Read only system data
     */
    readonly systemData: pulumi.Output<outputs.azurearcdata.v20210601preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PostgresInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PostgresInstance resource.
 */
export interface PostgresInstanceArgs {
    /**
     * The extendedLocation of the resource.
     */
    extendedLocation?: pulumi.Input<inputs.azurearcdata.v20210601preview.ExtendedLocationArgs>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * Name of PostgresInstance
     */
    postgresInstanceName?: pulumi.Input<string>;
    /**
     * null
     */
    properties: pulumi.Input<inputs.azurearcdata.v20210601preview.PostgresInstancePropertiesArgs>;
    /**
     * The name of the Azure resource group
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource sku.
     */
    sku?: pulumi.Input<inputs.azurearcdata.v20210601preview.PostgresInstanceSkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
