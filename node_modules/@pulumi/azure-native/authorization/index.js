"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210701preview = exports.v20210601 = exports.v20210301preview = exports.v20201001preview = exports.v20200901 = exports.v20200801preview = exports.v20200701preview = exports.v20200501 = exports.v20200401preview = exports.v20200301preview = exports.v20200301 = exports.v20190901 = exports.v20190601 = exports.v20190101 = exports.v20180901preview = exports.v20180501preview = exports.v20180501 = exports.v20180301 = exports.v20180101preview = exports.v20171001preview = exports.v20170601preview = exports.v20161201 = exports.v20160901 = exports.v20160401 = exports.v20151001preview = exports.v20150701 = exports.v20150101 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./accessReviewScheduleDefinitionById"), exports);
__exportStar(require("./getAccessReviewScheduleDefinitionById"), exports);
__exportStar(require("./getClientConfig"), exports);
__exportStar(require("./getClientToken"), exports);
__exportStar(require("./getManagementLockAtResourceGroupLevel"), exports);
__exportStar(require("./getManagementLockAtResourceLevel"), exports);
__exportStar(require("./getManagementLockAtSubscriptionLevel"), exports);
__exportStar(require("./getManagementLockByScope"), exports);
__exportStar(require("./getPolicyAssignment"), exports);
__exportStar(require("./getPolicyDefinition"), exports);
__exportStar(require("./getPolicyDefinitionAtManagementGroup"), exports);
__exportStar(require("./getPolicyExemption"), exports);
__exportStar(require("./getPolicySetDefinition"), exports);
__exportStar(require("./getPolicySetDefinitionAtManagementGroup"), exports);
__exportStar(require("./getResourceManagementPrivateLink"), exports);
__exportStar(require("./getRoleAssignment"), exports);
__exportStar(require("./getRoleDefinition"), exports);
__exportStar(require("./getRoleManagementPolicyAssignment"), exports);
__exportStar(require("./managementLockAtResourceGroupLevel"), exports);
__exportStar(require("./managementLockAtResourceLevel"), exports);
__exportStar(require("./managementLockAtSubscriptionLevel"), exports);
__exportStar(require("./managementLockByScope"), exports);
__exportStar(require("./policyAssignment"), exports);
__exportStar(require("./policyDefinition"), exports);
__exportStar(require("./policyDefinitionAtManagementGroup"), exports);
__exportStar(require("./policyExemption"), exports);
__exportStar(require("./policySetDefinition"), exports);
__exportStar(require("./policySetDefinitionAtManagementGroup"), exports);
__exportStar(require("./resourceManagementPrivateLink"), exports);
__exportStar(require("./roleAssignment"), exports);
__exportStar(require("./roleDefinition"), exports);
__exportStar(require("./roleManagementPolicyAssignment"), exports);
// Export enums:
__exportStar(require("../types/enums/authorization"), exports);
// Export sub-modules:
const v20150101 = require("./v20150101");
exports.v20150101 = v20150101;
const v20150701 = require("./v20150701");
exports.v20150701 = v20150701;
const v20151001preview = require("./v20151001preview");
exports.v20151001preview = v20151001preview;
const v20160401 = require("./v20160401");
exports.v20160401 = v20160401;
const v20160901 = require("./v20160901");
exports.v20160901 = v20160901;
const v20161201 = require("./v20161201");
exports.v20161201 = v20161201;
const v20170601preview = require("./v20170601preview");
exports.v20170601preview = v20170601preview;
const v20171001preview = require("./v20171001preview");
exports.v20171001preview = v20171001preview;
const v20180101preview = require("./v20180101preview");
exports.v20180101preview = v20180101preview;
const v20180301 = require("./v20180301");
exports.v20180301 = v20180301;
const v20180501 = require("./v20180501");
exports.v20180501 = v20180501;
const v20180501preview = require("./v20180501preview");
exports.v20180501preview = v20180501preview;
const v20180901preview = require("./v20180901preview");
exports.v20180901preview = v20180901preview;
const v20190101 = require("./v20190101");
exports.v20190101 = v20190101;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20190901 = require("./v20190901");
exports.v20190901 = v20190901;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
const v20200401preview = require("./v20200401preview");
exports.v20200401preview = v20200401preview;
const v20200501 = require("./v20200501");
exports.v20200501 = v20200501;
const v20200701preview = require("./v20200701preview");
exports.v20200701preview = v20200701preview;
const v20200801preview = require("./v20200801preview");
exports.v20200801preview = v20200801preview;
const v20200901 = require("./v20200901");
exports.v20200901 = v20200901;
const v20201001preview = require("./v20201001preview");
exports.v20201001preview = v20201001preview;
const v20210301preview = require("./v20210301preview");
exports.v20210301preview = v20210301preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
const v20210701preview = require("./v20210701preview");
exports.v20210701preview = v20210701preview;
// Import resources to register:
const accessReviewScheduleDefinitionById_1 = require("./accessReviewScheduleDefinitionById");
const managementLockAtResourceGroupLevel_1 = require("./managementLockAtResourceGroupLevel");
const managementLockAtResourceLevel_1 = require("./managementLockAtResourceLevel");
const managementLockAtSubscriptionLevel_1 = require("./managementLockAtSubscriptionLevel");
const managementLockByScope_1 = require("./managementLockByScope");
const policyAssignment_1 = require("./policyAssignment");
const policyDefinition_1 = require("./policyDefinition");
const policyDefinitionAtManagementGroup_1 = require("./policyDefinitionAtManagementGroup");
const policyExemption_1 = require("./policyExemption");
const policySetDefinition_1 = require("./policySetDefinition");
const policySetDefinitionAtManagementGroup_1 = require("./policySetDefinitionAtManagementGroup");
const resourceManagementPrivateLink_1 = require("./resourceManagementPrivateLink");
const roleAssignment_1 = require("./roleAssignment");
const roleDefinition_1 = require("./roleDefinition");
const roleManagementPolicyAssignment_1 = require("./roleManagementPolicyAssignment");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:authorization:AccessReviewScheduleDefinitionById":
                return new accessReviewScheduleDefinitionById_1.AccessReviewScheduleDefinitionById(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtResourceGroupLevel":
                return new managementLockAtResourceGroupLevel_1.ManagementLockAtResourceGroupLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtResourceLevel":
                return new managementLockAtResourceLevel_1.ManagementLockAtResourceLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockAtSubscriptionLevel":
                return new managementLockAtSubscriptionLevel_1.ManagementLockAtSubscriptionLevel(name, undefined, { urn });
            case "azure-native:authorization:ManagementLockByScope":
                return new managementLockByScope_1.ManagementLockByScope(name, undefined, { urn });
            case "azure-native:authorization:PolicyAssignment":
                return new policyAssignment_1.PolicyAssignment(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinition":
                return new policyDefinition_1.PolicyDefinition(name, undefined, { urn });
            case "azure-native:authorization:PolicyDefinitionAtManagementGroup":
                return new policyDefinitionAtManagementGroup_1.PolicyDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:PolicyExemption":
                return new policyExemption_1.PolicyExemption(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinition":
                return new policySetDefinition_1.PolicySetDefinition(name, undefined, { urn });
            case "azure-native:authorization:PolicySetDefinitionAtManagementGroup":
                return new policySetDefinitionAtManagementGroup_1.PolicySetDefinitionAtManagementGroup(name, undefined, { urn });
            case "azure-native:authorization:ResourceManagementPrivateLink":
                return new resourceManagementPrivateLink_1.ResourceManagementPrivateLink(name, undefined, { urn });
            case "azure-native:authorization:RoleAssignment":
                return new roleAssignment_1.RoleAssignment(name, undefined, { urn });
            case "azure-native:authorization:RoleDefinition":
                return new roleDefinition_1.RoleDefinition(name, undefined, { urn });
            case "azure-native:authorization:RoleManagementPolicyAssignment":
                return new roleManagementPolicyAssignment_1.RoleManagementPolicyAssignment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "authorization", _module);
//# sourceMappingURL=index.js.map