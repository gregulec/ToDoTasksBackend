import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * The policy assignment.
 */
export declare function getPolicyAssignment(args: GetPolicyAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyAssignmentResult>;
export interface GetPolicyAssignmentArgs {
    /**
     * The name of the policy assignment to get.
     */
    policyAssignmentName: string;
    /**
     * The scope of the policy assignment.
     */
    scope: string;
}
/**
 * The policy assignment.
 */
export interface GetPolicyAssignmentResult {
    /**
     * This message will be part of response in case of policy violation.
     */
    readonly description?: string;
    /**
     * The display name of the policy assignment.
     */
    readonly displayName?: string;
    /**
     * The ID of the policy assignment.
     */
    readonly id: string;
    /**
     * The policy assignment metadata.
     */
    readonly metadata?: any;
    /**
     * The name of the policy assignment.
     */
    readonly name: string;
    /**
     * The policy's excluded scopes.
     */
    readonly notScopes?: string[];
    /**
     * Required if a parameter is used in policy rule.
     */
    readonly parameters?: any;
    /**
     * The ID of the policy definition.
     */
    readonly policyDefinitionId?: string;
    /**
     * The scope for the policy assignment.
     */
    readonly scope?: string;
    /**
     * The policy sku.
     */
    readonly sku?: outputs.authorization.v20170601preview.PolicySkuResponse;
    /**
     * The type of the policy assignment.
     */
    readonly type: string;
}
