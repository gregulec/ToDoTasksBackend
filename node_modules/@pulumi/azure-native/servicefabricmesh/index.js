"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20180901preview = exports.v20180701preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./application"), exports);
__exportStar(require("./gateway"), exports);
__exportStar(require("./getApplication"), exports);
__exportStar(require("./getGateway"), exports);
__exportStar(require("./getNetwork"), exports);
__exportStar(require("./getSecret"), exports);
__exportStar(require("./getSecretValue"), exports);
__exportStar(require("./getVolume"), exports);
__exportStar(require("./listSecretValue"), exports);
__exportStar(require("./network"), exports);
__exportStar(require("./secret"), exports);
__exportStar(require("./secretValue"), exports);
__exportStar(require("./volume"), exports);
// Export enums:
__exportStar(require("../types/enums/servicefabricmesh"), exports);
// Export sub-modules:
const v20180701preview = require("./v20180701preview");
exports.v20180701preview = v20180701preview;
const v20180901preview = require("./v20180901preview");
exports.v20180901preview = v20180901preview;
// Import resources to register:
const application_1 = require("./application");
const gateway_1 = require("./gateway");
const network_1 = require("./network");
const secret_1 = require("./secret");
const secretValue_1 = require("./secretValue");
const volume_1 = require("./volume");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:servicefabricmesh:Application":
                return new application_1.Application(name, undefined, { urn });
            case "azure-native:servicefabricmesh:Gateway":
                return new gateway_1.Gateway(name, undefined, { urn });
            case "azure-native:servicefabricmesh:Network":
                return new network_1.Network(name, undefined, { urn });
            case "azure-native:servicefabricmesh:Secret":
                return new secret_1.Secret(name, undefined, { urn });
            case "azure-native:servicefabricmesh:SecretValue":
                return new secretValue_1.SecretValue(name, undefined, { urn });
            case "azure-native:servicefabricmesh:Volume":
                return new volume_1.Volume(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "servicefabricmesh", _module);
//# sourceMappingURL=index.js.map