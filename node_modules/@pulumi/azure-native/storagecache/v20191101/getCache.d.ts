import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
 */
export declare function getCache(args: GetCacheArgs, opts?: pulumi.InvokeOptions): Promise<GetCacheResult>;
export interface GetCacheArgs {
    /**
     * Name of Cache.
     */
    cacheName: string;
    /**
     * Target resource group.
     */
    resourceGroupName: string;
}
/**
 * A Cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
 */
export interface GetCacheResult {
    /**
     * The size of this Cache, in GB.
     */
    readonly cacheSizeGB?: number;
    /**
     * Health of the Cache.
     */
    readonly health: outputs.storagecache.v20191101.CacheHealthResponse;
    /**
     * Resource ID of the Cache.
     */
    readonly id: string;
    /**
     * Region name string.
     */
    readonly location?: string;
    /**
     * Array of IP addresses that can be used by clients mounting this Cache.
     */
    readonly mountAddresses: string[];
    /**
     * Name of Cache.
     */
    readonly name: string;
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     */
    readonly provisioningState?: string;
    /**
     * SKU for the Cache.
     */
    readonly sku?: outputs.storagecache.v20191101.CacheResponseSku;
    /**
     * Subnet used for the Cache.
     */
    readonly subnet?: string;
    /**
     * ARM tags as name/value pairs.
     */
    readonly tags?: any;
    /**
     * Type of the Cache; Microsoft.StorageCache/Cache
     */
    readonly type: string;
    /**
     * Upgrade status of the Cache.
     */
    readonly upgradeStatus?: outputs.storagecache.v20191101.CacheUpgradeStatusResponse;
}
