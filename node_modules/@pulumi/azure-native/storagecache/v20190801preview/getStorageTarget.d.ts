import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A storage system being cached by a Cache.
 */
export declare function getStorageTarget(args: GetStorageTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageTargetResult>;
export interface GetStorageTargetArgs {
    /**
     * Name of cache.
     */
    cacheName: string;
    /**
     * Target resource group.
     */
    resourceGroupName: string;
    /**
     * Name of storage target.
     */
    storageTargetName: string;
}
/**
 * A storage system being cached by a Cache.
 */
export interface GetStorageTargetResult {
    /**
     * Properties when clfs target.
     */
    readonly clfs?: outputs.storagecache.v20190801preview.ClfsTargetResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * List of cache namespace to target namespace associations.
     */
    readonly junctions?: outputs.storagecache.v20190801preview.NamespaceJunctionResponse[];
    /**
     * A fully qualified URL.
     */
    readonly name: string;
    /**
     * Properties when nfs3 target.
     */
    readonly nfs3?: outputs.storagecache.v20190801preview.Nfs3TargetResponse;
    /**
     * ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
     */
    readonly provisioningState?: string;
    /**
     * Type for storage target.
     */
    readonly targetType?: string;
    /**
     * Type for the storage target; Microsoft.StorageCache/Cache/StorageTarget
     */
    readonly type: string;
    /**
     * Properties when unknown target.
     */
    readonly unknown?: outputs.storagecache.v20190801preview.UnknownTargetResponse;
}
