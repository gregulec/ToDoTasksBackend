"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./dataFlow"), exports);
__exportStar(require("./dataset"), exports);
__exportStar(require("./factory"), exports);
__exportStar(require("./getDataFlow"), exports);
__exportStar(require("./getDataset"), exports);
__exportStar(require("./getExposureControlFeatureValue"), exports);
__exportStar(require("./getExposureControlFeatureValueByFactory"), exports);
__exportStar(require("./getFactory"), exports);
__exportStar(require("./getFactoryDataPlaneAccess"), exports);
__exportStar(require("./getFactoryGitHubAccessToken"), exports);
__exportStar(require("./getIntegrationRuntime"), exports);
__exportStar(require("./getIntegrationRuntimeConnectionInfo"), exports);
__exportStar(require("./getIntegrationRuntimeObjectMetadatum"), exports);
__exportStar(require("./getIntegrationRuntimeStatus"), exports);
__exportStar(require("./getLinkedService"), exports);
__exportStar(require("./getManagedPrivateEndpoint"), exports);
__exportStar(require("./getPipeline"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getTrigger"), exports);
__exportStar(require("./getTriggerEventSubscriptionStatus"), exports);
__exportStar(require("./integrationRuntime"), exports);
__exportStar(require("./linkedService"), exports);
__exportStar(require("./listIntegrationRuntimeAuthKeys"), exports);
__exportStar(require("./managedPrivateEndpoint"), exports);
__exportStar(require("./pipeline"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./trigger"), exports);
// Export enums:
__exportStar(require("../../types/enums/datafactory/v20180601"), exports);
// Import resources to register:
const dataFlow_1 = require("./dataFlow");
const dataset_1 = require("./dataset");
const factory_1 = require("./factory");
const integrationRuntime_1 = require("./integrationRuntime");
const linkedService_1 = require("./linkedService");
const managedPrivateEndpoint_1 = require("./managedPrivateEndpoint");
const pipeline_1 = require("./pipeline");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const trigger_1 = require("./trigger");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:datafactory/v20180601:DataFlow":
                return new dataFlow_1.DataFlow(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:Dataset":
                return new dataset_1.Dataset(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:Factory":
                return new factory_1.Factory(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:IntegrationRuntime":
                return new integrationRuntime_1.IntegrationRuntime(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:LinkedService":
                return new linkedService_1.LinkedService(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:ManagedPrivateEndpoint":
                return new managedPrivateEndpoint_1.ManagedPrivateEndpoint(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:Pipeline":
                return new pipeline_1.Pipeline(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:datafactory/v20180601:Trigger":
                return new trigger_1.Trigger(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "datafactory/v20180601", _module);
//# sourceMappingURL=index.js.map