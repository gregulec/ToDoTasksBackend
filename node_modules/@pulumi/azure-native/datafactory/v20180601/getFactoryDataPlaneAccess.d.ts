import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Get Data Plane read only token response definition.
 */
export declare function getFactoryDataPlaneAccess(args: GetFactoryDataPlaneAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetFactoryDataPlaneAccessResult>;
export interface GetFactoryDataPlaneAccessArgs {
    /**
     * The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.
     */
    accessResourcePath?: string;
    /**
     * Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.
     */
    expireTime?: string;
    /**
     * The factory name.
     */
    factoryName: string;
    /**
     * The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.
     */
    permissions?: string;
    /**
     * The name of the profile. Currently only the default is supported. The default value is DefaultProfile.
     */
    profileName?: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
    /**
     * Start time for the token. If not specified the current time will be used.
     */
    startTime?: string;
}
/**
 * Get Data Plane read only token response definition.
 */
export interface GetFactoryDataPlaneAccessResult {
    /**
     * Data Plane read only access token.
     */
    readonly accessToken?: string;
    /**
     * Data Plane service base URL.
     */
    readonly dataPlaneUrl?: string;
    /**
     * The user access policy.
     */
    readonly policy?: outputs.datafactory.v20180601.UserAccessPolicyResponse;
}
