import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A SQL DW table data set.
 */
export declare function getSqlDWTableDataSet(args: GetSqlDWTableDataSetArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlDWTableDataSetResult>;
export interface GetSqlDWTableDataSetArgs {
    /**
     * The name of the share account.
     */
    accountName: string;
    /**
     * The name of the dataSet.
     */
    dataSetName: string;
    /**
     * The resource group name.
     */
    resourceGroupName: string;
    /**
     * The name of the share.
     */
    shareName: string;
}
/**
 * A SQL DW table data set.
 */
export interface GetSqlDWTableDataSetResult {
    /**
     * Unique id for identifying a data set resource
     */
    readonly dataSetId: string;
    /**
     * DataWarehouse name of the source data set
     */
    readonly dataWarehouseName: string;
    /**
     * The resource id of the azure resource
     */
    readonly id: string;
    /**
     * Kind of data set.
     * Expected value is 'SqlDWTable'.
     */
    readonly kind: "SqlDWTable";
    /**
     * Name of the azure resource
     */
    readonly name: string;
    /**
     * Schema of the table. Default value is dbo.
     */
    readonly schemaName: string;
    /**
     * Resource id of SQL server
     */
    readonly sqlServerResourceId: string;
    /**
     * System Data of the Azure resource.
     */
    readonly systemData: outputs.datashare.v20201001preview.SystemDataResponse;
    /**
     * SQL DW table name.
     */
    readonly tableName: string;
    /**
     * Type of the azure resource
     */
    readonly type: string;
}
