import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Event Subscription
 */
export declare class PartnerTopicEventSubscription extends pulumi.CustomResource {
    /**
     * Get an existing PartnerTopicEventSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PartnerTopicEventSubscription;
    /**
     * Returns true if the given object is an instance of PartnerTopicEventSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PartnerTopicEventSubscription;
    /**
     * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
     * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    readonly deadLetterDestination: pulumi.Output<outputs.eventgrid.v20210601preview.StorageBlobDeadLetterDestinationResponse | undefined>;
    /**
     * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
     * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    readonly deadLetterWithResourceIdentity: pulumi.Output<outputs.eventgrid.v20210601preview.DeadLetterWithResourceIdentityResponse | undefined>;
    /**
     * Information about the destination where events have to be delivered for the event subscription.
     * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    readonly deliveryWithResourceIdentity: pulumi.Output<outputs.eventgrid.v20210601preview.DeliveryWithResourceIdentityResponse | undefined>;
    /**
     * Information about the destination where events have to be delivered for the event subscription.
     * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    readonly destination: pulumi.Output<outputs.eventgrid.v20210601preview.AzureFunctionEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.EventHubEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.HybridConnectionEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.ServiceBusQueueEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.ServiceBusTopicEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.StorageQueueEventSubscriptionDestinationResponse | outputs.eventgrid.v20210601preview.WebHookEventSubscriptionDestinationResponse | undefined>;
    /**
     * The event delivery schema for the event subscription.
     */
    readonly eventDeliverySchema: pulumi.Output<string | undefined>;
    /**
     * Expiration time of the event subscription.
     */
    readonly expirationTimeUtc: pulumi.Output<string | undefined>;
    /**
     * Information about the filter for the event subscription.
     */
    readonly filter: pulumi.Output<outputs.eventgrid.v20210601preview.EventSubscriptionFilterResponse | undefined>;
    /**
     * List of user defined labels.
     */
    readonly labels: pulumi.Output<string[] | undefined>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the event subscription.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
     */
    readonly retryPolicy: pulumi.Output<outputs.eventgrid.v20210601preview.RetryPolicyResponse | undefined>;
    /**
     * The system metadata relating to Event Subscription resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20210601preview.SystemDataResponse>;
    /**
     * Name of the topic of the event subscription.
     */
    readonly topic: pulumi.Output<string>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PartnerTopicEventSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerTopicEventSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PartnerTopicEventSubscription resource.
 */
export interface PartnerTopicEventSubscriptionArgs {
    /**
     * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
     * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    deadLetterDestination?: pulumi.Input<inputs.eventgrid.v20210601preview.StorageBlobDeadLetterDestinationArgs>;
    /**
     * The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.
     * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    deadLetterWithResourceIdentity?: pulumi.Input<inputs.eventgrid.v20210601preview.DeadLetterWithResourceIdentityArgs>;
    /**
     * Information about the destination where events have to be delivered for the event subscription.
     * Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    deliveryWithResourceIdentity?: pulumi.Input<inputs.eventgrid.v20210601preview.DeliveryWithResourceIdentityArgs>;
    /**
     * Information about the destination where events have to be delivered for the event subscription.
     * Uses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.
     */
    destination?: pulumi.Input<inputs.eventgrid.v20210601preview.AzureFunctionEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.EventHubEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.HybridConnectionEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.ServiceBusQueueEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.ServiceBusTopicEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.StorageQueueEventSubscriptionDestinationArgs | inputs.eventgrid.v20210601preview.WebHookEventSubscriptionDestinationArgs>;
    /**
     * The event delivery schema for the event subscription.
     */
    eventDeliverySchema?: pulumi.Input<string | enums.eventgrid.v20210601preview.EventDeliverySchema>;
    /**
     * Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
     */
    eventSubscriptionName?: pulumi.Input<string>;
    /**
     * Expiration time of the event subscription.
     */
    expirationTimeUtc?: pulumi.Input<string>;
    /**
     * Information about the filter for the event subscription.
     */
    filter?: pulumi.Input<inputs.eventgrid.v20210601preview.EventSubscriptionFilterArgs>;
    /**
     * List of user defined labels.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the partner topic.
     */
    partnerTopicName: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
     */
    retryPolicy?: pulumi.Input<inputs.eventgrid.v20210601preview.RetryPolicyArgs>;
}
