"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210601preview = exports.v20201015preview = exports.v20200601 = exports.v20200401preview = exports.v20200101preview = exports.v20190601 = exports.v20190201preview = exports.v20190101 = exports.v20180915preview = exports.v20180501preview = exports.v20180101 = exports.v20170915preview = exports.v20170615preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./domain"), exports);
__exportStar(require("./domainTopic"), exports);
__exportStar(require("./eventChannel"), exports);
__exportStar(require("./eventSubscription"), exports);
__exportStar(require("./getDomain"), exports);
__exportStar(require("./getDomainTopic"), exports);
__exportStar(require("./getEventChannel"), exports);
__exportStar(require("./getEventSubscription"), exports);
__exportStar(require("./getEventSubscriptionDeliveryAttributes"), exports);
__exportStar(require("./getEventSubscriptionFullUrl"), exports);
__exportStar(require("./getPartnerNamespace"), exports);
__exportStar(require("./getPartnerRegistration"), exports);
__exportStar(require("./getPartnerTopicEventSubscription"), exports);
__exportStar(require("./getPartnerTopicEventSubscriptionDeliveryAttributes"), exports);
__exportStar(require("./getPartnerTopicEventSubscriptionFullUrl"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getSystemTopic"), exports);
__exportStar(require("./getSystemTopicEventSubscription"), exports);
__exportStar(require("./getSystemTopicEventSubscriptionDeliveryAttributes"), exports);
__exportStar(require("./getSystemTopicEventSubscriptionFullUrl"), exports);
__exportStar(require("./getTopic"), exports);
__exportStar(require("./listDomainSharedAccessKeys"), exports);
__exportStar(require("./listPartnerNamespaceSharedAccessKeys"), exports);
__exportStar(require("./listTopicSharedAccessKeys"), exports);
__exportStar(require("./partnerNamespace"), exports);
__exportStar(require("./partnerRegistration"), exports);
__exportStar(require("./partnerTopicEventSubscription"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./systemTopic"), exports);
__exportStar(require("./systemTopicEventSubscription"), exports);
__exportStar(require("./topic"), exports);
// Export enums:
__exportStar(require("../types/enums/eventgrid"), exports);
// Export sub-modules:
const v20170615preview = require("./v20170615preview");
exports.v20170615preview = v20170615preview;
const v20170915preview = require("./v20170915preview");
exports.v20170915preview = v20170915preview;
const v20180101 = require("./v20180101");
exports.v20180101 = v20180101;
const v20180501preview = require("./v20180501preview");
exports.v20180501preview = v20180501preview;
const v20180915preview = require("./v20180915preview");
exports.v20180915preview = v20180915preview;
const v20190101 = require("./v20190101");
exports.v20190101 = v20190101;
const v20190201preview = require("./v20190201preview");
exports.v20190201preview = v20190201preview;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20200101preview = require("./v20200101preview");
exports.v20200101preview = v20200101preview;
const v20200401preview = require("./v20200401preview");
exports.v20200401preview = v20200401preview;
const v20200601 = require("./v20200601");
exports.v20200601 = v20200601;
const v20201015preview = require("./v20201015preview");
exports.v20201015preview = v20201015preview;
const v20210601preview = require("./v20210601preview");
exports.v20210601preview = v20210601preview;
// Import resources to register:
const domain_1 = require("./domain");
const domainTopic_1 = require("./domainTopic");
const eventChannel_1 = require("./eventChannel");
const eventSubscription_1 = require("./eventSubscription");
const partnerNamespace_1 = require("./partnerNamespace");
const partnerRegistration_1 = require("./partnerRegistration");
const partnerTopicEventSubscription_1 = require("./partnerTopicEventSubscription");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const systemTopic_1 = require("./systemTopic");
const systemTopicEventSubscription_1 = require("./systemTopicEventSubscription");
const topic_1 = require("./topic");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:eventgrid:Domain":
                return new domain_1.Domain(name, undefined, { urn });
            case "azure-native:eventgrid:DomainTopic":
                return new domainTopic_1.DomainTopic(name, undefined, { urn });
            case "azure-native:eventgrid:EventChannel":
                return new eventChannel_1.EventChannel(name, undefined, { urn });
            case "azure-native:eventgrid:EventSubscription":
                return new eventSubscription_1.EventSubscription(name, undefined, { urn });
            case "azure-native:eventgrid:PartnerNamespace":
                return new partnerNamespace_1.PartnerNamespace(name, undefined, { urn });
            case "azure-native:eventgrid:PartnerRegistration":
                return new partnerRegistration_1.PartnerRegistration(name, undefined, { urn });
            case "azure-native:eventgrid:PartnerTopicEventSubscription":
                return new partnerTopicEventSubscription_1.PartnerTopicEventSubscription(name, undefined, { urn });
            case "azure-native:eventgrid:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:eventgrid:SystemTopic":
                return new systemTopic_1.SystemTopic(name, undefined, { urn });
            case "azure-native:eventgrid:SystemTopicEventSubscription":
                return new systemTopicEventSubscription_1.SystemTopicEventSubscription(name, undefined, { urn });
            case "azure-native:eventgrid:Topic":
                return new topic_1.Topic(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "eventgrid", _module);
//# sourceMappingURL=index.js.map