import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * EventGrid Partner Namespace.
 */
export declare class PartnerNamespace extends pulumi.CustomResource {
    /**
     * Get an existing PartnerNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PartnerNamespace;
    /**
     * Returns true if the given object is an instance of PartnerNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PartnerNamespace;
    /**
     * Endpoint for the partner namespace.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * Location of the resource.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
     */
    readonly partnerRegistrationFullyQualifiedId: pulumi.Output<string | undefined>;
    /**
     * Provisioning state of the partner namespace.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The system metadata relating to Partner Namespace resource.
     */
    readonly systemData: pulumi.Output<outputs.eventgrid.v20200401preview.SystemDataResponse>;
    /**
     * Tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a PartnerNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerNamespaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PartnerNamespace resource.
 */
export interface PartnerNamespaceArgs {
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the partner namespace.
     */
    partnerNamespaceName?: pulumi.Input<string>;
    /**
     * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
     */
    partnerRegistrationFullyQualifiedId?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
