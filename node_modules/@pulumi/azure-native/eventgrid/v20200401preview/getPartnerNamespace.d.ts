import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * EventGrid Partner Namespace.
 */
export declare function getPartnerNamespace(args: GetPartnerNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerNamespaceResult>;
export interface GetPartnerNamespaceArgs {
    /**
     * Name of the partner namespace.
     */
    partnerNamespaceName: string;
    /**
     * The name of the resource group within the user's subscription.
     */
    resourceGroupName: string;
}
/**
 * EventGrid Partner Namespace.
 */
export interface GetPartnerNamespaceResult {
    /**
     * Endpoint for the partner namespace.
     */
    readonly endpoint: string;
    /**
     * Fully qualified identifier of the resource.
     */
    readonly id: string;
    /**
     * Location of the resource.
     */
    readonly location: string;
    /**
     * Name of the resource.
     */
    readonly name: string;
    /**
     * The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:
     * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.
     */
    readonly partnerRegistrationFullyQualifiedId?: string;
    /**
     * Provisioning state of the partner namespace.
     */
    readonly provisioningState: string;
    /**
     * The system metadata relating to Partner Namespace resource.
     */
    readonly systemData: outputs.eventgrid.v20200401preview.SystemDataResponse;
    /**
     * Tags of the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Type of the resource.
     */
    readonly type: string;
}
