import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * Blueprint artifact deploys Azure resource manager template.
 */
export declare class TemplateArtifact extends pulumi.CustomResource {
    /**
     * Get an existing TemplateArtifact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TemplateArtifact;
    /**
     * Returns true if the given object is an instance of TemplateArtifact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TemplateArtifact;
    /**
     * Artifacts which need to be deployed before the specified artifact.
     */
    readonly dependsOn: pulumi.Output<string[] | undefined>;
    /**
     * Multi-line explain this resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * One-liner string explain this resource.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Specifies the kind of Blueprint artifact.
     * Expected value is 'template'.
     */
    readonly kind: pulumi.Output<"template">;
    /**
     * Name of this resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Template parameter values.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: outputs.blueprint.v20171111preview.ParameterValueBaseResponse;
    }>;
    /**
     * If applicable, the name of the resource group placeholder to which the template will be deployed.
     */
    readonly resourceGroup: pulumi.Output<string | undefined>;
    /**
     * The Azure Resource Manager template body.
     */
    readonly template: pulumi.Output<any>;
    /**
     * Type of this resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a TemplateArtifact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateArtifactArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TemplateArtifact resource.
 */
export interface TemplateArtifactArgs {
    /**
     * name of the artifact.
     */
    artifactName?: pulumi.Input<string>;
    /**
     * name of the blueprint.
     */
    blueprintName: pulumi.Input<string>;
    /**
     * Artifacts which need to be deployed before the specified artifact.
     */
    dependsOn?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Multi-line explain this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * One-liner string explain this resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the kind of Blueprint artifact.
     * Expected value is 'template'.
     */
    kind: pulumi.Input<"template">;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: pulumi.Input<string>;
    /**
     * Template parameter values.
     */
    parameters: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.blueprint.v20171111preview.ParameterValueBaseArgs>;
    }>;
    /**
     * If applicable, the name of the resource group placeholder to which the template will be deployed.
     */
    resourceGroup?: pulumi.Input<string>;
    /**
     * The Azure Resource Manager template body.
     */
    template: any;
}
