import * as pulumi from "@pulumi/pulumi";
import { enums } from "../../types";
/**
 * Represents a Blueprint artifact.
 *
 * @deprecated Please use one of the variants: PolicyAssignmentArtifact, RoleAssignmentArtifact, TemplateArtifact.
 */
export declare class Artifact extends pulumi.CustomResource {
    /**
     * Get an existing Artifact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Artifact;
    /**
     * Returns true if the given object is an instance of Artifact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Artifact;
    /**
     * Specifies the kind of Blueprint artifact.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * Name of this resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Type of this resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Artifact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Please use one of the variants: PolicyAssignmentArtifact, RoleAssignmentArtifact, TemplateArtifact. */
    constructor(name: string, args: ArtifactArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Artifact resource.
 */
export interface ArtifactArgs {
    /**
     * name of the artifact.
     */
    artifactName?: pulumi.Input<string>;
    /**
     * name of the blueprint.
     */
    blueprintName: pulumi.Input<string>;
    /**
     * Specifies the kind of Blueprint artifact.
     */
    kind: pulumi.Input<string | enums.blueprint.v20171111preview.ArtifactKind>;
    /**
     * ManagementGroup where blueprint stores.
     */
    managementGroupName: pulumi.Input<string>;
}
