"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.HostPool = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * Represents a HostPool definition.
 */
class HostPool extends pulumi.CustomResource {
    /**
     * Create a HostPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.hostPoolType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostPoolType'");
            }
            if ((!args || args.loadBalancerType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerType'");
            }
            if ((!args || args.preferredAppGroupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preferredAppGroupType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["customRdpProperty"] = args ? args.customRdpProperty : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["friendlyName"] = args ? args.friendlyName : undefined;
            inputs["hostPoolName"] = args ? args.hostPoolName : undefined;
            inputs["hostPoolType"] = args ? args.hostPoolType : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["loadBalancerType"] = args ? args.loadBalancerType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["managedBy"] = args ? args.managedBy : undefined;
            inputs["maxSessionLimit"] = args ? args.maxSessionLimit : undefined;
            inputs["migrationRequest"] = args ? args.migrationRequest : undefined;
            inputs["personalDesktopAssignmentType"] = args ? args.personalDesktopAssignmentType : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["preferredAppGroupType"] = args ? args.preferredAppGroupType : undefined;
            inputs["registrationInfo"] = args ? args.registrationInfo : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["ring"] = args ? args.ring : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["ssoClientId"] = args ? args.ssoClientId : undefined;
            inputs["ssoClientSecretKeyVaultPath"] = args ? args.ssoClientSecretKeyVaultPath : undefined;
            inputs["ssoSecretType"] = args ? args.ssoSecretType : undefined;
            inputs["ssoadfsAuthority"] = args ? args.ssoadfsAuthority : undefined;
            inputs["startVMOnConnect"] = args ? args.startVMOnConnect : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["validationEnvironment"] = args ? args.validationEnvironment : undefined;
            inputs["vmTemplate"] = args ? args.vmTemplate : undefined;
            inputs["applicationGroupReferences"] = undefined /*out*/;
            inputs["cloudPcResource"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["applicationGroupReferences"] = undefined /*out*/;
            inputs["cloudPcResource"] = undefined /*out*/;
            inputs["customRdpProperty"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["friendlyName"] = undefined /*out*/;
            inputs["hostPoolType"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["loadBalancerType"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["managedBy"] = undefined /*out*/;
            inputs["maxSessionLimit"] = undefined /*out*/;
            inputs["migrationRequest"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
            inputs["personalDesktopAssignmentType"] = undefined /*out*/;
            inputs["plan"] = undefined /*out*/;
            inputs["preferredAppGroupType"] = undefined /*out*/;
            inputs["registrationInfo"] = undefined /*out*/;
            inputs["ring"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["ssoClientId"] = undefined /*out*/;
            inputs["ssoClientSecretKeyVaultPath"] = undefined /*out*/;
            inputs["ssoSecretType"] = undefined /*out*/;
            inputs["ssoadfsAuthority"] = undefined /*out*/;
            inputs["startVMOnConnect"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["validationEnvironment"] = undefined /*out*/;
            inputs["vmTemplate"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:desktopvirtualization/v20210309preview:HostPool" }, { type: "azure-native:desktopvirtualization:HostPool" }, { type: "azure-nextgen:desktopvirtualization:HostPool" }, { type: "azure-native:desktopvirtualization/v20190123preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20190123preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20190924preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20190924preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20191210preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20191210preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20200921preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20200921preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20201019preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20201019preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20201102preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20201102preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20201110preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20201110preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20210114preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20210114preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20210201preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20210201preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20210401preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20210401preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20210513preview:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20210513preview:HostPool" }, { type: "azure-native:desktopvirtualization/v20210712:HostPool" }, { type: "azure-nextgen:desktopvirtualization/v20210712:HostPool" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(HostPool.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing HostPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new HostPool(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of HostPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostPool.__pulumiType;
    }
}
exports.HostPool = HostPool;
/** @internal */
HostPool.__pulumiType = 'azure-native:desktopvirtualization/v20210309preview:HostPool';
//# sourceMappingURL=hostPool.js.map