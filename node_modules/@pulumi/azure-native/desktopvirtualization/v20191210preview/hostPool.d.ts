import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Represents a HostPool definition.
 */
export declare class HostPool extends pulumi.CustomResource {
    /**
     * Get an existing HostPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HostPool;
    /**
     * Returns true if the given object is an instance of HostPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HostPool;
    /**
     * List of applicationGroup links.
     */
    readonly applicationGroupReferences: pulumi.Output<string[]>;
    /**
     * Custom rdp property of HostPool.
     */
    readonly customRdpProperty: pulumi.Output<string | undefined>;
    /**
     * Description of HostPool.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Friendly name of HostPool.
     */
    readonly friendlyName: pulumi.Output<string | undefined>;
    /**
     * HostPool type for desktop.
     */
    readonly hostPoolType: pulumi.Output<string>;
    /**
     * The type of the load balancer.
     */
    readonly loadBalancerType: pulumi.Output<string>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The max session limit of HostPool.
     */
    readonly maxSessionLimit: pulumi.Output<number | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * PersonalDesktopAssignment type for HostPool.
     */
    readonly personalDesktopAssignmentType: pulumi.Output<string | undefined>;
    /**
     * The type of preferred application group type, default to Desktop Application Group
     */
    readonly preferredAppGroupType: pulumi.Output<string>;
    /**
     * The registration info of HostPool.
     */
    readonly registrationInfo: pulumi.Output<outputs.desktopvirtualization.v20191210preview.RegistrationInfoResponse | undefined>;
    /**
     * The ring number of HostPool.
     */
    readonly ring: pulumi.Output<number | undefined>;
    /**
     * Path to keyvault containing ssoContext secret.
     */
    readonly ssoContext: pulumi.Output<string | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Is validation environment.
     */
    readonly validationEnvironment: pulumi.Output<boolean | undefined>;
    /**
     * VM template for sessionhosts configuration within hostpool.
     */
    readonly vmTemplate: pulumi.Output<string | undefined>;
    /**
     * Create a HostPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a HostPool resource.
 */
export interface HostPoolArgs {
    /**
     * Custom rdp property of HostPool.
     */
    customRdpProperty?: pulumi.Input<string>;
    /**
     * Description of HostPool.
     */
    description?: pulumi.Input<string>;
    /**
     * Friendly name of HostPool.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * The name of the host pool within the specified resource group
     */
    hostPoolName?: pulumi.Input<string>;
    /**
     * HostPool type for desktop.
     */
    hostPoolType: pulumi.Input<string | enums.desktopvirtualization.v20191210preview.HostPoolType>;
    /**
     * The type of the load balancer.
     */
    loadBalancerType: pulumi.Input<string | enums.desktopvirtualization.v20191210preview.LoadBalancerType>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The max session limit of HostPool.
     */
    maxSessionLimit?: pulumi.Input<number>;
    /**
     * PersonalDesktopAssignment type for HostPool.
     */
    personalDesktopAssignmentType?: pulumi.Input<string | enums.desktopvirtualization.v20191210preview.PersonalDesktopAssignmentType>;
    /**
     * The type of preferred application group type, default to Desktop Application Group
     */
    preferredAppGroupType: pulumi.Input<string | enums.desktopvirtualization.v20191210preview.PreferredAppGroupType>;
    /**
     * The registration info of HostPool.
     */
    registrationInfo?: pulumi.Input<inputs.desktopvirtualization.v20191210preview.RegistrationInfoArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ring number of HostPool.
     */
    ring?: pulumi.Input<number>;
    /**
     * Path to keyvault containing ssoContext secret.
     */
    ssoContext?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Is validation environment.
     */
    validationEnvironment?: pulumi.Input<boolean>;
    /**
     * VM template for sessionhosts configuration within hostpool.
     */
    vmTemplate?: pulumi.Input<string>;
}
