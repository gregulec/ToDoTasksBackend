import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Represents a SessionHostConfiguration definition.
 */
export declare class SessionHostConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing SessionHostConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SessionHostConfiguration;
    /**
     * Returns true if the given object is an instance of SessionHostConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SessionHostConfiguration;
    /**
     * The disk type used by virtual machine in hostpool session host.
     */
    readonly diskType: pulumi.Output<string | undefined>;
    /**
     * Domain configurations of session hosts.
     */
    readonly domainInfo: pulumi.Output<outputs.desktopvirtualization.v20210513preview.DomainInfoPropertiesResponse | undefined>;
    /**
     * Image configurations of HostPool.
     */
    readonly imageInfo: pulumi.Output<outputs.desktopvirtualization.v20210513preview.ImageInfoPropertiesResponse | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    readonly systemData: pulumi.Output<outputs.desktopvirtualization.v20210513preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * The id of the size of a virtual machine connected to a hostpool.
     */
    readonly vMSizeId: pulumi.Output<string | undefined>;
    /**
     * The time when session host configuration was last modified and something was changed.
     */
    readonly version: pulumi.Output<string>;
    /**
     * The uri to the storage blob containing scripts to be run on the virtual machine after provisioning.
     */
    readonly vmCustomConfigurationUri: pulumi.Output<string | undefined>;
    /**
     * Create a SessionHostConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SessionHostConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SessionHostConfiguration resource.
 */
export interface SessionHostConfigurationArgs {
    /**
     * The disk type used by virtual machine in hostpool session host.
     */
    diskType?: pulumi.Input<string | enums.desktopvirtualization.v20210513preview.VirtualMachineDiskType>;
    /**
     * Domain configurations of session hosts.
     */
    domainInfo?: pulumi.Input<inputs.desktopvirtualization.v20210513preview.DomainInfoPropertiesArgs>;
    /**
     * The name of the host pool within the specified resource group
     */
    hostPoolName: pulumi.Input<string>;
    /**
     * Image configurations of HostPool.
     */
    imageInfo?: pulumi.Input<inputs.desktopvirtualization.v20210513preview.ImageInfoPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The id of the size of a virtual machine connected to a hostpool.
     */
    vMSizeId?: pulumi.Input<string>;
    /**
     * The uri to the storage blob containing scripts to be run on the virtual machine after provisioning.
     */
    vmCustomConfigurationUri?: pulumi.Input<string>;
}
