import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Represents a scaling plan definition.
 */
export declare function getScalingPlan(args: GetScalingPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingPlanResult>;
export interface GetScalingPlanArgs {
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The name of the scaling plan.
     */
    scalingPlanName: string;
}
/**
 * Represents a scaling plan definition.
 */
export interface GetScalingPlanResult {
    /**
     * Description of scaling plan.
     */
    readonly description?: string;
    /**
     * Exclusion tag for scaling plan.
     */
    readonly exclusionTag?: string;
    /**
     * User friendly name of scaling plan.
     */
    readonly friendlyName?: string;
    /**
     * List of ScalingHostPoolReference definitions.
     */
    readonly hostPoolReferences?: outputs.desktopvirtualization.v20201110preview.ScalingHostPoolReferenceResponse[];
    /**
     * HostPool type for scaling plan.
     */
    readonly hostPoolType?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * List of ScalingSchedule definitions.
     */
    readonly schedules?: outputs.desktopvirtualization.v20201110preview.ScalingScheduleResponse[];
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Timezone of the scaling plan.
     */
    readonly timeZone?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
