import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Payload of the transaction node which is the request/response of the resource provider.
 * API Version: 2018-06-01-preview.
 */
export declare class TransactionNode extends pulumi.CustomResource {
    /**
     * Get an existing TransactionNode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransactionNode;
    /**
     * Returns true if the given object is an instance of TransactionNode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransactionNode;
    /**
     * Gets or sets the transaction node dns endpoint.
     */
    readonly dns: pulumi.Output<string>;
    /**
     * Gets or sets the firewall rules.
     */
    readonly firewallRules: pulumi.Output<outputs.blockchain.FirewallRuleResponse[] | undefined>;
    /**
     * Gets or sets the transaction node location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Sets the transaction node dns endpoint basic auth password.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the blockchain member provision state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets or sets the transaction node public key.
     */
    readonly publicKey: pulumi.Output<string>;
    /**
     * The type of the service - e.g. "Microsoft.Blockchain"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Gets or sets the transaction node dns endpoint basic auth user name.
     */
    readonly userName: pulumi.Output<string>;
    /**
     * Create a TransactionNode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransactionNodeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TransactionNode resource.
 */
export interface TransactionNodeArgs {
    /**
     * Blockchain member name.
     */
    blockchainMemberName: pulumi.Input<string>;
    /**
     * Gets or sets the firewall rules.
     */
    firewallRules?: pulumi.Input<pulumi.Input<inputs.blockchain.FirewallRuleArgs>[]>;
    /**
     * Gets or sets the transaction node location.
     */
    location?: pulumi.Input<string>;
    /**
     * Sets the transaction node dns endpoint basic auth password.
     */
    password?: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Transaction node name.
     */
    transactionNodeName?: pulumi.Input<string>;
}
