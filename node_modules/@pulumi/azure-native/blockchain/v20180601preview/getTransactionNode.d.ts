import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Payload of the transaction node which is the request/response of the resource provider.
 */
export declare function getTransactionNode(args: GetTransactionNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetTransactionNodeResult>;
export interface GetTransactionNodeArgs {
    /**
     * Blockchain member name.
     */
    blockchainMemberName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * Transaction node name.
     */
    transactionNodeName: string;
}
/**
 * Payload of the transaction node which is the request/response of the resource provider.
 */
export interface GetTransactionNodeResult {
    /**
     * Gets or sets the transaction node dns endpoint.
     */
    readonly dns: string;
    /**
     * Gets or sets the firewall rules.
     */
    readonly firewallRules?: outputs.blockchain.v20180601preview.FirewallRuleResponse[];
    /**
     * Fully qualified resource Id of the resource.
     */
    readonly id: string;
    /**
     * Gets or sets the transaction node location.
     */
    readonly location?: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * Sets the transaction node dns endpoint basic auth password.
     */
    readonly password?: string;
    /**
     * Gets or sets the blockchain member provision state.
     */
    readonly provisioningState: string;
    /**
     * Gets or sets the transaction node public key.
     */
    readonly publicKey: string;
    /**
     * The type of the service - e.g. "Microsoft.Blockchain"
     */
    readonly type: string;
    /**
     * Gets or sets the transaction node dns endpoint basic auth user name.
     */
    readonly userName: string;
}
