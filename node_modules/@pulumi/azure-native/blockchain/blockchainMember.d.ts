import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
/**
 * Payload of the blockchain member which is exposed in the request/response of the resource provider.
 * API Version: 2018-06-01-preview.
 */
export declare class BlockchainMember extends pulumi.CustomResource {
    /**
     * Get an existing BlockchainMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BlockchainMember;
    /**
     * Returns true if the given object is an instance of BlockchainMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BlockchainMember;
    /**
     * Gets or sets the consortium for the blockchain member.
     */
    readonly consortium: pulumi.Output<string | undefined>;
    /**
     * Gets the managed consortium management account address.
     */
    readonly consortiumManagementAccountAddress: pulumi.Output<string>;
    /**
     * Sets the managed consortium management account password.
     */
    readonly consortiumManagementAccountPassword: pulumi.Output<string | undefined>;
    /**
     * Gets the display name of the member in the consortium.
     */
    readonly consortiumMemberDisplayName: pulumi.Output<string | undefined>;
    /**
     * Gets the role of the member in the consortium.
     */
    readonly consortiumRole: pulumi.Output<string | undefined>;
    /**
     * Gets the dns endpoint of the blockchain member.
     */
    readonly dns: pulumi.Output<string>;
    /**
     * Gets or sets firewall rules
     */
    readonly firewallRules: pulumi.Output<outputs.blockchain.FirewallRuleResponse[] | undefined>;
    /**
     * The GEO location of the blockchain service.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Sets the basic auth password of the blockchain member.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the blockchain protocol.
     */
    readonly protocol: pulumi.Output<string | undefined>;
    /**
     * Gets or sets the blockchain member provision state.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets the public key of the blockchain member (default transaction node).
     */
    readonly publicKey: pulumi.Output<string>;
    /**
     * Gets the Ethereum root contract address of the blockchain.
     */
    readonly rootContractAddress: pulumi.Output<string>;
    /**
     * Gets or sets the blockchain member Sku.
     */
    readonly sku: pulumi.Output<outputs.blockchain.SkuResponse | undefined>;
    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the service - e.g. "Microsoft.Blockchain"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Gets the auth user name of the blockchain member.
     */
    readonly userName: pulumi.Output<string>;
    /**
     * Gets or sets the blockchain validator nodes Sku.
     */
    readonly validatorNodesSku: pulumi.Output<outputs.blockchain.BlockchainMemberNodesSkuResponse | undefined>;
    /**
     * Create a BlockchainMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlockchainMemberArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BlockchainMember resource.
 */
export interface BlockchainMemberArgs {
    /**
     * Blockchain member name.
     */
    blockchainMemberName?: pulumi.Input<string>;
    /**
     * Gets or sets the consortium for the blockchain member.
     */
    consortium?: pulumi.Input<string>;
    /**
     * Sets the managed consortium management account password.
     */
    consortiumManagementAccountPassword?: pulumi.Input<string>;
    /**
     * Gets the display name of the member in the consortium.
     */
    consortiumMemberDisplayName?: pulumi.Input<string>;
    /**
     * Gets the role of the member in the consortium.
     */
    consortiumRole?: pulumi.Input<string>;
    /**
     * Gets or sets firewall rules
     */
    firewallRules?: pulumi.Input<pulumi.Input<inputs.blockchain.FirewallRuleArgs>[]>;
    /**
     * The GEO location of the blockchain service.
     */
    location?: pulumi.Input<string>;
    /**
     * Sets the basic auth password of the blockchain member.
     */
    password?: pulumi.Input<string>;
    /**
     * Gets or sets the blockchain protocol.
     */
    protocol?: pulumi.Input<string | enums.blockchain.BlockchainProtocol>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Gets or sets the blockchain member Sku.
     */
    sku?: pulumi.Input<inputs.blockchain.SkuArgs>;
    /**
     * Tags of the service which is a list of key value pairs that describes the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Gets or sets the blockchain validator nodes Sku.
     */
    validatorNodesSku?: pulumi.Input<inputs.blockchain.BlockchainMemberNodesSkuArgs>;
}
