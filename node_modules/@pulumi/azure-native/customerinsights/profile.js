"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Profile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The profile resource format.
 * API Version: 2017-04-26.
 */
class Profile extends pulumi.CustomResource {
    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.hubName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hubName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["apiEntitySetName"] = args ? args.apiEntitySetName : undefined;
            inputs["attributes"] = args ? args.attributes : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["entityType"] = args ? args.entityType : undefined;
            inputs["fields"] = args ? args.fields : undefined;
            inputs["hubName"] = args ? args.hubName : undefined;
            inputs["instancesCount"] = args ? args.instancesCount : undefined;
            inputs["largeImage"] = args ? args.largeImage : undefined;
            inputs["localizedAttributes"] = args ? args.localizedAttributes : undefined;
            inputs["mediumImage"] = args ? args.mediumImage : undefined;
            inputs["profileName"] = args ? args.profileName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["schemaItemTypeLink"] = args ? args.schemaItemTypeLink : undefined;
            inputs["smallImage"] = args ? args.smallImage : undefined;
            inputs["strongIds"] = args ? args.strongIds : undefined;
            inputs["timestampFieldName"] = args ? args.timestampFieldName : undefined;
            inputs["typeName"] = args ? args.typeName : undefined;
            inputs["lastChangedUtc"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["apiEntitySetName"] = undefined /*out*/;
            inputs["attributes"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["entityType"] = undefined /*out*/;
            inputs["fields"] = undefined /*out*/;
            inputs["instancesCount"] = undefined /*out*/;
            inputs["largeImage"] = undefined /*out*/;
            inputs["lastChangedUtc"] = undefined /*out*/;
            inputs["localizedAttributes"] = undefined /*out*/;
            inputs["mediumImage"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["schemaItemTypeLink"] = undefined /*out*/;
            inputs["smallImage"] = undefined /*out*/;
            inputs["strongIds"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["timestampFieldName"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["typeName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:customerinsights:Profile" }, { type: "azure-native:customerinsights/v20170101:Profile" }, { type: "azure-nextgen:customerinsights/v20170101:Profile" }, { type: "azure-native:customerinsights/v20170426:Profile" }, { type: "azure-nextgen:customerinsights/v20170426:Profile" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Profile.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Profile(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Profile.__pulumiType;
    }
}
exports.Profile = Profile;
/** @internal */
Profile.__pulumiType = 'azure-native:customerinsights:Profile';
//# sourceMappingURL=profile.js.map