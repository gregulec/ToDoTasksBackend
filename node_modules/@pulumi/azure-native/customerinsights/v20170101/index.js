"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./connector"), exports);
__exportStar(require("./connectorMapping"), exports);
__exportStar(require("./getConnector"), exports);
__exportStar(require("./getConnectorMapping"), exports);
__exportStar(require("./getHub"), exports);
__exportStar(require("./getImageUploadUrlForData"), exports);
__exportStar(require("./getImageUploadUrlForEntityType"), exports);
__exportStar(require("./getKpi"), exports);
__exportStar(require("./getLink"), exports);
__exportStar(require("./getProfile"), exports);
__exportStar(require("./getRelationship"), exports);
__exportStar(require("./getRelationshipLink"), exports);
__exportStar(require("./getRoleAssignment"), exports);
__exportStar(require("./getView"), exports);
__exportStar(require("./hub"), exports);
__exportStar(require("./kpi"), exports);
__exportStar(require("./link"), exports);
__exportStar(require("./profile"), exports);
__exportStar(require("./relationship"), exports);
__exportStar(require("./relationshipLink"), exports);
__exportStar(require("./roleAssignment"), exports);
__exportStar(require("./view"), exports);
// Export enums:
__exportStar(require("../../types/enums/customerinsights/v20170101"), exports);
// Import resources to register:
const connector_1 = require("./connector");
const connectorMapping_1 = require("./connectorMapping");
const hub_1 = require("./hub");
const kpi_1 = require("./kpi");
const link_1 = require("./link");
const profile_1 = require("./profile");
const relationship_1 = require("./relationship");
const relationshipLink_1 = require("./relationshipLink");
const roleAssignment_1 = require("./roleAssignment");
const view_1 = require("./view");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:customerinsights/v20170101:Connector":
                return new connector_1.Connector(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:ConnectorMapping":
                return new connectorMapping_1.ConnectorMapping(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:Hub":
                return new hub_1.Hub(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:Kpi":
                return new kpi_1.Kpi(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:Link":
                return new link_1.Link(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:Profile":
                return new profile_1.Profile(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:Relationship":
                return new relationship_1.Relationship(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:RelationshipLink":
                return new relationshipLink_1.RelationshipLink(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:RoleAssignment":
                return new roleAssignment_1.RoleAssignment(name, undefined, { urn });
            case "azure-native:customerinsights/v20170101:View":
                return new view_1.View(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "customerinsights/v20170101", _module);
//# sourceMappingURL=index.js.map