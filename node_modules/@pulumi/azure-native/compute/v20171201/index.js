"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./availabilitySet"), exports);
__exportStar(require("./getAvailabilitySet"), exports);
__exportStar(require("./getImage"), exports);
__exportStar(require("./getLogAnalyticExportRequestRateByInterval"), exports);
__exportStar(require("./getLogAnalyticExportThrottledRequests"), exports);
__exportStar(require("./getVirtualMachine"), exports);
__exportStar(require("./getVirtualMachineExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSet"), exports);
__exportStar(require("./getVirtualMachineScaleSetExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSetVM"), exports);
__exportStar(require("./image"), exports);
__exportStar(require("./virtualMachine"), exports);
__exportStar(require("./virtualMachineExtension"), exports);
__exportStar(require("./virtualMachineScaleSet"), exports);
__exportStar(require("./virtualMachineScaleSetExtension"), exports);
__exportStar(require("./virtualMachineScaleSetVM"), exports);
// Export enums:
__exportStar(require("../../types/enums/compute/v20171201"), exports);
// Import resources to register:
const availabilitySet_1 = require("./availabilitySet");
const image_1 = require("./image");
const virtualMachine_1 = require("./virtualMachine");
const virtualMachineExtension_1 = require("./virtualMachineExtension");
const virtualMachineScaleSet_1 = require("./virtualMachineScaleSet");
const virtualMachineScaleSetExtension_1 = require("./virtualMachineScaleSetExtension");
const virtualMachineScaleSetVM_1 = require("./virtualMachineScaleSetVM");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:compute/v20171201:AvailabilitySet":
                return new availabilitySet_1.AvailabilitySet(name, undefined, { urn });
            case "azure-native:compute/v20171201:Image":
                return new image_1.Image(name, undefined, { urn });
            case "azure-native:compute/v20171201:VirtualMachine":
                return new virtualMachine_1.VirtualMachine(name, undefined, { urn });
            case "azure-native:compute/v20171201:VirtualMachineExtension":
                return new virtualMachineExtension_1.VirtualMachineExtension(name, undefined, { urn });
            case "azure-native:compute/v20171201:VirtualMachineScaleSet":
                return new virtualMachineScaleSet_1.VirtualMachineScaleSet(name, undefined, { urn });
            case "azure-native:compute/v20171201:VirtualMachineScaleSetExtension":
                return new virtualMachineScaleSetExtension_1.VirtualMachineScaleSetExtension(name, undefined, { urn });
            case "azure-native:compute/v20171201:VirtualMachineScaleSetVM":
                return new virtualMachineScaleSetVM_1.VirtualMachineScaleSetVM(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "compute/v20171201", _module);
//# sourceMappingURL=index.js.map