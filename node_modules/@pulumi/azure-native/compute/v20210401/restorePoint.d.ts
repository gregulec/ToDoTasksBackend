import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * Restore Point details.
 */
export declare class RestorePoint extends pulumi.CustomResource {
    /**
     * Get an existing RestorePoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RestorePoint;
    /**
     * Returns true if the given object is an instance of RestorePoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RestorePoint;
    /**
     * Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.
     */
    readonly consistencyMode: pulumi.Output<string>;
    /**
     * List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
     */
    readonly excludeDisks: pulumi.Output<outputs.compute.v20210401.ApiEntityReferenceResponse[] | undefined>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Gets the provisioning details set by the server during Create restore point operation.
     */
    readonly provisioningDetails: pulumi.Output<outputs.compute.v20210401.RestorePointProvisioningDetailsResponse>;
    /**
     * Gets the provisioning state of the restore point.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Gets the details of the VM captured at the time of the restore point creation.
     */
    readonly sourceMetadata: pulumi.Output<outputs.compute.v20210401.RestorePointSourceMetadataResponse>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a RestorePoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestorePointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RestorePoint resource.
 */
export interface RestorePointArgs {
    /**
     * List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
     */
    excludeDisks?: pulumi.Input<pulumi.Input<inputs.compute.v20210401.ApiEntityReferenceArgs>[]>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the restore point collection.
     */
    restorePointCollectionName: pulumi.Input<string>;
    /**
     * The name of the restore point.
     */
    restorePointName?: pulumi.Input<string>;
}
