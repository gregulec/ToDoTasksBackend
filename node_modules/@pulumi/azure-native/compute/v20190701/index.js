"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./availabilitySet"), exports);
__exportStar(require("./dedicatedHost"), exports);
__exportStar(require("./dedicatedHostGroup"), exports);
__exportStar(require("./disk"), exports);
__exportStar(require("./diskEncryptionSet"), exports);
__exportStar(require("./gallery"), exports);
__exportStar(require("./galleryApplication"), exports);
__exportStar(require("./galleryApplicationVersion"), exports);
__exportStar(require("./galleryImage"), exports);
__exportStar(require("./galleryImageVersion"), exports);
__exportStar(require("./getAvailabilitySet"), exports);
__exportStar(require("./getDedicatedHost"), exports);
__exportStar(require("./getDedicatedHostGroup"), exports);
__exportStar(require("./getDisk"), exports);
__exportStar(require("./getDiskEncryptionSet"), exports);
__exportStar(require("./getGallery"), exports);
__exportStar(require("./getGalleryApplication"), exports);
__exportStar(require("./getGalleryApplicationVersion"), exports);
__exportStar(require("./getGalleryImage"), exports);
__exportStar(require("./getGalleryImageVersion"), exports);
__exportStar(require("./getImage"), exports);
__exportStar(require("./getLogAnalyticExportRequestRateByInterval"), exports);
__exportStar(require("./getLogAnalyticExportThrottledRequests"), exports);
__exportStar(require("./getProximityPlacementGroup"), exports);
__exportStar(require("./getSnapshot"), exports);
__exportStar(require("./getVirtualMachine"), exports);
__exportStar(require("./getVirtualMachineExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSet"), exports);
__exportStar(require("./getVirtualMachineScaleSetExtension"), exports);
__exportStar(require("./getVirtualMachineScaleSetVM"), exports);
__exportStar(require("./getVirtualMachineScaleSetVMExtension"), exports);
__exportStar(require("./image"), exports);
__exportStar(require("./proximityPlacementGroup"), exports);
__exportStar(require("./snapshot"), exports);
__exportStar(require("./virtualMachine"), exports);
__exportStar(require("./virtualMachineExtension"), exports);
__exportStar(require("./virtualMachineScaleSet"), exports);
__exportStar(require("./virtualMachineScaleSetExtension"), exports);
__exportStar(require("./virtualMachineScaleSetVM"), exports);
__exportStar(require("./virtualMachineScaleSetVMExtension"), exports);
// Export enums:
__exportStar(require("../../types/enums/compute/v20190701"), exports);
// Import resources to register:
const availabilitySet_1 = require("./availabilitySet");
const dedicatedHost_1 = require("./dedicatedHost");
const dedicatedHostGroup_1 = require("./dedicatedHostGroup");
const disk_1 = require("./disk");
const diskEncryptionSet_1 = require("./diskEncryptionSet");
const gallery_1 = require("./gallery");
const galleryApplication_1 = require("./galleryApplication");
const galleryApplicationVersion_1 = require("./galleryApplicationVersion");
const galleryImage_1 = require("./galleryImage");
const galleryImageVersion_1 = require("./galleryImageVersion");
const image_1 = require("./image");
const proximityPlacementGroup_1 = require("./proximityPlacementGroup");
const snapshot_1 = require("./snapshot");
const virtualMachine_1 = require("./virtualMachine");
const virtualMachineExtension_1 = require("./virtualMachineExtension");
const virtualMachineScaleSet_1 = require("./virtualMachineScaleSet");
const virtualMachineScaleSetExtension_1 = require("./virtualMachineScaleSetExtension");
const virtualMachineScaleSetVM_1 = require("./virtualMachineScaleSetVM");
const virtualMachineScaleSetVMExtension_1 = require("./virtualMachineScaleSetVMExtension");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:compute/v20190701:AvailabilitySet":
                return new availabilitySet_1.AvailabilitySet(name, undefined, { urn });
            case "azure-native:compute/v20190701:DedicatedHost":
                return new dedicatedHost_1.DedicatedHost(name, undefined, { urn });
            case "azure-native:compute/v20190701:DedicatedHostGroup":
                return new dedicatedHostGroup_1.DedicatedHostGroup(name, undefined, { urn });
            case "azure-native:compute/v20190701:Disk":
                return new disk_1.Disk(name, undefined, { urn });
            case "azure-native:compute/v20190701:DiskEncryptionSet":
                return new diskEncryptionSet_1.DiskEncryptionSet(name, undefined, { urn });
            case "azure-native:compute/v20190701:Gallery":
                return new gallery_1.Gallery(name, undefined, { urn });
            case "azure-native:compute/v20190701:GalleryApplication":
                return new galleryApplication_1.GalleryApplication(name, undefined, { urn });
            case "azure-native:compute/v20190701:GalleryApplicationVersion":
                return new galleryApplicationVersion_1.GalleryApplicationVersion(name, undefined, { urn });
            case "azure-native:compute/v20190701:GalleryImage":
                return new galleryImage_1.GalleryImage(name, undefined, { urn });
            case "azure-native:compute/v20190701:GalleryImageVersion":
                return new galleryImageVersion_1.GalleryImageVersion(name, undefined, { urn });
            case "azure-native:compute/v20190701:Image":
                return new image_1.Image(name, undefined, { urn });
            case "azure-native:compute/v20190701:ProximityPlacementGroup":
                return new proximityPlacementGroup_1.ProximityPlacementGroup(name, undefined, { urn });
            case "azure-native:compute/v20190701:Snapshot":
                return new snapshot_1.Snapshot(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachine":
                return new virtualMachine_1.VirtualMachine(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachineExtension":
                return new virtualMachineExtension_1.VirtualMachineExtension(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachineScaleSet":
                return new virtualMachineScaleSet_1.VirtualMachineScaleSet(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachineScaleSetExtension":
                return new virtualMachineScaleSetExtension_1.VirtualMachineScaleSetExtension(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachineScaleSetVM":
                return new virtualMachineScaleSetVM_1.VirtualMachineScaleSetVM(name, undefined, { urn });
            case "azure-native:compute/v20190701:VirtualMachineScaleSetVMExtension":
                return new virtualMachineScaleSetVMExtension_1.VirtualMachineScaleSetVMExtension(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "compute/v20190701", _module);
//# sourceMappingURL=index.js.map