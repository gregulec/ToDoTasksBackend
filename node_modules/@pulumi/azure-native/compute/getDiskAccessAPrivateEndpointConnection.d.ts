import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * The Private Endpoint Connection resource.
 * API Version: 2020-12-01.
 */
export declare function getDiskAccessAPrivateEndpointConnection(args: GetDiskAccessAPrivateEndpointConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskAccessAPrivateEndpointConnectionResult>;
export interface GetDiskAccessAPrivateEndpointConnectionArgs {
    /**
     * The name of the disk access resource that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.
     */
    diskAccessName: string;
    /**
     * The name of the private endpoint connection
     */
    privateEndpointConnectionName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The Private Endpoint Connection resource.
 */
export interface GetDiskAccessAPrivateEndpointConnectionResult {
    /**
     * private endpoint connection Id
     */
    readonly id: string;
    /**
     * private endpoint connection name
     */
    readonly name: string;
    /**
     * The resource of private end point.
     */
    readonly privateEndpoint: outputs.compute.PrivateEndpointResponse;
    /**
     * A collection of information about the state of the connection between DiskAccess and Virtual Network.
     */
    readonly privateLinkServiceConnectionState: outputs.compute.PrivateLinkServiceConnectionStateResponse;
    /**
     * The provisioning state of the private endpoint connection resource.
     */
    readonly provisioningState: string;
    /**
     * private endpoint connection type
     */
    readonly type: string;
}
