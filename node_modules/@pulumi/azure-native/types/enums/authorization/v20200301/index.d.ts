export declare const EnforcementMode: {
    /**
     * The policy effect is enforced during resource creation or update.
     */
    readonly Default: "Default";
    /**
     * The policy effect is not enforced during resource creation or update.
     */
    readonly DoNotEnforce: "DoNotEnforce";
};
/**
 * The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.
 */
export declare type EnforcementMode = (typeof EnforcementMode)[keyof typeof EnforcementMode];
export declare const ParameterType: {
    readonly String: "String";
    readonly Array: "Array";
    readonly Object: "Object";
    readonly Boolean: "Boolean";
    readonly Integer: "Integer";
    readonly Float: "Float";
    readonly DateTime: "DateTime";
};
/**
 * The data type of the parameter.
 */
export declare type ParameterType = (typeof ParameterType)[keyof typeof ParameterType];
export declare const PolicyType: {
    readonly NotSpecified: "NotSpecified";
    readonly BuiltIn: "BuiltIn";
    readonly Custom: "Custom";
    readonly Static: "Static";
};
/**
 * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
 */
export declare type PolicyType = (typeof PolicyType)[keyof typeof PolicyType];
export declare const ResourceIdentityType: {
    /**
     * Indicates that a system assigned identity is associated with the resource.
     */
    readonly SystemAssigned: "SystemAssigned";
    /**
     * Indicates that no identity is associated with the resource or that the existing identity should be removed.
     */
    readonly None: "None";
};
/**
 * The identity type. This is the only required field when adding a system assigned identity to a resource.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
