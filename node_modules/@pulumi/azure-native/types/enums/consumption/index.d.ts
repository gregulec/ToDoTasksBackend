import * as v20171230preview from "./v20171230preview";
import * as v20180131 from "./v20180131";
import * as v20180331 from "./v20180331";
import * as v20180630 from "./v20180630";
import * as v20180831 from "./v20180831";
import * as v20181001 from "./v20181001";
import * as v20190101 from "./v20190101";
import * as v20190401preview from "./v20190401preview";
import * as v20190501 from "./v20190501";
import * as v20190501preview from "./v20190501preview";
import * as v20190601 from "./v20190601";
import * as v20191001 from "./v20191001";
import * as v20191101 from "./v20191101";
import * as v20210501 from "./v20210501";
export { v20171230preview, v20180131, v20180331, v20180630, v20180831, v20181001, v20190101, v20190401preview, v20190501, v20190501preview, v20190601, v20191001, v20191101, v20210501, };
export declare const BudgetOperatorType: {
    readonly In: "In";
};
/**
 * The operator to use for comparison.
 */
export declare type BudgetOperatorType = (typeof BudgetOperatorType)[keyof typeof BudgetOperatorType];
export declare const CategoryType: {
    readonly Cost: "Cost";
};
/**
 * The category of the budget, whether the budget tracks cost or usage.
 */
export declare type CategoryType = (typeof CategoryType)[keyof typeof CategoryType];
export declare const CultureCode: {
    readonly En_us: "en-us";
    readonly Ja_jp: "ja-jp";
    readonly Zh_cn: "zh-cn";
    readonly De_de: "de-de";
    readonly Es_es: "es-es";
    readonly Fr_fr: "fr-fr";
    readonly It_it: "it-it";
    readonly Ko_kr: "ko-kr";
    readonly Pt_br: "pt-br";
    readonly Ru_ru: "ru-ru";
    readonly Zh_tw: "zh-tw";
    readonly Cs_cz: "cs-cz";
    readonly Pl_pl: "pl-pl";
    readonly Tr_tr: "tr-tr";
    readonly Da_dk: "da-dk";
    readonly En_gb: "en-gb";
    readonly Hu_hu: "hu-hu";
    readonly Nb_no: "nb-no";
    readonly Nl_nl: "nl-nl";
    readonly Pt_pt: "pt-pt";
    readonly Sv_se: "sv-se";
};
/**
 * Language in which the recipient will receive the notification
 */
export declare type CultureCode = (typeof CultureCode)[keyof typeof CultureCode];
export declare const OperatorType: {
    readonly EqualTo: "EqualTo";
    readonly GreaterThan: "GreaterThan";
    readonly GreaterThanOrEqualTo: "GreaterThanOrEqualTo";
};
/**
 * The comparison operator.
 */
export declare type OperatorType = (typeof OperatorType)[keyof typeof OperatorType];
export declare const ThresholdType: {
    readonly Actual: "Actual";
};
/**
 * The type of threshold
 */
export declare type ThresholdType = (typeof ThresholdType)[keyof typeof ThresholdType];
export declare const TimeGrainType: {
    readonly Monthly: "Monthly";
    readonly Quarterly: "Quarterly";
    readonly Annually: "Annually";
    readonly BillingMonth: "BillingMonth";
    readonly BillingQuarter: "BillingQuarter";
    readonly BillingAnnual: "BillingAnnual";
};
/**
 * The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers
 */
export declare type TimeGrainType = (typeof TimeGrainType)[keyof typeof TimeGrainType];
