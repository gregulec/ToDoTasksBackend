export declare const Action: {
    readonly Allow: "Allow";
};
/**
 * The action of virtual network rule.
 */
export declare type Action = (typeof Action)[keyof typeof Action];
export declare const DefaultAction: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
};
/**
 * The default action of allow or deny when no other rules match.
 */
export declare type DefaultAction = (typeof DefaultAction)[keyof typeof DefaultAction];
export declare const PolicyStatus: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
};
/**
 * The value that indicates whether the policy is enabled or not.
 */
export declare type PolicyStatus = (typeof PolicyStatus)[keyof typeof PolicyStatus];
export declare const SkuName: {
    readonly Classic: "Classic";
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * The SKU name of the container registry. Required for registry creation.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const TrustPolicyType: {
    readonly Notary: "Notary";
};
/**
 * The type of trust policy.
 */
export declare type TrustPolicyType = (typeof TrustPolicyType)[keyof typeof TrustPolicyType];
export declare const WebhookAction: {
    readonly Push: "push";
    readonly Delete: "delete";
    readonly Quarantine: "quarantine";
    readonly Chart_push: "chart_push";
    readonly Chart_delete: "chart_delete";
};
export declare type WebhookAction = (typeof WebhookAction)[keyof typeof WebhookAction];
export declare const WebhookStatus: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
};
/**
 * The status of the webhook at the time the operation was called.
 */
export declare type WebhookStatus = (typeof WebhookStatus)[keyof typeof WebhookStatus];
