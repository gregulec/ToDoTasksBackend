"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultProvisioningState = exports.StoragePermissions = exports.SkuName = exports.SkuFamily = exports.SecretPermissions = exports.PrivateEndpointServiceConnectionStatus = exports.NetworkRuleBypassOptions = exports.NetworkRuleAction = exports.KeyPermissions = exports.JsonWebKeyType = exports.JsonWebKeyOperation = exports.JsonWebKeyCurveName = exports.CreateMode = exports.CertificatePermissions = void 0;
exports.CertificatePermissions = {
    All: "all",
    Get: "get",
    List: "list",
    Delete: "delete",
    Create: "create",
    Import: "import",
    Update: "update",
    Managecontacts: "managecontacts",
    Getissuers: "getissuers",
    Listissuers: "listissuers",
    Setissuers: "setissuers",
    Deleteissuers: "deleteissuers",
    Manageissuers: "manageissuers",
    Recover: "recover",
    Purge: "purge",
    Backup: "backup",
    Restore: "restore",
};
exports.CreateMode = {
    Recover: "recover",
    Default: "default",
};
exports.JsonWebKeyCurveName = {
    P_256: "P-256",
    P_384: "P-384",
    P_521: "P-521",
    P_256K: "P-256K",
};
exports.JsonWebKeyOperation = {
    Encrypt: "encrypt",
    Decrypt: "decrypt",
    Sign: "sign",
    Verify: "verify",
    WrapKey: "wrapKey",
    UnwrapKey: "unwrapKey",
    Import: "import",
};
exports.JsonWebKeyType = {
    EC: "EC",
    EC_HSM: "EC-HSM",
    RSA: "RSA",
    RSA_HSM: "RSA-HSM",
};
exports.KeyPermissions = {
    All: "all",
    Encrypt: "encrypt",
    Decrypt: "decrypt",
    WrapKey: "wrapKey",
    UnwrapKey: "unwrapKey",
    Sign: "sign",
    Verify: "verify",
    Get: "get",
    List: "list",
    Create: "create",
    Update: "update",
    Import: "import",
    Delete: "delete",
    Backup: "backup",
    Restore: "restore",
    Recover: "recover",
    Purge: "purge",
};
exports.NetworkRuleAction = {
    Allow: "Allow",
    Deny: "Deny",
};
exports.NetworkRuleBypassOptions = {
    AzureServices: "AzureServices",
    None: "None",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
};
exports.SecretPermissions = {
    All: "all",
    Get: "get",
    List: "list",
    Set: "set",
    Delete: "delete",
    Backup: "backup",
    Restore: "restore",
    Recover: "recover",
    Purge: "purge",
};
exports.SkuFamily = {
    A: "A",
};
exports.SkuName = {
    Standard: "standard",
    Premium: "premium",
};
exports.StoragePermissions = {
    All: "all",
    Get: "get",
    List: "list",
    Delete: "delete",
    Set: "set",
    Update: "update",
    Regeneratekey: "regeneratekey",
    Recover: "recover",
    Purge: "purge",
    Backup: "backup",
    Restore: "restore",
    Setsas: "setsas",
    Listsas: "listsas",
    Getsas: "getsas",
    Deletesas: "deletesas",
};
exports.VaultProvisioningState = {
    Succeeded: "Succeeded",
    RegisteringDns: "RegisteringDns",
};
//# sourceMappingURL=index.js.map