export declare const CachingTypes: {
    readonly None: "None";
    readonly ReadOnly: "ReadOnly";
    readonly ReadWrite: "ReadWrite";
};
/**
 * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
 */
export declare type CachingTypes = (typeof CachingTypes)[keyof typeof CachingTypes];
export declare const ComponentNames: {
    readonly Microsoft_Windows_Shell_Setup: "Microsoft-Windows-Shell-Setup";
};
/**
 * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
 */
export declare type ComponentNames = (typeof ComponentNames)[keyof typeof ComponentNames];
export declare const DiffDiskOptions: {
    readonly Local: "Local";
};
/**
 * Specifies the ephemeral disk settings for operating system disk.
 */
export declare type DiffDiskOptions = (typeof DiffDiskOptions)[keyof typeof DiffDiskOptions];
export declare const DiskCreateOptionTypes: {
    readonly FromImage: "FromImage";
    readonly Empty: "Empty";
    readonly Attach: "Attach";
};
/**
 * Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
 */
export declare type DiskCreateOptionTypes = (typeof DiskCreateOptionTypes)[keyof typeof DiskCreateOptionTypes];
export declare const IPVersion: {
    readonly IPv4: "IPv4";
    readonly IPv6: "IPv6";
};
/**
 * Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
 */
export declare type IPVersion = (typeof IPVersion)[keyof typeof IPVersion];
export declare const IntervalInMins: {
    readonly ThreeMins: "ThreeMins";
    readonly FiveMins: "FiveMins";
    readonly ThirtyMins: "ThirtyMins";
    readonly SixtyMins: "SixtyMins";
};
/**
 * Interval value in minutes used to create LogAnalytics call rate logs.
 */
export declare type IntervalInMins = (typeof IntervalInMins)[keyof typeof IntervalInMins];
export declare const OperatingSystemStateTypes: {
    readonly Generalized: "Generalized";
    readonly Specialized: "Specialized";
};
/**
 * The OS State.
 */
export declare type OperatingSystemStateTypes = (typeof OperatingSystemStateTypes)[keyof typeof OperatingSystemStateTypes];
export declare const OperatingSystemTypes: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
 */
export declare type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];
export declare const PassNames: {
    readonly OobeSystem: "OobeSystem";
};
/**
 * The pass name. Currently, the only allowable value is OobeSystem.
 */
export declare type PassNames = (typeof PassNames)[keyof typeof PassNames];
export declare const ProtocolTypes: {
    readonly Http: "Http";
    readonly Https: "Https";
};
/**
 * Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
 */
export declare type ProtocolTypes = (typeof ProtocolTypes)[keyof typeof ProtocolTypes];
export declare const ProximityPlacementGroupType: {
    readonly Standard: "Standard";
    readonly Ultra: "Ultra";
};
/**
 * Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use.
 */
export declare type ProximityPlacementGroupType = (typeof ProximityPlacementGroupType)[keyof typeof ProximityPlacementGroupType];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
    readonly None: "None";
};
/**
 * The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const SettingNames: {
    readonly AutoLogon: "AutoLogon";
    readonly FirstLogonCommands: "FirstLogonCommands";
};
/**
 * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
 */
export declare type SettingNames = (typeof SettingNames)[keyof typeof SettingNames];
export declare const StatusLevelTypes: {
    readonly Info: "Info";
    readonly Warning: "Warning";
    readonly Error: "Error";
};
/**
 * The level code.
 */
export declare type StatusLevelTypes = (typeof StatusLevelTypes)[keyof typeof StatusLevelTypes];
export declare const StorageAccountTypes: {
    readonly Standard_LRS: "Standard_LRS";
    readonly Premium_LRS: "Premium_LRS";
    readonly StandardSSD_LRS: "StandardSSD_LRS";
    readonly UltraSSD_LRS: "UltraSSD_LRS";
};
/**
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.
 */
export declare type StorageAccountTypes = (typeof StorageAccountTypes)[keyof typeof StorageAccountTypes];
export declare const UpgradeMode: {
    readonly Automatic: "Automatic";
    readonly Manual: "Manual";
    readonly Rolling: "Rolling";
};
/**
 * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
 */
export declare type UpgradeMode = (typeof UpgradeMode)[keyof typeof UpgradeMode];
export declare const VirtualMachineEvictionPolicyTypes: {
    readonly Deallocate: "Deallocate";
    readonly Delete: "Delete";
};
/**
 * Specifies the eviction policy for virtual machines in a low priority scale set. <br><br>Minimum api-version: 2017-10-30-preview
 */
export declare type VirtualMachineEvictionPolicyTypes = (typeof VirtualMachineEvictionPolicyTypes)[keyof typeof VirtualMachineEvictionPolicyTypes];
export declare const VirtualMachinePriorityTypes: {
    readonly Regular: "Regular";
    readonly Low: "Low";
};
/**
 * Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview
 */
export declare type VirtualMachinePriorityTypes = (typeof VirtualMachinePriorityTypes)[keyof typeof VirtualMachinePriorityTypes];
export declare const VirtualMachineSizeTypes: {
    readonly Basic_A0: "Basic_A0";
    readonly Basic_A1: "Basic_A1";
    readonly Basic_A2: "Basic_A2";
    readonly Basic_A3: "Basic_A3";
    readonly Basic_A4: "Basic_A4";
    readonly Standard_A0: "Standard_A0";
    readonly Standard_A1: "Standard_A1";
    readonly Standard_A2: "Standard_A2";
    readonly Standard_A3: "Standard_A3";
    readonly Standard_A4: "Standard_A4";
    readonly Standard_A5: "Standard_A5";
    readonly Standard_A6: "Standard_A6";
    readonly Standard_A7: "Standard_A7";
    readonly Standard_A8: "Standard_A8";
    readonly Standard_A9: "Standard_A9";
    readonly Standard_A10: "Standard_A10";
    readonly Standard_A11: "Standard_A11";
    readonly Standard_A1_v2: "Standard_A1_v2";
    readonly Standard_A2_v2: "Standard_A2_v2";
    readonly Standard_A4_v2: "Standard_A4_v2";
    readonly Standard_A8_v2: "Standard_A8_v2";
    readonly Standard_A2m_v2: "Standard_A2m_v2";
    readonly Standard_A4m_v2: "Standard_A4m_v2";
    readonly Standard_A8m_v2: "Standard_A8m_v2";
    readonly Standard_B1s: "Standard_B1s";
    readonly Standard_B1ms: "Standard_B1ms";
    readonly Standard_B2s: "Standard_B2s";
    readonly Standard_B2ms: "Standard_B2ms";
    readonly Standard_B4ms: "Standard_B4ms";
    readonly Standard_B8ms: "Standard_B8ms";
    readonly Standard_D1: "Standard_D1";
    readonly Standard_D2: "Standard_D2";
    readonly Standard_D3: "Standard_D3";
    readonly Standard_D4: "Standard_D4";
    readonly Standard_D11: "Standard_D11";
    readonly Standard_D12: "Standard_D12";
    readonly Standard_D13: "Standard_D13";
    readonly Standard_D14: "Standard_D14";
    readonly Standard_D1_v2: "Standard_D1_v2";
    readonly Standard_D2_v2: "Standard_D2_v2";
    readonly Standard_D3_v2: "Standard_D3_v2";
    readonly Standard_D4_v2: "Standard_D4_v2";
    readonly Standard_D5_v2: "Standard_D5_v2";
    readonly Standard_D2_v3: "Standard_D2_v3";
    readonly Standard_D4_v3: "Standard_D4_v3";
    readonly Standard_D8_v3: "Standard_D8_v3";
    readonly Standard_D16_v3: "Standard_D16_v3";
    readonly Standard_D32_v3: "Standard_D32_v3";
    readonly Standard_D64_v3: "Standard_D64_v3";
    readonly Standard_D2s_v3: "Standard_D2s_v3";
    readonly Standard_D4s_v3: "Standard_D4s_v3";
    readonly Standard_D8s_v3: "Standard_D8s_v3";
    readonly Standard_D16s_v3: "Standard_D16s_v3";
    readonly Standard_D32s_v3: "Standard_D32s_v3";
    readonly Standard_D64s_v3: "Standard_D64s_v3";
    readonly Standard_D11_v2: "Standard_D11_v2";
    readonly Standard_D12_v2: "Standard_D12_v2";
    readonly Standard_D13_v2: "Standard_D13_v2";
    readonly Standard_D14_v2: "Standard_D14_v2";
    readonly Standard_D15_v2: "Standard_D15_v2";
    readonly Standard_DS1: "Standard_DS1";
    readonly Standard_DS2: "Standard_DS2";
    readonly Standard_DS3: "Standard_DS3";
    readonly Standard_DS4: "Standard_DS4";
    readonly Standard_DS11: "Standard_DS11";
    readonly Standard_DS12: "Standard_DS12";
    readonly Standard_DS13: "Standard_DS13";
    readonly Standard_DS14: "Standard_DS14";
    readonly Standard_DS1_v2: "Standard_DS1_v2";
    readonly Standard_DS2_v2: "Standard_DS2_v2";
    readonly Standard_DS3_v2: "Standard_DS3_v2";
    readonly Standard_DS4_v2: "Standard_DS4_v2";
    readonly Standard_DS5_v2: "Standard_DS5_v2";
    readonly Standard_DS11_v2: "Standard_DS11_v2";
    readonly Standard_DS12_v2: "Standard_DS12_v2";
    readonly Standard_DS13_v2: "Standard_DS13_v2";
    readonly Standard_DS14_v2: "Standard_DS14_v2";
    readonly Standard_DS15_v2: "Standard_DS15_v2";
    readonly Standard_DS13_4_v2: "Standard_DS13-4_v2";
    readonly Standard_DS13_2_v2: "Standard_DS13-2_v2";
    readonly Standard_DS14_8_v2: "Standard_DS14-8_v2";
    readonly Standard_DS14_4_v2: "Standard_DS14-4_v2";
    readonly Standard_E2_v3: "Standard_E2_v3";
    readonly Standard_E4_v3: "Standard_E4_v3";
    readonly Standard_E8_v3: "Standard_E8_v3";
    readonly Standard_E16_v3: "Standard_E16_v3";
    readonly Standard_E32_v3: "Standard_E32_v3";
    readonly Standard_E64_v3: "Standard_E64_v3";
    readonly Standard_E2s_v3: "Standard_E2s_v3";
    readonly Standard_E4s_v3: "Standard_E4s_v3";
    readonly Standard_E8s_v3: "Standard_E8s_v3";
    readonly Standard_E16s_v3: "Standard_E16s_v3";
    readonly Standard_E32s_v3: "Standard_E32s_v3";
    readonly Standard_E64s_v3: "Standard_E64s_v3";
    readonly Standard_E32_16_v3: "Standard_E32-16_v3";
    readonly Standard_E32_8s_v3: "Standard_E32-8s_v3";
    readonly Standard_E64_32s_v3: "Standard_E64-32s_v3";
    readonly Standard_E64_16s_v3: "Standard_E64-16s_v3";
    readonly Standard_F1: "Standard_F1";
    readonly Standard_F2: "Standard_F2";
    readonly Standard_F4: "Standard_F4";
    readonly Standard_F8: "Standard_F8";
    readonly Standard_F16: "Standard_F16";
    readonly Standard_F1s: "Standard_F1s";
    readonly Standard_F2s: "Standard_F2s";
    readonly Standard_F4s: "Standard_F4s";
    readonly Standard_F8s: "Standard_F8s";
    readonly Standard_F16s: "Standard_F16s";
    readonly Standard_F2s_v2: "Standard_F2s_v2";
    readonly Standard_F4s_v2: "Standard_F4s_v2";
    readonly Standard_F8s_v2: "Standard_F8s_v2";
    readonly Standard_F16s_v2: "Standard_F16s_v2";
    readonly Standard_F32s_v2: "Standard_F32s_v2";
    readonly Standard_F64s_v2: "Standard_F64s_v2";
    readonly Standard_F72s_v2: "Standard_F72s_v2";
    readonly Standard_G1: "Standard_G1";
    readonly Standard_G2: "Standard_G2";
    readonly Standard_G3: "Standard_G3";
    readonly Standard_G4: "Standard_G4";
    readonly Standard_G5: "Standard_G5";
    readonly Standard_GS1: "Standard_GS1";
    readonly Standard_GS2: "Standard_GS2";
    readonly Standard_GS3: "Standard_GS3";
    readonly Standard_GS4: "Standard_GS4";
    readonly Standard_GS5: "Standard_GS5";
    readonly Standard_GS4_8: "Standard_GS4-8";
    readonly Standard_GS4_4: "Standard_GS4-4";
    readonly Standard_GS5_16: "Standard_GS5-16";
    readonly Standard_GS5_8: "Standard_GS5-8";
    readonly Standard_H8: "Standard_H8";
    readonly Standard_H16: "Standard_H16";
    readonly Standard_H8m: "Standard_H8m";
    readonly Standard_H16m: "Standard_H16m";
    readonly Standard_H16r: "Standard_H16r";
    readonly Standard_H16mr: "Standard_H16mr";
    readonly Standard_L4s: "Standard_L4s";
    readonly Standard_L8s: "Standard_L8s";
    readonly Standard_L16s: "Standard_L16s";
    readonly Standard_L32s: "Standard_L32s";
    readonly Standard_M64s: "Standard_M64s";
    readonly Standard_M64ms: "Standard_M64ms";
    readonly Standard_M128s: "Standard_M128s";
    readonly Standard_M128ms: "Standard_M128ms";
    readonly Standard_M64_32ms: "Standard_M64-32ms";
    readonly Standard_M64_16ms: "Standard_M64-16ms";
    readonly Standard_M128_64ms: "Standard_M128-64ms";
    readonly Standard_M128_32ms: "Standard_M128-32ms";
    readonly Standard_NC6: "Standard_NC6";
    readonly Standard_NC12: "Standard_NC12";
    readonly Standard_NC24: "Standard_NC24";
    readonly Standard_NC24r: "Standard_NC24r";
    readonly Standard_NC6s_v2: "Standard_NC6s_v2";
    readonly Standard_NC12s_v2: "Standard_NC12s_v2";
    readonly Standard_NC24s_v2: "Standard_NC24s_v2";
    readonly Standard_NC24rs_v2: "Standard_NC24rs_v2";
    readonly Standard_NC6s_v3: "Standard_NC6s_v3";
    readonly Standard_NC12s_v3: "Standard_NC12s_v3";
    readonly Standard_NC24s_v3: "Standard_NC24s_v3";
    readonly Standard_NC24rs_v3: "Standard_NC24rs_v3";
    readonly Standard_ND6s: "Standard_ND6s";
    readonly Standard_ND12s: "Standard_ND12s";
    readonly Standard_ND24s: "Standard_ND24s";
    readonly Standard_ND24rs: "Standard_ND24rs";
    readonly Standard_NV6: "Standard_NV6";
    readonly Standard_NV12: "Standard_NV12";
    readonly Standard_NV24: "Standard_NV24";
};
/**
 * Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
 */
export declare type VirtualMachineSizeTypes = (typeof VirtualMachineSizeTypes)[keyof typeof VirtualMachineSizeTypes];
