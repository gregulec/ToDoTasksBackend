export declare const CachingTypes: {
    readonly None: "None";
    readonly ReadOnly: "ReadOnly";
    readonly ReadWrite: "ReadWrite";
};
/**
 * Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage**
 */
export declare type CachingTypes = (typeof CachingTypes)[keyof typeof CachingTypes];
export declare const ComponentNames: {
    readonly Microsoft_Windows_Shell_Setup: "Microsoft-Windows-Shell-Setup";
};
/**
 * The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
 */
export declare type ComponentNames = (typeof ComponentNames)[keyof typeof ComponentNames];
export declare const DiskCreateOptionTypes: {
    readonly FromImage: "FromImage";
    readonly Empty: "Empty";
    readonly Attach: "Attach";
};
/**
 * Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.
 */
export declare type DiskCreateOptionTypes = (typeof DiskCreateOptionTypes)[keyof typeof DiskCreateOptionTypes];
export declare const OperatingSystemTypes: {
    readonly Windows: "Windows";
    readonly Linux: "Linux";
};
/**
 * This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
 */
export declare type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];
export declare const PassNames: {
    readonly OobeSystem: "OobeSystem";
};
/**
 * The pass name. Currently, the only allowable value is OobeSystem.
 */
export declare type PassNames = (typeof PassNames)[keyof typeof PassNames];
export declare const ProtocolTypes: {
    readonly Http: "Http";
    readonly Https: "Https";
};
/**
 * Specifies the protocol of listener. <br><br> Possible values are: <br>**http** <br><br> **https**
 */
export declare type ProtocolTypes = (typeof ProtocolTypes)[keyof typeof ProtocolTypes];
export declare const SettingNames: {
    readonly AutoLogon: "AutoLogon";
    readonly FirstLogonCommands: "FirstLogonCommands";
};
/**
 * Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.
 */
export declare type SettingNames = (typeof SettingNames)[keyof typeof SettingNames];
export declare const StatusLevelTypes: {
    readonly Info: "Info";
    readonly Warning: "Warning";
    readonly Error: "Error";
};
/**
 * The level code.
 */
export declare type StatusLevelTypes = (typeof StatusLevelTypes)[keyof typeof StatusLevelTypes];
export declare const UpgradeMode: {
    readonly Automatic: "Automatic";
    readonly Manual: "Manual";
};
/**
 * Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
 */
export declare type UpgradeMode = (typeof UpgradeMode)[keyof typeof UpgradeMode];
export declare const VirtualMachineSizeTypes: {
    readonly Basic_A0: "Basic_A0";
    readonly Basic_A1: "Basic_A1";
    readonly Basic_A2: "Basic_A2";
    readonly Basic_A3: "Basic_A3";
    readonly Basic_A4: "Basic_A4";
    readonly Standard_A0: "Standard_A0";
    readonly Standard_A1: "Standard_A1";
    readonly Standard_A2: "Standard_A2";
    readonly Standard_A3: "Standard_A3";
    readonly Standard_A4: "Standard_A4";
    readonly Standard_A5: "Standard_A5";
    readonly Standard_A6: "Standard_A6";
    readonly Standard_A7: "Standard_A7";
    readonly Standard_A8: "Standard_A8";
    readonly Standard_A9: "Standard_A9";
    readonly Standard_A10: "Standard_A10";
    readonly Standard_A11: "Standard_A11";
    readonly Standard_D1: "Standard_D1";
    readonly Standard_D2: "Standard_D2";
    readonly Standard_D3: "Standard_D3";
    readonly Standard_D4: "Standard_D4";
    readonly Standard_D11: "Standard_D11";
    readonly Standard_D12: "Standard_D12";
    readonly Standard_D13: "Standard_D13";
    readonly Standard_D14: "Standard_D14";
    readonly Standard_D1_v2: "Standard_D1_v2";
    readonly Standard_D2_v2: "Standard_D2_v2";
    readonly Standard_D3_v2: "Standard_D3_v2";
    readonly Standard_D4_v2: "Standard_D4_v2";
    readonly Standard_D5_v2: "Standard_D5_v2";
    readonly Standard_D11_v2: "Standard_D11_v2";
    readonly Standard_D12_v2: "Standard_D12_v2";
    readonly Standard_D13_v2: "Standard_D13_v2";
    readonly Standard_D14_v2: "Standard_D14_v2";
    readonly Standard_DS1: "Standard_DS1";
    readonly Standard_DS2: "Standard_DS2";
    readonly Standard_DS3: "Standard_DS3";
    readonly Standard_DS4: "Standard_DS4";
    readonly Standard_DS11: "Standard_DS11";
    readonly Standard_DS12: "Standard_DS12";
    readonly Standard_DS13: "Standard_DS13";
    readonly Standard_DS14: "Standard_DS14";
    readonly Standard_G1: "Standard_G1";
    readonly Standard_G2: "Standard_G2";
    readonly Standard_G3: "Standard_G3";
    readonly Standard_G4: "Standard_G4";
    readonly Standard_G5: "Standard_G5";
    readonly Standard_GS1: "Standard_GS1";
    readonly Standard_GS2: "Standard_GS2";
    readonly Standard_GS3: "Standard_GS3";
    readonly Standard_GS4: "Standard_GS4";
    readonly Standard_GS5: "Standard_GS5";
};
/**
 * Specifies the size of the virtual machine. For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json). <br><br> The available VM sizes depend on region and availability set. For a list of available sizes use these APIs:  <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes)
 */
export declare type VirtualMachineSizeTypes = (typeof VirtualMachineSizeTypes)[keyof typeof VirtualMachineSizeTypes];
