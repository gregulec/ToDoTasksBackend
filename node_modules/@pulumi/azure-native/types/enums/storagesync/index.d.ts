import * as v20200301 from "./v20200301";
import * as v20200901 from "./v20200901";
export { v20200301, v20200901, };
export declare const FeatureStatus: {
    readonly On: "on";
    readonly Off: "off";
};
/**
 * Offline data transfer
 */
export declare type FeatureStatus = (typeof FeatureStatus)[keyof typeof FeatureStatus];
export declare const IncomingTrafficPolicy: {
    readonly AllowAllTraffic: "AllowAllTraffic";
    readonly AllowVirtualNetworksOnly: "AllowVirtualNetworksOnly";
};
/**
 * Incoming Traffic Policy
 */
export declare type IncomingTrafficPolicy = (typeof IncomingTrafficPolicy)[keyof typeof IncomingTrafficPolicy];
export declare const InitialDownloadPolicy: {
    readonly NamespaceOnly: "NamespaceOnly";
    readonly NamespaceThenModifiedFiles: "NamespaceThenModifiedFiles";
    readonly AvoidTieredFiles: "AvoidTieredFiles";
};
/**
 * Policy for how namespace and files are recalled during FastDr.
 */
export declare type InitialDownloadPolicy = (typeof InitialDownloadPolicy)[keyof typeof InitialDownloadPolicy];
export declare const LocalCacheMode: {
    readonly DownloadNewAndModifiedFiles: "DownloadNewAndModifiedFiles";
    readonly UpdateLocallyCachedFiles: "UpdateLocallyCachedFiles";
};
/**
 * Policy for enabling follow-the-sun business models: link local cache to cloud behavior to pre-populate before local access.
 */
export declare type LocalCacheMode = (typeof LocalCacheMode)[keyof typeof LocalCacheMode];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export declare type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
