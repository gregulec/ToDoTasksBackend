export declare const AccessPolicyRole: {
    readonly Reader: "Reader";
    readonly Contributor: "Contributor";
};
/**
 * A role defining the data plane operations that a principal can perform on a Time Series Insights client.
 */
export declare type AccessPolicyRole = (typeof AccessPolicyRole)[keyof typeof AccessPolicyRole];
export declare const DataStringComparisonBehavior: {
    readonly Ordinal: "Ordinal";
    readonly OrdinalIgnoreCase: "OrdinalIgnoreCase";
};
/**
 * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
 */
export declare type DataStringComparisonBehavior = (typeof DataStringComparisonBehavior)[keyof typeof DataStringComparisonBehavior];
export declare const Kind: {
    readonly Microsoft_EventHub: "Microsoft.EventHub";
    readonly Microsoft_IoTHub: "Microsoft.IoTHub";
};
/**
 * The kind of the event source.
 */
export declare type Kind = (typeof Kind)[keyof typeof Kind];
export declare const PropertyType: {
    readonly String: "String";
};
/**
 * The type of the property.
 */
export declare type PropertyType = (typeof PropertyType)[keyof typeof PropertyType];
export declare const ReferenceDataKeyPropertyType: {
    readonly String: "String";
    readonly Double: "Double";
    readonly Bool: "Bool";
    readonly DateTime: "DateTime";
};
/**
 * The type of the key property.
 */
export declare type ReferenceDataKeyPropertyType = (typeof ReferenceDataKeyPropertyType)[keyof typeof ReferenceDataKeyPropertyType];
export declare const SkuName: {
    readonly S1: "S1";
    readonly S2: "S2";
};
/**
 * The name of this SKU.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const StorageLimitExceededBehavior: {
    readonly PurgeOldData: "PurgeOldData";
    readonly PauseIngress: "PauseIngress";
};
/**
 * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
 */
export declare type StorageLimitExceededBehavior = (typeof StorageLimitExceededBehavior)[keyof typeof StorageLimitExceededBehavior];
