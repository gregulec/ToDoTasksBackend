"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserImpact = exports.UnmaskedIpLoggingStatus = exports.Threats = exports.StatusReason = exports.Status = exports.State = exports.Source = exports.Severity = exports.SecuritySolutionStatus = exports.RuleState = exports.Roles = exports.RecommendationType = exports.RecommendationConfigStatus = exports.Protocol = exports.PropertyType = exports.Operator = exports.MinimalSeverity = exports.ImplementationEffort = exports.ExportData = exports.EventSource = exports.DataSource = exports.Categories = exports.AutoProvision = exports.AuthenticationType = exports.AssessmentType = exports.AssessmentStatusCode = exports.AdditionalWorkspaceType = exports.AdditionalWorkspaceDataType = exports.ActionType = exports.v20210601 = exports.v20200101preview = exports.v20200101 = exports.v20190801 = exports.v20190101preview = exports.v20170801preview = exports.v20150601preview = void 0;
// Export sub-modules:
const v20150601preview = require("./v20150601preview");
exports.v20150601preview = v20150601preview;
const v20170801preview = require("./v20170801preview");
exports.v20170801preview = v20170801preview;
const v20190101preview = require("./v20190101preview");
exports.v20190101preview = v20190101preview;
const v20190801 = require("./v20190801");
exports.v20190801 = v20190801;
const v20200101 = require("./v20200101");
exports.v20200101 = v20200101;
const v20200101preview = require("./v20200101preview");
exports.v20200101preview = v20200101preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
exports.ActionType = {
    LogicApp: "LogicApp",
    EventHub: "EventHub",
    Workspace: "Workspace",
};
exports.AdditionalWorkspaceDataType = {
    Alerts: "Alerts",
    RawEvents: "RawEvents",
};
exports.AdditionalWorkspaceType = {
    Sentinel: "Sentinel",
};
exports.AssessmentStatusCode = {
    /**
     * The resource is healthy
     */
    Healthy: "Healthy",
    /**
     * The resource has a security issue that needs to be addressed
     */
    Unhealthy: "Unhealthy",
    /**
     * Assessment for this resource did not happen
     */
    NotApplicable: "NotApplicable",
};
exports.AssessmentType = {
    /**
     * Azure Security Center managed assessments
     */
    BuiltIn: "BuiltIn",
    /**
     * User defined policies that are automatically ingested from Azure Policy to Azure Security Center
     */
    CustomPolicy: "CustomPolicy",
    /**
     * User assessments pushed directly by the user or other third party to Azure Security Center
     */
    CustomerManaged: "CustomerManaged",
    /**
     * An assessment that was created by a verified 3rd party if the user connected it to ASC
     */
    VerifiedPartner: "VerifiedPartner",
};
exports.AuthenticationType = {
    /**
     * AWS cloud account connector user credentials authentication
     */
    AwsCreds: "awsCreds",
    /**
     * AWS account connector assume role authentication
     */
    AwsAssumeRole: "awsAssumeRole",
    /**
     * GCP account connector service to service authentication
     */
    GcpCredentials: "gcpCredentials",
};
exports.AutoProvision = {
    /**
     * Install missing Azure Arc agents on machines automatically
     */
    On: "On",
    /**
     * Do not install Azure Arc agent on the machines automatically
     */
    Off: "Off",
};
exports.Categories = {
    Compute: "Compute",
    Networking: "Networking",
    Data: "Data",
    IdentityAndAccess: "IdentityAndAccess",
    IoT: "IoT",
};
exports.DataSource = {
    /**
     * Devices twin data
     */
    TwinData: "TwinData",
};
exports.EventSource = {
    Assessments: "Assessments",
    SubAssessments: "SubAssessments",
    Alerts: "Alerts",
    SecureScores: "SecureScores",
    SecureScoresSnapshot: "SecureScoresSnapshot",
    SecureScoreControls: "SecureScoreControls",
    SecureScoreControlsSnapshot: "SecureScoreControlsSnapshot",
    RegulatoryComplianceAssessment: "RegulatoryComplianceAssessment",
    RegulatoryComplianceAssessmentSnapshot: "RegulatoryComplianceAssessmentSnapshot",
};
exports.ExportData = {
    /**
     * Agent raw events
     */
    RawEvents: "RawEvents",
};
exports.ImplementationEffort = {
    Low: "Low",
    Moderate: "Moderate",
    High: "High",
};
exports.MinimalSeverity = {
    /**
     * Get notifications on new alerts with High severity
     */
    High: "High",
    /**
     * Get notifications on new alerts with medium or high severity
     */
    Medium: "Medium",
    /**
     * Don't get notifications on new alerts with low, medium or high severity
     */
    Low: "Low",
};
exports.Operator = {
    /**
     * Applies for decimal and non-decimal operands
     */
    Equals: "Equals",
    /**
     * Applies only for decimal operands
     */
    GreaterThan: "GreaterThan",
    /**
     * Applies only for decimal operands
     */
    GreaterThanOrEqualTo: "GreaterThanOrEqualTo",
    /**
     * Applies only for decimal operands
     */
    LesserThan: "LesserThan",
    /**
     * Applies only for decimal operands
     */
    LesserThanOrEqualTo: "LesserThanOrEqualTo",
    /**
     * Applies  for decimal and non-decimal operands
     */
    NotEquals: "NotEquals",
    /**
     * Applies only for non-decimal operands
     */
    Contains: "Contains",
    /**
     * Applies only for non-decimal operands
     */
    StartsWith: "StartsWith",
    /**
     * Applies only for non-decimal operands
     */
    EndsWith: "EndsWith",
};
exports.PropertyType = {
    String: "String",
    Integer: "Integer",
    Number: "Number",
    Boolean: "Boolean",
};
exports.Protocol = {
    TCP: "TCP",
    UDP: "UDP",
    All: "*",
};
exports.RecommendationConfigStatus = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.RecommendationType = {
    /**
     * Authentication schema used for pull an edge module from an ACR repository does not use Service Principal Authentication.
     */
    IoT_ACRAuthentication: "IoT_ACRAuthentication",
    /**
     * IoT agent message size capacity is currently underutilized, causing an increase in the number of sent messages. Adjust message intervals for better utilization.
     */
    IoT_AgentSendsUnutilizedMessages: "IoT_AgentSendsUnutilizedMessages",
    /**
     * Identified security related system configuration issues.
     */
    IoT_Baseline: "IoT_Baseline",
    /**
     * You can optimize Edge Hub memory usage by turning off protocol heads for any protocols not used by Edge modules in your solution.
     */
    IoT_EdgeHubMemOptimize: "IoT_EdgeHubMemOptimize",
    /**
     * Logging is disabled for this edge module.
     */
    IoT_EdgeLoggingOptions: "IoT_EdgeLoggingOptions",
    /**
     * A minority within a device security group has inconsistent Edge Module settings with the rest of their group.
     */
    IoT_InconsistentModuleSettings: "IoT_InconsistentModuleSettings",
    /**
     * Install the Azure Security of Things Agent.
     */
    IoT_InstallAgent: "IoT_InstallAgent",
    /**
     * IP Filter Configuration should have rules defined for allowed traffic and should deny all other traffic by default.
     */
    IoT_IPFilter_DenyAll: "IoT_IPFilter_DenyAll",
    /**
     * An Allow IP Filter rules source IP range is too large. Overly permissive rules might expose your IoT hub to malicious intenders.
     */
    IoT_IPFilter_PermissiveRule: "IoT_IPFilter_PermissiveRule",
    /**
     * A listening endpoint was found on the device.
     */
    IoT_OpenPorts: "IoT_OpenPorts",
    /**
     * An Allowed firewall policy was found (INPUT/OUTPUT). The policy should Deny all traffic by default and define rules to allow necessary communication to/from the device.
     */
    IoT_PermissiveFirewallPolicy: "IoT_PermissiveFirewallPolicy",
    /**
     * A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports.
     */
    IoT_PermissiveInputFirewallRules: "IoT_PermissiveInputFirewallRules",
    /**
     * A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports.
     */
    IoT_PermissiveOutputFirewallRules: "IoT_PermissiveOutputFirewallRules",
    /**
     * Edge module is configured to run in privileged mode, with extensive Linux capabilities or with host-level network access (send/receive data to host machine).
     */
    IoT_PrivilegedDockerOptions: "IoT_PrivilegedDockerOptions",
    /**
     * Same authentication credentials to the IoT Hub used by multiple devices. This could indicate an illegitimate device impersonating a legitimate device. It also exposes the risk of device impersonation by an attacker.
     */
    IoT_SharedCredentials: "IoT_SharedCredentials",
    /**
     * Insecure TLS configurations detected. Immediate upgrade recommended.
     */
    IoT_VulnerableTLSCipherSuite: "IoT_VulnerableTLSCipherSuite",
};
exports.Roles = {
    /**
     * If enabled, send notification on new alerts to the account admins
     */
    AccountAdmin: "AccountAdmin",
    /**
     * If enabled, send notification on new alerts to the service admins
     */
    ServiceAdmin: "ServiceAdmin",
    /**
     * If enabled, send notification on new alerts to the subscription owners
     */
    Owner: "Owner",
    /**
     * If enabled, send notification on new alerts to the subscription contributors
     */
    Contributor: "Contributor",
};
exports.RuleState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    Expired: "Expired",
};
exports.SecuritySolutionStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.Severity = {
    Low: "Low",
    Medium: "Medium",
    High: "High",
};
exports.Source = {
    /**
     * Resource is in Azure
     */
    Azure: "Azure",
    /**
     * Resource in an on premise machine connected to Azure cloud
     */
    OnPremise: "OnPremise",
    /**
     * SQL Resource in an on premise machine connected to Azure cloud
     */
    OnPremiseSql: "OnPremiseSql",
};
exports.State = {
    /**
     * Send notification on new alerts to the subscription's admins
     */
    On: "On",
    /**
     * Don't send notification on new alerts to the subscription's admins
     */
    Off: "Off",
};
exports.Status = {
    Revoked: "Revoked",
    Initiated: "Initiated",
};
exports.StatusReason = {
    Expired: "Expired",
    UserRequested: "UserRequested",
    NewerRequestInitiated: "NewerRequestInitiated",
};
exports.Threats = {
    AccountBreach: "accountBreach",
    DataExfiltration: "dataExfiltration",
    DataSpillage: "dataSpillage",
    MaliciousInsider: "maliciousInsider",
    ElevationOfPrivilege: "elevationOfPrivilege",
    ThreatResistance: "threatResistance",
    MissingCoverage: "missingCoverage",
    DenialOfService: "denialOfService",
};
exports.UnmaskedIpLoggingStatus = {
    /**
     * Unmasked IP logging is disabled
     */
    Disabled: "Disabled",
    /**
     * Unmasked IP logging is enabled
     */
    Enabled: "Enabled",
};
exports.UserImpact = {
    Low: "Low",
    Moderate: "Moderate",
    High: "High",
};
//# sourceMappingURL=index.js.map