export declare const AccessRights: {
    readonly Manage: "Manage";
    readonly Send: "Send";
    readonly Listen: "Listen";
};
export declare type AccessRights = (typeof AccessRights)[keyof typeof AccessRights];
export declare const ClusterSkuName: {
    readonly Dedicated: "Dedicated";
};
/**
 * Name of this SKU.
 */
export declare type ClusterSkuName = (typeof ClusterSkuName)[keyof typeof ClusterSkuName];
export declare const DefaultAction: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
};
/**
 * Default Action for Network Rule Set
 */
export declare type DefaultAction = (typeof DefaultAction)[keyof typeof DefaultAction];
export declare const EncodingCaptureDescription: {
    readonly Avro: "Avro";
    readonly AvroDeflate: "AvroDeflate";
};
/**
 * Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version
 */
export declare type EncodingCaptureDescription = (typeof EncodingCaptureDescription)[keyof typeof EncodingCaptureDescription];
export declare const EndPointProvisioningState: {
    readonly Creating: "Creating";
    readonly Updating: "Updating";
    readonly Deleting: "Deleting";
    readonly Succeeded: "Succeeded";
    readonly Canceled: "Canceled";
    readonly Failed: "Failed";
};
/**
 * Provisioning state of the Private Endpoint Connection.
 */
export declare type EndPointProvisioningState = (typeof EndPointProvisioningState)[keyof typeof EndPointProvisioningState];
export declare const EntityStatus: {
    readonly Active: "Active";
    readonly Disabled: "Disabled";
    readonly Restoring: "Restoring";
    readonly SendDisabled: "SendDisabled";
    readonly ReceiveDisabled: "ReceiveDisabled";
    readonly Creating: "Creating";
    readonly Deleting: "Deleting";
    readonly Renaming: "Renaming";
    readonly Unknown: "Unknown";
};
/**
 * Enumerates the possible values for the status of the Event Hub.
 */
export declare type EntityStatus = (typeof EntityStatus)[keyof typeof EntityStatus];
export declare const IPAction: {
    readonly Accept: "Accept";
    readonly Reject: "Reject";
};
/**
 * The IP Filter Action
 */
export declare type IPAction = (typeof IPAction)[keyof typeof IPAction];
export declare const IdentityType: {
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'
 */
export declare type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const KeySource: {
    readonly Microsoft_KeyVault: "Microsoft.KeyVault";
};
/**
 * Enumerates the possible value of keySource for Encryption
 */
export declare type KeySource = (typeof KeySource)[keyof typeof KeySource];
export declare const NetworkRuleIPAction: {
    readonly Allow: "Allow";
};
/**
 * The IP Filter Action
 */
export declare type NetworkRuleIPAction = (typeof NetworkRuleIPAction)[keyof typeof NetworkRuleIPAction];
export declare const PrivateLinkConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Status of the connection.
 */
export declare type PrivateLinkConnectionStatus = (typeof PrivateLinkConnectionStatus)[keyof typeof PrivateLinkConnectionStatus];
export declare const SkuName: {
    readonly Basic: "Basic";
    readonly Standard: "Standard";
};
/**
 * Name of this SKU.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const SkuTier: {
    readonly Basic: "Basic";
    readonly Standard: "Standard";
};
/**
 * The billing tier of this particular SKU.
 */
export declare type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
