export declare const CleanupOptions: {
    readonly Always: "Always";
    readonly OnSuccess: "OnSuccess";
    readonly OnExpiration: "OnExpiration";
};
/**
 * The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'.
 */
export declare type CleanupOptions = (typeof CleanupOptions)[keyof typeof CleanupOptions];
export declare const DeploymentMode: {
    readonly Incremental: "Incremental";
    readonly Complete: "Complete";
};
/**
 * The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
 */
export declare type DeploymentMode = (typeof DeploymentMode)[keyof typeof DeploymentMode];
export declare const ExpressionEvaluationOptionsScopeType: {
    readonly NotSpecified: "NotSpecified";
    readonly Outer: "Outer";
    readonly Inner: "Inner";
};
/**
 * The scope to be used for evaluation of parameters, variables and functions in a nested template.
 */
export declare type ExpressionEvaluationOptionsScopeType = (typeof ExpressionEvaluationOptionsScopeType)[keyof typeof ExpressionEvaluationOptionsScopeType];
export declare const ManagedServiceIdentityType: {
    readonly UserAssigned: "UserAssigned";
};
/**
 * Type of the managed identity.
 */
export declare type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const OnErrorDeploymentType: {
    readonly LastSuccessful: "LastSuccessful";
    readonly SpecificDeployment: "SpecificDeployment";
};
/**
 * The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
 */
export declare type OnErrorDeploymentType = (typeof OnErrorDeploymentType)[keyof typeof OnErrorDeploymentType];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
    readonly None: "None";
};
/**
 * The identity type.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const ScriptType: {
    readonly AzurePowerShell: "AzurePowerShell";
    readonly AzureCLI: "AzureCLI";
};
/**
 * Type of the script.
 */
export declare type ScriptType = (typeof ScriptType)[keyof typeof ScriptType];
