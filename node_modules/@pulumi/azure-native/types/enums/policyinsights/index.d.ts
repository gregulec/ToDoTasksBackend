import * as v20190701 from "./v20190701";
import * as v20210101 from "./v20210101";
export { v20190701, v20210101, };
export declare const ComplianceState: {
    /**
     * The resource is in compliance with the policy.
     */
    readonly Compliant: "Compliant";
    /**
     * The resource is not in compliance with the policy.
     */
    readonly NonCompliant: "NonCompliant";
    /**
     * The compliance state of the resource is not known.
     */
    readonly Unknown: "Unknown";
};
/**
 * The compliance state that should be set on the resource.
 */
export declare type ComplianceState = (typeof ComplianceState)[keyof typeof ComplianceState];
export declare const ResourceDiscoveryMode: {
    /**
     * Remediate resources that are already known to be non-compliant.
     */
    readonly ExistingNonCompliant: "ExistingNonCompliant";
    /**
     * Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant.
     */
    readonly ReEvaluateCompliance: "ReEvaluateCompliance";
};
/**
 * The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
 */
export declare type ResourceDiscoveryMode = (typeof ResourceDiscoveryMode)[keyof typeof ResourceDiscoveryMode];
