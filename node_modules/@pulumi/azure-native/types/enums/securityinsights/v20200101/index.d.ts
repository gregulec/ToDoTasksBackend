export declare const AlertRuleKind: {
    readonly Scheduled: "Scheduled";
    readonly MicrosoftSecurityIncidentCreation: "MicrosoftSecurityIncidentCreation";
    readonly Fusion: "Fusion";
};
/**
 * The alert rule kind
 */
export declare type AlertRuleKind = (typeof AlertRuleKind)[keyof typeof AlertRuleKind];
export declare const AlertSeverity: {
    /**
     * High severity
     */
    readonly High: "High";
    /**
     * Medium severity
     */
    readonly Medium: "Medium";
    /**
     * Low severity
     */
    readonly Low: "Low";
    /**
     * Informational severity
     */
    readonly Informational: "Informational";
};
/**
 * The severity for alerts created by this alert rule.
 */
export declare type AlertSeverity = (typeof AlertSeverity)[keyof typeof AlertSeverity];
export declare const AttackTactic: {
    readonly InitialAccess: "InitialAccess";
    readonly Execution: "Execution";
    readonly Persistence: "Persistence";
    readonly PrivilegeEscalation: "PrivilegeEscalation";
    readonly DefenseEvasion: "DefenseEvasion";
    readonly CredentialAccess: "CredentialAccess";
    readonly Discovery: "Discovery";
    readonly LateralMovement: "LateralMovement";
    readonly Collection: "Collection";
    readonly Exfiltration: "Exfiltration";
    readonly CommandAndControl: "CommandAndControl";
    readonly Impact: "Impact";
};
/**
 * The severity for alerts created by this alert rule.
 */
export declare type AttackTactic = (typeof AttackTactic)[keyof typeof AttackTactic];
export declare const CaseSeverity: {
    /**
     * Critical severity
     */
    readonly Critical: "Critical";
    /**
     * High severity
     */
    readonly High: "High";
    /**
     * Medium severity
     */
    readonly Medium: "Medium";
    /**
     * Low severity
     */
    readonly Low: "Low";
    /**
     * Informational severity
     */
    readonly Informational: "Informational";
};
/**
 * The severity of the incident
 */
export declare type CaseSeverity = (typeof CaseSeverity)[keyof typeof CaseSeverity];
export declare const DataConnectorKind: {
    readonly AzureActiveDirectory: "AzureActiveDirectory";
    readonly AzureSecurityCenter: "AzureSecurityCenter";
    readonly MicrosoftCloudAppSecurity: "MicrosoftCloudAppSecurity";
    readonly ThreatIntelligence: "ThreatIntelligence";
    readonly Office365: "Office365";
    readonly AmazonWebServicesCloudTrail: "AmazonWebServicesCloudTrail";
    readonly AzureAdvancedThreatProtection: "AzureAdvancedThreatProtection";
    readonly MicrosoftDefenderAdvancedThreatProtection: "MicrosoftDefenderAdvancedThreatProtection";
};
/**
 * The data connector kind
 */
export declare type DataConnectorKind = (typeof DataConnectorKind)[keyof typeof DataConnectorKind];
export declare const DataTypeState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Describe whether this data type connection is enabled or not.
 */
export declare type DataTypeState = (typeof DataTypeState)[keyof typeof DataTypeState];
export declare const IncidentClassification: {
    /**
     * Incident classification was undetermined
     */
    readonly Undetermined: "Undetermined";
    /**
     * Incident was true positive
     */
    readonly TruePositive: "TruePositive";
    /**
     * Incident was benign positive
     */
    readonly BenignPositive: "BenignPositive";
    /**
     * Incident was false positive
     */
    readonly FalsePositive: "FalsePositive";
};
/**
 * The reason the incident was closed
 */
export declare type IncidentClassification = (typeof IncidentClassification)[keyof typeof IncidentClassification];
export declare const IncidentClassificationReason: {
    /**
     * Classification reason was suspicious activity
     */
    readonly SuspiciousActivity: "SuspiciousActivity";
    /**
     * Classification reason was suspicious but expected
     */
    readonly SuspiciousButExpected: "SuspiciousButExpected";
    /**
     * Classification reason was incorrect alert logic
     */
    readonly IncorrectAlertLogic: "IncorrectAlertLogic";
    /**
     * Classification reason was inaccurate data
     */
    readonly InaccurateData: "InaccurateData";
};
/**
 * The classification reason the incident was closed with
 */
export declare type IncidentClassificationReason = (typeof IncidentClassificationReason)[keyof typeof IncidentClassificationReason];
export declare const IncidentSeverity: {
    /**
     * High severity
     */
    readonly High: "High";
    /**
     * Medium severity
     */
    readonly Medium: "Medium";
    /**
     * Low severity
     */
    readonly Low: "Low";
    /**
     * Informational severity
     */
    readonly Informational: "Informational";
};
/**
 * The severity of the incident
 */
export declare type IncidentSeverity = (typeof IncidentSeverity)[keyof typeof IncidentSeverity];
export declare const IncidentStatus: {
    /**
     * An active incident which isn't being handled currently
     */
    readonly New: "New";
    /**
     * An active incident which is being handled
     */
    readonly Active: "Active";
    /**
     * A non-active incident
     */
    readonly Closed: "Closed";
};
/**
 * The status of the incident
 */
export declare type IncidentStatus = (typeof IncidentStatus)[keyof typeof IncidentStatus];
export declare const MicrosoftSecurityProductName: {
    readonly Microsoft_Cloud_App_Security: "Microsoft Cloud App Security";
    readonly Azure_Security_Center: "Azure Security Center";
    readonly Azure_Advanced_Threat_Protection: "Azure Advanced Threat Protection";
    readonly Azure_Active_Directory_Identity_Protection: "Azure Active Directory Identity Protection";
    readonly Azure_Security_Center_for_IoT: "Azure Security Center for IoT";
};
/**
 * The alerts' productName on which the cases will be generated
 */
export declare type MicrosoftSecurityProductName = (typeof MicrosoftSecurityProductName)[keyof typeof MicrosoftSecurityProductName];
export declare const TriggerOperator: {
    readonly GreaterThan: "GreaterThan";
    readonly LessThan: "LessThan";
    readonly Equal: "Equal";
    readonly NotEqual: "NotEqual";
};
/**
 * The operation against the threshold that triggers alert rule.
 */
export declare type TriggerOperator = (typeof TriggerOperator)[keyof typeof TriggerOperator];
