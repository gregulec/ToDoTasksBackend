import * as v20171201 from "./v20171201";
import * as v20171201preview from "./v20171201preview";
import * as v20200101 from "./v20200101";
import * as v20200101privatepreview from "./v20200101privatepreview";
import * as v20200214preview from "./v20200214preview";
import * as v20200214privatepreview from "./v20200214privatepreview";
import * as v20201005privatepreview from "./v20201005privatepreview";
import * as v20210410privatepreview from "./v20210410privatepreview";
import * as v20210601 from "./v20210601";
import * as v20210601preview from "./v20210601preview";
import * as v20210615privatepreview from "./v20210615privatepreview";
export { v20171201, v20171201preview, v20200101, v20200101privatepreview, v20200214preview, v20200214privatepreview, v20201005privatepreview, v20210410privatepreview, v20210601, v20210601preview, v20210615privatepreview, };
export declare const AdministratorType: {
    readonly ActiveDirectory: "ActiveDirectory";
};
/**
 * The type of administrator.
 */
export declare type AdministratorType = (typeof AdministratorType)[keyof typeof AdministratorType];
export declare const CreateMode: {
    readonly Default: "Default";
    readonly PointInTimeRestore: "PointInTimeRestore";
    readonly GeoRestore: "GeoRestore";
    readonly Replica: "Replica";
};
/**
 * The mode to create a new server.
 */
export declare type CreateMode = (typeof CreateMode)[keyof typeof CreateMode];
export declare const GeoRedundantBackup: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Enable Geo-redundant or not for server backup.
 */
export declare type GeoRedundantBackup = (typeof GeoRedundantBackup)[keyof typeof GeoRedundantBackup];
export declare const IdentityType: {
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
 */
export declare type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const InfrastructureEncryption: {
    /**
     * Default value for single layer of encryption for data at rest.
     */
    readonly Enabled: "Enabled";
    /**
     * Additional (2nd) layer of encryption for data at rest
     */
    readonly Disabled: "Disabled";
};
/**
 * Status showing whether the server enabled infrastructure encryption.
 */
export declare type InfrastructureEncryption = (typeof InfrastructureEncryption)[keyof typeof InfrastructureEncryption];
export declare const MinimalTlsVersionEnum: {
    readonly TLS1_0: "TLS1_0";
    readonly TLS1_1: "TLS1_1";
    readonly TLS1_2: "TLS1_2";
    readonly TLSEnforcementDisabled: "TLSEnforcementDisabled";
};
/**
 * Enforce a minimal Tls version for the server.
 */
export declare type MinimalTlsVersionEnum = (typeof MinimalTlsVersionEnum)[keyof typeof MinimalTlsVersionEnum];
export declare const PublicNetworkAccessEnum: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
 */
export declare type PublicNetworkAccessEnum = (typeof PublicNetworkAccessEnum)[keyof typeof PublicNetworkAccessEnum];
export declare const ServerKeyType: {
    readonly AzureKeyVault: "AzureKeyVault";
};
/**
 * The key type like 'AzureKeyVault'.
 */
export declare type ServerKeyType = (typeof ServerKeyType)[keyof typeof ServerKeyType];
export declare const ServerSecurityAlertPolicyState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Specifies the state of the policy, whether it is enabled or disabled.
 */
export declare type ServerSecurityAlertPolicyState = (typeof ServerSecurityAlertPolicyState)[keyof typeof ServerSecurityAlertPolicyState];
export declare const ServerVersion: {
    readonly ServerVersion_9_5: "9.5";
    readonly ServerVersion_9_6: "9.6";
    readonly ServerVersion_10: "10";
    readonly ServerVersion_10_0: "10.0";
    readonly ServerVersion_10_2: "10.2";
    readonly ServerVersion_11: "11";
};
/**
 * Server version.
 */
export declare type ServerVersion = (typeof ServerVersion)[keyof typeof ServerVersion];
export declare const SkuTier: {
    readonly Basic: "Basic";
    readonly GeneralPurpose: "GeneralPurpose";
    readonly MemoryOptimized: "MemoryOptimized";
};
/**
 * The tier of the particular SKU, e.g. Basic.
 */
export declare type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
export declare const SslEnforcementEnum: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Enable ssl enforcement or not when connect to server.
 */
export declare type SslEnforcementEnum = (typeof SslEnforcementEnum)[keyof typeof SslEnforcementEnum];
export declare const StorageAutogrow: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Enable Storage Auto Grow.
 */
export declare type StorageAutogrow = (typeof StorageAutogrow)[keyof typeof StorageAutogrow];
