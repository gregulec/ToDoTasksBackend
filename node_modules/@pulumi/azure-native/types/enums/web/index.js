"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WsdlImportMethod = exports.UnauthenticatedClientActionV2 = exports.UnauthenticatedClientAction = exports.SupportedTlsVersions = exports.StorageType = exports.StagingEnvironmentPolicy = exports.SslState = exports.SiteLoadBalancing = exports.ScmType = exports.RouteType = exports.RedundancyMode = exports.PublicCertificateLocation = exports.ManagedServiceIdentityType = exports.ManagedPipelineMode = exports.LogLevel = exports.LoadBalancingMode = exports.IpFilterTag = exports.HostType = exports.HostNameType = exports.FtpsState = exports.FrontEndServiceType = exports.FrequencyUnit = exports.ForwardProxyConvention = exports.DatabaseType = exports.CustomHostNameDnsRecordType = exports.CookieExpirationConvention = exports.ConnectionStringType = exports.ConnectionParameterType = exports.ClientCredentialMethod = exports.ClientCertMode = exports.BuiltInAuthenticationProvider = exports.AzureStorageType = exports.AzureResourceType = exports.AutoHealActionType = exports.ApiType = exports.v20210201 = exports.v20210115 = exports.v20210101 = exports.v20201201 = exports.v20201001 = exports.v20200901 = exports.v20200601 = exports.v20190801 = exports.v20181101 = exports.v20180201 = exports.v20160901 = exports.v20160801 = exports.v20160601 = exports.v20150801preview = exports.v20150801 = void 0;
// Export sub-modules:
const v20150801 = require("./v20150801");
exports.v20150801 = v20150801;
const v20150801preview = require("./v20150801preview");
exports.v20150801preview = v20150801preview;
const v20160601 = require("./v20160601");
exports.v20160601 = v20160601;
const v20160801 = require("./v20160801");
exports.v20160801 = v20160801;
const v20160901 = require("./v20160901");
exports.v20160901 = v20160901;
const v20180201 = require("./v20180201");
exports.v20180201 = v20180201;
const v20181101 = require("./v20181101");
exports.v20181101 = v20181101;
const v20190801 = require("./v20190801");
exports.v20190801 = v20190801;
const v20200601 = require("./v20200601");
exports.v20200601 = v20200601;
const v20200901 = require("./v20200901");
exports.v20200901 = v20200901;
const v20201001 = require("./v20201001");
exports.v20201001 = v20201001;
const v20201201 = require("./v20201201");
exports.v20201201 = v20201201;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
const v20210115 = require("./v20210115");
exports.v20210115 = v20210115;
const v20210201 = require("./v20210201");
exports.v20210201 = v20210201;
exports.ApiType = {
    NotSpecified: "NotSpecified",
    Rest: "Rest",
    Soap: "Soap",
};
exports.AutoHealActionType = {
    Recycle: "Recycle",
    LogEvent: "LogEvent",
    CustomAction: "CustomAction",
};
exports.AzureResourceType = {
    Website: "Website",
    TrafficManager: "TrafficManager",
};
exports.AzureStorageType = {
    AzureFiles: "AzureFiles",
    AzureBlob: "AzureBlob",
};
exports.BuiltInAuthenticationProvider = {
    AzureActiveDirectory: "AzureActiveDirectory",
    Facebook: "Facebook",
    Google: "Google",
    MicrosoftAccount: "MicrosoftAccount",
    Twitter: "Twitter",
    Github: "Github",
};
exports.ClientCertMode = {
    Required: "Required",
    Optional: "Optional",
    OptionalInteractiveUser: "OptionalInteractiveUser",
};
exports.ClientCredentialMethod = {
    ClientSecretPost: "ClientSecretPost",
};
exports.ConnectionParameterType = {
    String: "string",
    Securestring: "securestring",
    Secureobject: "secureobject",
    Int: "int",
    Bool: "bool",
    Object: "object",
    Array: "array",
    OauthSetting: "oauthSetting",
    Connection: "connection",
};
exports.ConnectionStringType = {
    MySql: "MySql",
    SQLServer: "SQLServer",
    SQLAzure: "SQLAzure",
    Custom: "Custom",
    NotificationHub: "NotificationHub",
    ServiceBus: "ServiceBus",
    EventHub: "EventHub",
    ApiHub: "ApiHub",
    DocDb: "DocDb",
    RedisCache: "RedisCache",
    PostgreSQL: "PostgreSQL",
};
exports.CookieExpirationConvention = {
    FixedTime: "FixedTime",
    IdentityProviderDerived: "IdentityProviderDerived",
};
exports.CustomHostNameDnsRecordType = {
    CName: "CName",
    A: "A",
};
exports.DatabaseType = {
    SqlAzure: "SqlAzure",
    MySql: "MySql",
    LocalMySql: "LocalMySql",
    PostgreSql: "PostgreSql",
};
exports.ForwardProxyConvention = {
    NoProxy: "NoProxy",
    Standard: "Standard",
    Custom: "Custom",
};
exports.FrequencyUnit = {
    Day: "Day",
    Hour: "Hour",
};
exports.FrontEndServiceType = {
    NodePort: "NodePort",
    LoadBalancer: "LoadBalancer",
};
exports.FtpsState = {
    AllAllowed: "AllAllowed",
    FtpsOnly: "FtpsOnly",
    Disabled: "Disabled",
};
exports.HostNameType = {
    Verified: "Verified",
    Managed: "Managed",
};
exports.HostType = {
    Standard: "Standard",
    Repository: "Repository",
};
exports.IpFilterTag = {
    Default: "Default",
    XffProxy: "XffProxy",
    ServiceTag: "ServiceTag",
};
exports.LoadBalancingMode = {
    None: "None",
    Web: "Web",
    Publishing: "Publishing",
    Web_Publishing: "Web, Publishing",
};
exports.LogLevel = {
    Off: "Off",
    Verbose: "Verbose",
    Information: "Information",
    Warning: "Warning",
    Error: "Error",
};
exports.ManagedPipelineMode = {
    Integrated: "Integrated",
    Classic: "Classic",
};
exports.ManagedServiceIdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned",
    None: "None",
};
exports.PublicCertificateLocation = {
    CurrentUserMy: "CurrentUserMy",
    LocalMachineMy: "LocalMachineMy",
    Unknown: "Unknown",
};
exports.RedundancyMode = {
    None: "None",
    Manual: "Manual",
    Failover: "Failover",
    ActiveActive: "ActiveActive",
    GeoRedundant: "GeoRedundant",
};
exports.RouteType = {
    DEFAULT: "DEFAULT",
    INHERITED: "INHERITED",
    STATIC: "STATIC",
};
exports.ScmType = {
    None: "None",
    Dropbox: "Dropbox",
    Tfs: "Tfs",
    LocalGit: "LocalGit",
    GitHub: "GitHub",
    CodePlexGit: "CodePlexGit",
    CodePlexHg: "CodePlexHg",
    BitbucketGit: "BitbucketGit",
    BitbucketHg: "BitbucketHg",
    ExternalGit: "ExternalGit",
    ExternalHg: "ExternalHg",
    OneDrive: "OneDrive",
    VSO: "VSO",
    VSTSRM: "VSTSRM",
};
exports.SiteLoadBalancing = {
    WeightedRoundRobin: "WeightedRoundRobin",
    LeastRequests: "LeastRequests",
    LeastResponseTime: "LeastResponseTime",
    WeightedTotalTraffic: "WeightedTotalTraffic",
    RequestHash: "RequestHash",
    PerSiteRoundRobin: "PerSiteRoundRobin",
};
exports.SslState = {
    Disabled: "Disabled",
    SniEnabled: "SniEnabled",
    IpBasedEnabled: "IpBasedEnabled",
};
exports.StagingEnvironmentPolicy = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.StorageType = {
    LocalNode: "LocalNode",
    NetworkFileSystem: "NetworkFileSystem",
};
exports.SupportedTlsVersions = {
    SupportedTlsVersions_1_0: "1.0",
    SupportedTlsVersions_1_1: "1.1",
    SupportedTlsVersions_1_2: "1.2",
};
exports.UnauthenticatedClientAction = {
    RedirectToLoginPage: "RedirectToLoginPage",
    AllowAnonymous: "AllowAnonymous",
};
exports.UnauthenticatedClientActionV2 = {
    RedirectToLoginPage: "RedirectToLoginPage",
    AllowAnonymous: "AllowAnonymous",
    Return401: "Return401",
    Return403: "Return403",
};
exports.WsdlImportMethod = {
    NotSpecified: "NotSpecified",
    SoapToRest: "SoapToRest",
    SoapPassThrough: "SoapPassThrough",
};
//# sourceMappingURL=index.js.map