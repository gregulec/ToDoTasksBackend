import * as v20201030preview from "./v20201030preview";
export { v20201030preview, };
export declare const EnterprisePolicyKind: {
    readonly Lockbox: "Lockbox";
    readonly PrivateEndpoint: "PrivateEndpoint";
    readonly Encryption: "Encryption";
    readonly NetworkInjection: "NetworkInjection";
};
/**
 * The kind (type) of Enterprise Policy.
 */
export declare type EnterprisePolicyKind = (typeof EnterprisePolicyKind)[keyof typeof EnterprisePolicyKind];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export declare type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly None: "None";
};
/**
 * The type of identity used for the EnterprisePolicy. Currently, the only supported type is 'SystemAssigned', which implicitly creates an identity.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const State: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
    readonly NotConfigured: "NotConfigured";
};
/**
 * lockbox configuration
 */
export declare type State = (typeof State)[keyof typeof State];
