export declare const InfrastructureEncryptionState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Enabling/Disabling the Double Encryption state
 */
export declare type InfrastructureEncryptionState = (typeof InfrastructureEncryptionState)[keyof typeof InfrastructureEncryptionState];
export declare const PrivateEndpointConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Gets or sets the status
 */
export declare type PrivateEndpointConnectionStatus = (typeof PrivateEndpointConnectionStatus)[keyof typeof PrivateEndpointConnectionStatus];
export declare const ProvisioningState: {
    readonly Succeeded: "Succeeded";
    readonly Deleting: "Deleting";
    readonly Failed: "Failed";
    readonly Pending: "Pending";
};
/**
 * Gets or sets provisioning state of the private endpoint connection
 */
export declare type ProvisioningState = (typeof ProvisioningState)[keyof typeof ProvisioningState];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly None: "None";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned, UserAssigned";
};
/**
 * The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const SkuName: {
    readonly Standard: "Standard";
    readonly RS0: "RS0";
};
/**
 * The Sku name.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
