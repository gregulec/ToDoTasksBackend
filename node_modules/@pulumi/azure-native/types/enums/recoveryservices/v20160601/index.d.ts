export declare const BackupManagementType: {
    readonly Invalid: "Invalid";
    readonly AzureIaasVM: "AzureIaasVM";
    readonly MAB: "MAB";
    readonly DPM: "DPM";
    readonly AzureBackupServer: "AzureBackupServer";
    readonly AzureSql: "AzureSql";
};
/**
 * The backup management type associated with the backup item.
 */
export declare type BackupManagementType = (typeof BackupManagementType)[keyof typeof BackupManagementType];
export declare const DataSourceType: {
    readonly Invalid: "Invalid";
    readonly VM: "VM";
    readonly FileFolder: "FileFolder";
    readonly AzureSqlDb: "AzureSqlDb";
    readonly SQLDB: "SQLDB";
    readonly Exchange: "Exchange";
    readonly Sharepoint: "Sharepoint";
    readonly DPMUnknown: "DPMUnknown";
};
/**
 * The workload type for this item.
 */
export declare type DataSourceType = (typeof DataSourceType)[keyof typeof DataSourceType];
export declare const DayOfWeek: {
    readonly Sunday: "Sunday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
};
export declare type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export declare const MonthOfYear: {
    readonly Invalid: "Invalid";
    readonly January: "January";
    readonly February: "February";
    readonly March: "March";
    readonly April: "April";
    readonly May: "May";
    readonly June: "June";
    readonly July: "July";
    readonly August: "August";
    readonly September: "September";
    readonly October: "October";
    readonly November: "November";
    readonly December: "December";
};
export declare type MonthOfYear = (typeof MonthOfYear)[keyof typeof MonthOfYear];
export declare const ProtectedItemState: {
    readonly Invalid: "Invalid";
    readonly IRPending: "IRPending";
    readonly Protected: "Protected";
    readonly ProtectionError: "ProtectionError";
    readonly ProtectionStopped: "ProtectionStopped";
    readonly ProtectionPaused: "ProtectionPaused";
};
/**
 * The backup state of the backup item.
 */
export declare type ProtectedItemState = (typeof ProtectedItemState)[keyof typeof ProtectedItemState];
export declare const ProtectionState: {
    readonly Invalid: "Invalid";
    readonly IRPending: "IRPending";
    readonly Protected: "Protected";
    readonly ProtectionError: "ProtectionError";
    readonly ProtectionStopped: "ProtectionStopped";
    readonly ProtectionPaused: "ProtectionPaused";
};
/**
 * The backup state of this backup item.
 */
export declare type ProtectionState = (typeof ProtectionState)[keyof typeof ProtectionState];
export declare const ResourceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly None: "None";
};
/**
 * The identity type.
 */
export declare type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];
export declare const RetentionDurationType: {
    readonly Invalid: "Invalid";
    readonly Days: "Days";
    readonly Weeks: "Weeks";
    readonly Months: "Months";
    readonly Years: "Years";
};
/**
 * The retention duration type of the retention policy.
 */
export declare type RetentionDurationType = (typeof RetentionDurationType)[keyof typeof RetentionDurationType];
export declare const RetentionScheduleFormat: {
    readonly Invalid: "Invalid";
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
};
/**
 * Retention schedule format for the yearly retention policy.
 */
export declare type RetentionScheduleFormat = (typeof RetentionScheduleFormat)[keyof typeof RetentionScheduleFormat];
export declare const ScheduleRunType: {
    readonly Invalid: "Invalid";
    readonly Daily: "Daily";
    readonly Weekly: "Weekly";
};
/**
 * Defines the frequency interval (daily or weekly) for the schedule policy.
 */
export declare type ScheduleRunType = (typeof ScheduleRunType)[keyof typeof ScheduleRunType];
export declare const SkuName: {
    readonly Standard: "Standard";
    readonly RS0: "RS0";
};
/**
 * The Sku name.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const WeekOfMonth: {
    readonly First: "First";
    readonly Second: "Second";
    readonly Third: "Third";
    readonly Fourth: "Fourth";
    readonly Last: "Last";
};
export declare type WeekOfMonth = (typeof WeekOfMonth)[keyof typeof WeekOfMonth];
