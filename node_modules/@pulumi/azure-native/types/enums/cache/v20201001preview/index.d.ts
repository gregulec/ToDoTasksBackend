export declare const ClusteringPolicy: {
    readonly EnterpriseCluster: "EnterpriseCluster";
    readonly OSSCluster: "OSSCluster";
};
/**
 * Clustering policy - default is OSSCluster. Specified at create time.
 */
export declare type ClusteringPolicy = (typeof ClusteringPolicy)[keyof typeof ClusteringPolicy];
export declare const EvictionPolicy: {
    readonly AllKeysLFU: "AllKeysLFU";
    readonly AllKeysLRU: "AllKeysLRU";
    readonly AllKeysRandom: "AllKeysRandom";
    readonly VolatileLRU: "VolatileLRU";
    readonly VolatileLFU: "VolatileLFU";
    readonly VolatileTTL: "VolatileTTL";
    readonly VolatileRandom: "VolatileRandom";
    readonly NoEviction: "NoEviction";
};
/**
 * Redis eviction policy - default is VolatileLRU
 */
export declare type EvictionPolicy = (typeof EvictionPolicy)[keyof typeof EvictionPolicy];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export declare type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
export declare const Protocol: {
    readonly Encrypted: "Encrypted";
    readonly Plaintext: "Plaintext";
};
/**
 * Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
 */
export declare type Protocol = (typeof Protocol)[keyof typeof Protocol];
export declare const SkuName: {
    readonly Enterprise_E10: "Enterprise_E10";
    readonly Enterprise_E20: "Enterprise_E20";
    readonly Enterprise_E50: "Enterprise_E50";
    readonly Enterprise_E100: "Enterprise_E100";
    readonly EnterpriseFlash_F300: "EnterpriseFlash_F300";
    readonly EnterpriseFlash_F700: "EnterpriseFlash_F700";
    readonly EnterpriseFlash_F1500: "EnterpriseFlash_F1500";
};
/**
 * The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
