export declare const DiagnosticsSinkKind: {
    /**
     * Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type.
     */
    readonly Invalid: "Invalid";
    /**
     * Diagnostics settings for Geneva.
     */
    readonly AzureInternalMonitoringPipeline: "AzureInternalMonitoringPipeline";
};
/**
 * The kind of DiagnosticsSink.
 */
export declare type DiagnosticsSinkKind = (typeof DiagnosticsSinkKind)[keyof typeof DiagnosticsSinkKind];
export declare const HealthState: {
    /**
     * Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
     */
    readonly Invalid: "Invalid";
    /**
     * Indicates the health state is okay. The value is 1.
     */
    readonly Ok: "Ok";
    /**
     * Indicates the health state is at a warning level. The value is 2.
     */
    readonly Warning: "Warning";
    /**
     * Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
     */
    readonly Error: "Error";
    /**
     * Indicates an unknown health status. The value is 65535.
     */
    readonly Unknown: "Unknown";
};
/**
 * The health state of a resource such as Application, Service, or Network.
 */
export declare type HealthState = (typeof HealthState)[keyof typeof HealthState];
export declare const IngressQoSLevel: {
    readonly Bronze: "Bronze";
};
/**
 * The QoS tier for ingress.
 */
export declare type IngressQoSLevel = (typeof IngressQoSLevel)[keyof typeof IngressQoSLevel];
export declare const OperatingSystemTypes: {
    readonly Linux: "Linux";
    readonly Windows: "Windows";
};
/**
 * The Operating system type required by the code in service.
 */
export declare type OperatingSystemTypes = (typeof OperatingSystemTypes)[keyof typeof OperatingSystemTypes];
export declare const VolumeProvider: {
    readonly SFAzureFile: "SFAzureFile";
};
/**
 * Provider of the volume.
 */
export declare type VolumeProvider = (typeof VolumeProvider)[keyof typeof VolumeProvider];
