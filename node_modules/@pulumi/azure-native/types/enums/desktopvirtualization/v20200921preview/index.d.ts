export declare const ApplicationGroupType: {
    readonly RemoteApp: "RemoteApp";
    readonly Desktop: "Desktop";
};
/**
 * Resource Type of ApplicationGroup.
 */
export declare type ApplicationGroupType = (typeof ApplicationGroupType)[keyof typeof ApplicationGroupType];
export declare const CommandLineSetting: {
    readonly DoNotAllow: "DoNotAllow";
    readonly Allow: "Allow";
    readonly Require: "Require";
};
/**
 * Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.
 */
export declare type CommandLineSetting = (typeof CommandLineSetting)[keyof typeof CommandLineSetting];
export declare const HostPoolType: {
    readonly Personal: "Personal";
    readonly Pooled: "Pooled";
};
/**
 * HostPool type for desktop.
 */
export declare type HostPoolType = (typeof HostPoolType)[keyof typeof HostPoolType];
export declare const LoadBalancerType: {
    readonly BreadthFirst: "BreadthFirst";
    readonly DepthFirst: "DepthFirst";
    readonly Persistent: "Persistent";
};
/**
 * The type of the load balancer.
 */
export declare type LoadBalancerType = (typeof LoadBalancerType)[keyof typeof LoadBalancerType];
export declare const PersonalDesktopAssignmentType: {
    readonly Automatic: "Automatic";
    readonly Direct: "Direct";
};
/**
 * PersonalDesktopAssignment type for HostPool.
 */
export declare type PersonalDesktopAssignmentType = (typeof PersonalDesktopAssignmentType)[keyof typeof PersonalDesktopAssignmentType];
export declare const PreferredAppGroupType: {
    readonly None: "None";
    readonly Desktop: "Desktop";
    readonly RailApplications: "RailApplications";
};
/**
 * The type of preferred application group type, default to Desktop Application Group
 */
export declare type PreferredAppGroupType = (typeof PreferredAppGroupType)[keyof typeof PreferredAppGroupType];
export declare const RegistrationTokenOperation: {
    readonly Delete: "Delete";
    readonly None: "None";
    readonly Update: "Update";
};
/**
 * The type of resetting the token.
 */
export declare type RegistrationTokenOperation = (typeof RegistrationTokenOperation)[keyof typeof RegistrationTokenOperation];
export declare const RemoteApplicationType: {
    readonly InBuilt: "InBuilt";
    readonly MsixApplication: "MsixApplication";
};
/**
 * Resource Type of Application.
 */
export declare type RemoteApplicationType = (typeof RemoteApplicationType)[keyof typeof RemoteApplicationType];
