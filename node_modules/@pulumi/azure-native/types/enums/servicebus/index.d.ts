import * as v20140901 from "./v20140901";
import * as v20150801 from "./v20150801";
import * as v20170401 from "./v20170401";
import * as v20180101preview from "./v20180101preview";
import * as v20210101preview from "./v20210101preview";
import * as v20210601preview from "./v20210601preview";
export { v20140901, v20150801, v20170401, v20180101preview, v20210101preview, v20210601preview, };
export declare const AccessRights: {
    readonly Manage: "Manage";
    readonly Send: "Send";
    readonly Listen: "Listen";
};
export declare type AccessRights = (typeof AccessRights)[keyof typeof AccessRights];
export declare const DefaultAction: {
    readonly Allow: "Allow";
    readonly Deny: "Deny";
};
/**
 * Default Action for Network Rule Set
 */
export declare type DefaultAction = (typeof DefaultAction)[keyof typeof DefaultAction];
export declare const EndPointProvisioningState: {
    readonly Creating: "Creating";
    readonly Updating: "Updating";
    readonly Deleting: "Deleting";
    readonly Succeeded: "Succeeded";
    readonly Canceled: "Canceled";
    readonly Failed: "Failed";
};
/**
 * Provisioning state of the Private Endpoint Connection.
 */
export declare type EndPointProvisioningState = (typeof EndPointProvisioningState)[keyof typeof EndPointProvisioningState];
export declare const EntityStatus: {
    readonly Active: "Active";
    readonly Disabled: "Disabled";
    readonly Restoring: "Restoring";
    readonly SendDisabled: "SendDisabled";
    readonly ReceiveDisabled: "ReceiveDisabled";
    readonly Creating: "Creating";
    readonly Deleting: "Deleting";
    readonly Renaming: "Renaming";
    readonly Unknown: "Unknown";
};
/**
 * Enumerates the possible values for the status of a messaging entity.
 */
export declare type EntityStatus = (typeof EntityStatus)[keyof typeof EntityStatus];
export declare const FilterType: {
    readonly SqlFilter: "SqlFilter";
    readonly CorrelationFilter: "CorrelationFilter";
};
/**
 * Filter type that is evaluated against a BrokeredMessage.
 */
export declare type FilterType = (typeof FilterType)[keyof typeof FilterType];
export declare const IPAction: {
    readonly Accept: "Accept";
    readonly Reject: "Reject";
};
/**
 * The IP Filter Action
 */
export declare type IPAction = (typeof IPAction)[keyof typeof IPAction];
export declare const NetworkRuleIPAction: {
    readonly Allow: "Allow";
};
/**
 * The IP Filter Action
 */
export declare type NetworkRuleIPAction = (typeof NetworkRuleIPAction)[keyof typeof NetworkRuleIPAction];
export declare const PrivateLinkConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Status of the connection.
 */
export declare type PrivateLinkConnectionStatus = (typeof PrivateLinkConnectionStatus)[keyof typeof PrivateLinkConnectionStatus];
export declare const SkuName: {
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * Name of this SKU.
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
export declare const SkuTier: {
    readonly Basic: "Basic";
    readonly Standard: "Standard";
    readonly Premium: "Premium";
};
/**
 * The billing tier of this particular SKU.
 */
export declare type SkuTier = (typeof SkuTier)[keyof typeof SkuTier];
