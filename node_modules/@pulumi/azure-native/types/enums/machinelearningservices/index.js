"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SamplingAlgorithm = exports.ResourceIdentityType = exports.ResourceIdentityAssignment = exports.RemoteLoginPortPublicAccess = exports.ReferenceType = exports.PrivateEndpointServiceConnectionStatus = exports.OsType = exports.OperatingSystemType = exports.MediaType = exports.LinkedServiceLinkType = exports.JobType = exports.ImageAnnotationType = exports.IdentityConfigurationType = exports.Header = exports.Goal = exports.EndpointComputeType = exports.EndpointAuthMode = exports.EncryptionStatus = exports.EarlyTerminationPolicyType = exports.DockerSpecificationType = exports.DistributionType = exports.DatastoreTypeArm = exports.DatasetType = exports.DataBindingMode = exports.ContainerType = exports.ComputeType = exports.ComputeInstanceAuthorizationType = exports.ComputeEnvironmentType = exports.ClusterPurpose = exports.BatchOutputAction = exports.BatchLoggingLevel = exports.ApplicationSharingPolicy = exports.v20210701 = exports.v20210401 = exports.v20210301preview = exports.v20210101 = exports.v20200901preview = exports.v20200801 = exports.v20200601 = exports.v20200515preview = exports.v20200501preview = exports.v20200401 = exports.v20200301 = exports.v20200218preview = exports.v20200101 = exports.v20191101 = exports.v20190601 = exports.v20190501 = exports.v20181119 = exports.v20180301preview = void 0;
exports.VmPriority = exports.VariantType = exports.ValueFormat = exports.SshPublicAccess = exports.SourceType = exports.ScaleType = void 0;
// Export sub-modules:
const v20180301preview = require("./v20180301preview");
exports.v20180301preview = v20180301preview;
const v20181119 = require("./v20181119");
exports.v20181119 = v20181119;
const v20190501 = require("./v20190501");
exports.v20190501 = v20190501;
const v20190601 = require("./v20190601");
exports.v20190601 = v20190601;
const v20191101 = require("./v20191101");
exports.v20191101 = v20191101;
const v20200101 = require("./v20200101");
exports.v20200101 = v20200101;
const v20200218preview = require("./v20200218preview");
exports.v20200218preview = v20200218preview;
const v20200301 = require("./v20200301");
exports.v20200301 = v20200301;
const v20200401 = require("./v20200401");
exports.v20200401 = v20200401;
const v20200501preview = require("./v20200501preview");
exports.v20200501preview = v20200501preview;
const v20200515preview = require("./v20200515preview");
exports.v20200515preview = v20200515preview;
const v20200601 = require("./v20200601");
exports.v20200601 = v20200601;
const v20200801 = require("./v20200801");
exports.v20200801 = v20200801;
const v20200901preview = require("./v20200901preview");
exports.v20200901preview = v20200901preview;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
const v20210301preview = require("./v20210301preview");
exports.v20210301preview = v20210301preview;
const v20210401 = require("./v20210401");
exports.v20210401 = v20210401;
const v20210701 = require("./v20210701");
exports.v20210701 = v20210701;
exports.ApplicationSharingPolicy = {
    Personal: "Personal",
    Shared: "Shared",
};
exports.BatchLoggingLevel = {
    Info: "Info",
    Warning: "Warning",
    Debug: "Debug",
};
exports.BatchOutputAction = {
    SummaryOnly: "SummaryOnly",
    AppendRow: "AppendRow",
};
exports.ClusterPurpose = {
    FastProd: "FastProd",
    DenseProd: "DenseProd",
    DevTest: "DevTest",
};
exports.ComputeEnvironmentType = {
    ACI: "ACI",
    AKS: "AKS",
};
exports.ComputeInstanceAuthorizationType = {
    Personal: "personal",
};
exports.ComputeType = {
    AKS: "AKS",
    AmlCompute: "AmlCompute",
    ComputeInstance: "ComputeInstance",
    DataFactory: "DataFactory",
    VirtualMachine: "VirtualMachine",
    HDInsight: "HDInsight",
    Databricks: "Databricks",
    DataLakeAnalytics: "DataLakeAnalytics",
};
exports.ContainerType = {
    StorageInitializer: "StorageInitializer",
    InferenceServer: "InferenceServer",
};
exports.DataBindingMode = {
    Mount: "Mount",
    Download: "Download",
    Upload: "Upload",
};
exports.DatasetType = {
    Tabular: "tabular",
    File: "file",
};
exports.DatastoreTypeArm = {
    Blob: "blob",
    Adls: "adls",
    Adls_gen2: "adls-gen2",
    Dbfs: "dbfs",
    File: "file",
    Mysqldb: "mysqldb",
    Sqldb: "sqldb",
    Psqldb: "psqldb",
};
exports.DistributionType = {
    PyTorch: "PyTorch",
    TensorFlow: "TensorFlow",
    Mpi: "Mpi",
};
exports.DockerSpecificationType = {
    Build: "Build",
    Image: "Image",
};
exports.EarlyTerminationPolicyType = {
    Bandit: "Bandit",
    MedianStopping: "MedianStopping",
    TruncationSelection: "TruncationSelection",
};
exports.EncryptionStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.EndpointAuthMode = {
    AMLToken: "AMLToken",
    Key: "Key",
    AADToken: "AADToken",
};
exports.EndpointComputeType = {
    Managed: "Managed",
    K8S: "K8S",
    AzureMLCompute: "AzureMLCompute",
};
exports.Goal = {
    Minimize: "Minimize",
    Maximize: "Maximize",
};
exports.Header = {
    All_files_have_same_headers: "all_files_have_same_headers",
    Only_first_file_has_headers: "only_first_file_has_headers",
    No_headers: "no_headers",
    Combine_all_files_headers: "combine_all_files_headers",
};
exports.IdentityConfigurationType = {
    Managed: "Managed",
    AMLToken: "AMLToken",
};
exports.ImageAnnotationType = {
    Classification: "Classification",
    BoundingBox: "BoundingBox",
    InstanceSegmentation: "InstanceSegmentation",
};
exports.JobType = {
    Command: "Command",
    Sweep: "Sweep",
    Labeling: "Labeling",
};
exports.LinkedServiceLinkType = {
    Synapse: "Synapse",
};
exports.MediaType = {
    Image: "Image",
    Text: "Text",
};
exports.OperatingSystemType = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.OsType = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
    Timeout: "Timeout",
};
exports.ReferenceType = {
    Id: "Id",
    DataPath: "DataPath",
    OutputPath: "OutputPath",
};
exports.RemoteLoginPortPublicAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    NotSpecified: "NotSpecified",
};
exports.ResourceIdentityAssignment = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    None: "None",
};
exports.ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    UserAssigned: "UserAssigned",
    None: "None",
};
exports.SamplingAlgorithm = {
    Grid: "Grid",
    Random: "Random",
    Bayesian: "Bayesian",
};
exports.ScaleType = {
    Auto: "Auto",
    Manual: "Manual",
};
exports.SourceType = {
    Delimited_files: "delimited_files",
    Json_lines_files: "json_lines_files",
    Parquet_files: "parquet_files",
};
exports.SshPublicAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ValueFormat = {
    JSON: "JSON",
};
exports.VariantType = {
    Control: "Control",
    Treatment: "Treatment",
};
exports.VmPriority = {
    Dedicated: "Dedicated",
    LowPriority: "LowPriority",
};
//# sourceMappingURL=index.js.map