"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VmPriority = exports.ValueFormat = exports.TriggerType = exports.TextAnnotationType = exports.SshPublicAccess = exports.SecretsType = exports.ScheduleStatus = exports.ScaleType = exports.SamplingAlgorithm = exports.ResourceIdentityType = exports.ResourceIdentityAssignment = exports.RemoteLoginPortPublicAccess = exports.ReferenceType = exports.RecurrenceFrequency = exports.PrivateEndpointServiceConnectionStatus = exports.OsType = exports.OriginType = exports.OperatingSystemType = exports.MediaType = exports.LoadBalancerType = exports.JobType = exports.ImageAnnotationType = exports.IdentityConfigurationType = exports.Goal = exports.EndpointComputeType = exports.EndpointAuthMode = exports.EncryptionStatus = exports.EarlyTerminationPolicyType = exports.DockerSpecificationType = exports.DistributionType = exports.DaysOfWeek = exports.DatasetType = exports.DataBindingMode = exports.CredentialsType = exports.ContentsType = exports.ContainerType = exports.ComputeType = exports.ComputePowerAction = exports.ComputeInstanceAuthorizationType = exports.ClusterPurpose = exports.BatchOutputAction = exports.BatchLoggingLevel = exports.ApplicationSharingPolicy = void 0;
exports.ApplicationSharingPolicy = {
    Personal: "Personal",
    Shared: "Shared",
};
exports.BatchLoggingLevel = {
    Info: "Info",
    Warning: "Warning",
    Debug: "Debug",
};
exports.BatchOutputAction = {
    SummaryOnly: "SummaryOnly",
    AppendRow: "AppendRow",
};
exports.ClusterPurpose = {
    FastProd: "FastProd",
    DenseProd: "DenseProd",
    DevTest: "DevTest",
};
exports.ComputeInstanceAuthorizationType = {
    Personal: "personal",
};
exports.ComputePowerAction = {
    Start: "Start",
    Stop: "Stop",
};
exports.ComputeType = {
    AKS: "AKS",
    AmlCompute: "AmlCompute",
    ComputeInstance: "ComputeInstance",
    DataFactory: "DataFactory",
    VirtualMachine: "VirtualMachine",
    HDInsight: "HDInsight",
    Databricks: "Databricks",
    DataLakeAnalytics: "DataLakeAnalytics",
    SynapseSpark: "SynapseSpark",
};
exports.ContainerType = {
    StorageInitializer: "StorageInitializer",
    InferenceServer: "InferenceServer",
};
exports.ContentsType = {
    AzureBlob: "AzureBlob",
    AzureDataLakeGen1: "AzureDataLakeGen1",
    AzureDataLakeGen2: "AzureDataLakeGen2",
    AzureFile: "AzureFile",
    AzureMySql: "AzureMySql",
    AzurePostgreSql: "AzurePostgreSql",
    AzureSqlDatabase: "AzureSqlDatabase",
    GlusterFs: "GlusterFs",
};
exports.CredentialsType = {
    AccountKey: "AccountKey",
    Certificate: "Certificate",
    None: "None",
    Sas: "Sas",
    ServicePrincipal: "ServicePrincipal",
    SqlAdmin: "SqlAdmin",
};
exports.DataBindingMode = {
    Mount: "Mount",
    Download: "Download",
    Upload: "Upload",
};
exports.DatasetType = {
    Simple: "Simple",
    Dataflow: "Dataflow",
};
exports.DaysOfWeek = {
    Sunday: "Sunday",
    Monday: "Monday",
    Tuesday: "Tuesday",
    Wednesday: "Wednesday",
    Thursday: "Thursday",
    Friday: "Friday",
    Saturday: "Saturday",
};
exports.DistributionType = {
    PyTorch: "PyTorch",
    TensorFlow: "TensorFlow",
    Mpi: "Mpi",
};
exports.DockerSpecificationType = {
    Build: "Build",
    Image: "Image",
};
exports.EarlyTerminationPolicyType = {
    Bandit: "Bandit",
    MedianStopping: "MedianStopping",
    TruncationSelection: "TruncationSelection",
};
exports.EncryptionStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.EndpointAuthMode = {
    AMLToken: "AMLToken",
    Key: "Key",
    AADToken: "AADToken",
};
exports.EndpointComputeType = {
    Managed: "Managed",
    K8S: "K8S",
    AzureMLCompute: "AzureMLCompute",
};
exports.Goal = {
    Minimize: "Minimize",
    Maximize: "Maximize",
};
exports.IdentityConfigurationType = {
    Managed: "Managed",
    AMLToken: "AMLToken",
};
exports.ImageAnnotationType = {
    Classification: "Classification",
    BoundingBox: "BoundingBox",
    InstanceSegmentation: "InstanceSegmentation",
};
exports.JobType = {
    Command: "Command",
    Sweep: "Sweep",
    Labeling: "Labeling",
};
exports.LoadBalancerType = {
    PublicIp: "PublicIp",
    InternalLoadBalancer: "InternalLoadBalancer",
};
exports.MediaType = {
    Image: "Image",
    Text: "Text",
};
exports.OperatingSystemType = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.OriginType = {
    Synapse: "Synapse",
};
exports.OsType = {
    Linux: "Linux",
    Windows: "Windows",
};
exports.PrivateEndpointServiceConnectionStatus = {
    Pending: "Pending",
    Approved: "Approved",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
    Timeout: "Timeout",
};
exports.RecurrenceFrequency = {
    NotSpecified: "NotSpecified",
    Second: "Second",
    Minute: "Minute",
    Hour: "Hour",
    Day: "Day",
    Week: "Week",
    Month: "Month",
    Year: "Year",
};
exports.ReferenceType = {
    Id: "Id",
    DataPath: "DataPath",
    OutputPath: "OutputPath",
};
exports.RemoteLoginPortPublicAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    NotSpecified: "NotSpecified",
};
exports.ResourceIdentityAssignment = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    None: "None",
};
exports.ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    UserAssigned: "UserAssigned",
    None: "None",
};
exports.SamplingAlgorithm = {
    Grid: "Grid",
    Random: "Random",
    Bayesian: "Bayesian",
};
exports.ScaleType = {
    Auto: "Auto",
    Manual: "Manual",
};
exports.ScheduleStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.SecretsType = {
    AccountKey: "AccountKey",
    Certificate: "Certificate",
    None: "None",
    Sas: "Sas",
    ServicePrincipal: "ServicePrincipal",
    SqlAdmin: "SqlAdmin",
};
exports.SshPublicAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.TextAnnotationType = {
    Classification: "Classification",
};
exports.TriggerType = {
    Recurrence: "Recurrence",
    Cron: "Cron",
};
exports.ValueFormat = {
    JSON: "JSON",
};
exports.VmPriority = {
    Dedicated: "Dedicated",
    LowPriority: "LowPriority",
};
//# sourceMappingURL=index.js.map