export declare const HostingMode: {
    readonly Default: "default";
    readonly HighDensity: "highDensity";
};
/**
 * Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'.
 */
export declare type HostingMode = (typeof HostingMode)[keyof typeof HostingMode];
export declare const IdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The identity type.
 */
export declare type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const PrivateLinkServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Status of the the private link service connection. Can be Pending, Approved, Rejected, or Disconnected.
 */
export declare type PrivateLinkServiceConnectionStatus = (typeof PrivateLinkServiceConnectionStatus)[keyof typeof PrivateLinkServiceConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
};
/**
 * This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
 */
export declare type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
export declare const SharedPrivateLinkResourceProvisioningState: {
    readonly Updating: "Updating";
    readonly Deleting: "Deleting";
    readonly Failed: "Failed";
    readonly Succeeded: "Succeeded";
    readonly Incomplete: "Incomplete";
};
/**
 * The provisioning state of the shared private link resource. Can be Updating, Deleting, Failed, Succeeded or Incomplete.
 */
export declare type SharedPrivateLinkResourceProvisioningState = (typeof SharedPrivateLinkResourceProvisioningState)[keyof typeof SharedPrivateLinkResourceProvisioningState];
export declare const SharedPrivateLinkResourceStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
 */
export declare type SharedPrivateLinkResourceStatus = (typeof SharedPrivateLinkResourceStatus)[keyof typeof SharedPrivateLinkResourceStatus];
export declare const SkuName: {
    readonly Free: "free";
    readonly Basic: "basic";
    readonly Standard: "standard";
    readonly Standard2: "standard2";
    readonly Standard3: "standard3";
    readonly Storage_optimized_l1: "storage_optimized_l1";
    readonly Storage_optimized_l2: "storage_optimized_l2";
};
/**
 * The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'
 */
export declare type SkuName = (typeof SkuName)[keyof typeof SkuName];
