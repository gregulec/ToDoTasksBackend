import * as v20200301preview from "./v20200301preview";
import * as v20201031 from "./v20201031";
import * as v20201201 from "./v20201201";
export { v20200301preview, v20201031, v20201201, };
export declare const AuthenticationType: {
    readonly KeyBased: "KeyBased";
    readonly IdentityBased: "IdentityBased";
};
/**
 * Specifies the authentication type being used for connecting to the endpoint.
 */
export declare type AuthenticationType = (typeof AuthenticationType)[keyof typeof AuthenticationType];
export declare const DigitalTwinsIdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
};
/**
 * The type of Managed Identity used by the DigitalTwinsInstance. Only SystemAssigned is supported.
 */
export declare type DigitalTwinsIdentityType = (typeof DigitalTwinsIdentityType)[keyof typeof DigitalTwinsIdentityType];
export declare const EndpointType: {
    readonly EventHub: "EventHub";
    readonly EventGrid: "EventGrid";
    readonly ServiceBus: "ServiceBus";
};
/**
 * The type of Digital Twins endpoint
 */
export declare type EndpointType = (typeof EndpointType)[keyof typeof EndpointType];
export declare const PrivateLinkServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
    readonly Disconnected: "Disconnected";
};
/**
 * The status of a private endpoint connection.
 */
export declare type PrivateLinkServiceConnectionStatus = (typeof PrivateLinkServiceConnectionStatus)[keyof typeof PrivateLinkServiceConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Public network access for the DigitalTwinsInstance.
 */
export declare type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
