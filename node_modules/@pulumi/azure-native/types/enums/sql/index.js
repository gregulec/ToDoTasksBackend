"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransparentDataEncryptionStatus = exports.SyncMemberDbType = exports.SyncDirection = exports.SyncConflictResolutionPolicy = exports.StorageAccountType = exports.ServerPublicNetworkAccess = exports.ServerKeyType = exports.SensitivityLabelRank = exports.SecurityAlertsPolicyState = exports.SecondaryType = exports.SampleName = exports.RequestedBackupStorageRedundancy = exports.ReadWriteEndpointFailoverPolicy = exports.ReadOnlyEndpointFailoverPolicy = exports.PrivateLinkServiceConnectionStateStatus = exports.PrincipalType = exports.ManagedServerCreateMode = exports.ManagedInstanceProxyOverride = exports.ManagedInstanceLicenseType = exports.ManagedInstanceAdministratorType = exports.ManagedDatabaseCreateMode = exports.JobTargetType = exports.JobTargetGroupMembershipType = exports.JobStepOutputType = exports.JobStepActionType = exports.JobStepActionSource = exports.JobScheduleType = exports.InstancePoolLicenseType = exports.IdentityType = exports.GeoBackupPolicyState = exports.ElasticPoolLicenseType = exports.DatabaseReadScale = exports.DatabaseLicenseType = exports.DataMaskingState = exports.CreateMode = exports.CatalogCollationType = exports.BlobAuditingPolicyState = exports.AutoExecuteStatus = exports.AdministratorType = exports.v20210201preview = exports.v20201101preview = exports.v20200801preview = exports.v20200202preview = exports.v20190601preview = exports.v20180601preview = exports.v20171001preview = exports.v20170301preview = exports.v20150501preview = exports.v20140401 = void 0;
// Export sub-modules:
const v20140401 = require("./v20140401");
exports.v20140401 = v20140401;
const v20150501preview = require("./v20150501preview");
exports.v20150501preview = v20150501preview;
const v20170301preview = require("./v20170301preview");
exports.v20170301preview = v20170301preview;
const v20171001preview = require("./v20171001preview");
exports.v20171001preview = v20171001preview;
const v20180601preview = require("./v20180601preview");
exports.v20180601preview = v20180601preview;
const v20190601preview = require("./v20190601preview");
exports.v20190601preview = v20190601preview;
const v20200202preview = require("./v20200202preview");
exports.v20200202preview = v20200202preview;
const v20200801preview = require("./v20200801preview");
exports.v20200801preview = v20200801preview;
const v20201101preview = require("./v20201101preview");
exports.v20201101preview = v20201101preview;
const v20210201preview = require("./v20210201preview");
exports.v20210201preview = v20210201preview;
exports.AdministratorType = {
    ActiveDirectory: "ActiveDirectory",
};
exports.AutoExecuteStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    Default: "Default",
};
exports.BlobAuditingPolicyState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.CatalogCollationType = {
    DATABASE_DEFAULT: "DATABASE_DEFAULT",
    SQL_Latin1_General_CP1_CI_AS: "SQL_Latin1_General_CP1_CI_AS",
};
exports.CreateMode = {
    Default: "Default",
    Copy: "Copy",
    Secondary: "Secondary",
    PointInTimeRestore: "PointInTimeRestore",
    Restore: "Restore",
    Recovery: "Recovery",
    RestoreExternalBackup: "RestoreExternalBackup",
    RestoreExternalBackupSecondary: "RestoreExternalBackupSecondary",
    RestoreLongTermRetentionBackup: "RestoreLongTermRetentionBackup",
    OnlineSecondary: "OnlineSecondary",
};
exports.DataMaskingState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.DatabaseLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.DatabaseReadScale = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ElasticPoolLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.GeoBackupPolicyState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.IdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
};
exports.InstancePoolLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.JobScheduleType = {
    Once: "Once",
    Recurring: "Recurring",
};
exports.JobStepActionSource = {
    Inline: "Inline",
};
exports.JobStepActionType = {
    TSql: "TSql",
};
exports.JobStepOutputType = {
    SqlDatabase: "SqlDatabase",
};
exports.JobTargetGroupMembershipType = {
    Include: "Include",
    Exclude: "Exclude",
};
exports.JobTargetType = {
    TargetGroup: "TargetGroup",
    SqlDatabase: "SqlDatabase",
    SqlElasticPool: "SqlElasticPool",
    SqlShardMap: "SqlShardMap",
    SqlServer: "SqlServer",
};
exports.ManagedDatabaseCreateMode = {
    Default: "Default",
    RestoreExternalBackup: "RestoreExternalBackup",
    PointInTimeRestore: "PointInTimeRestore",
    Recovery: "Recovery",
    RestoreLongTermRetentionBackup: "RestoreLongTermRetentionBackup",
};
exports.ManagedInstanceAdministratorType = {
    ActiveDirectory: "ActiveDirectory",
};
exports.ManagedInstanceLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.ManagedInstanceProxyOverride = {
    Proxy: "Proxy",
    Redirect: "Redirect",
    Default: "Default",
};
exports.ManagedServerCreateMode = {
    Default: "Default",
    PointInTimeRestore: "PointInTimeRestore",
};
exports.PrincipalType = {
    User: "User",
    Group: "Group",
    Application: "Application",
};
exports.PrivateLinkServiceConnectionStateStatus = {
    Approved: "Approved",
    Pending: "Pending",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
};
exports.ReadOnlyEndpointFailoverPolicy = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.ReadWriteEndpointFailoverPolicy = {
    Manual: "Manual",
    Automatic: "Automatic",
};
exports.RequestedBackupStorageRedundancy = {
    Geo: "Geo",
    Local: "Local",
    Zone: "Zone",
};
exports.SampleName = {
    AdventureWorksLT: "AdventureWorksLT",
    WideWorldImportersStd: "WideWorldImportersStd",
    WideWorldImportersFull: "WideWorldImportersFull",
};
exports.SecondaryType = {
    Geo: "Geo",
    Named: "Named",
};
exports.SecurityAlertsPolicyState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.SensitivityLabelRank = {
    None: "None",
    Low: "Low",
    Medium: "Medium",
    High: "High",
    Critical: "Critical",
};
exports.ServerKeyType = {
    ServiceManaged: "ServiceManaged",
    AzureKeyVault: "AzureKeyVault",
};
exports.ServerPublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.StorageAccountType = {
    GRS: "GRS",
    LRS: "LRS",
    ZRS: "ZRS",
};
exports.SyncConflictResolutionPolicy = {
    HubWin: "HubWin",
    MemberWin: "MemberWin",
};
exports.SyncDirection = {
    Bidirectional: "Bidirectional",
    OneWayMemberToHub: "OneWayMemberToHub",
    OneWayHubToMember: "OneWayHubToMember",
};
exports.SyncMemberDbType = {
    AzureSqlDatabase: "AzureSqlDatabase",
    SqlServerDatabase: "SqlServerDatabase",
};
exports.TransparentDataEncryptionStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
//# sourceMappingURL=index.js.map