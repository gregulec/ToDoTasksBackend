export declare const AdministratorType: {
    readonly ActiveDirectory: "ActiveDirectory";
};
/**
 * Type of the sever administrator.
 */
export declare type AdministratorType = (typeof AdministratorType)[keyof typeof AdministratorType];
export declare const CatalogCollationType: {
    readonly DATABASE_DEFAULT: "DATABASE_DEFAULT";
    readonly SQL_Latin1_General_CP1_CI_AS: "SQL_Latin1_General_CP1_CI_AS";
};
/**
 * Collation of the metadata catalog.
 */
export declare type CatalogCollationType = (typeof CatalogCollationType)[keyof typeof CatalogCollationType];
export declare const IdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
 */
export declare type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const InstancePoolLicenseType: {
    readonly LicenseIncluded: "LicenseIncluded";
    readonly BasePrice: "BasePrice";
};
/**
 * The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price).
 */
export declare type InstancePoolLicenseType = (typeof InstancePoolLicenseType)[keyof typeof InstancePoolLicenseType];
export declare const ManagedDatabaseCreateMode: {
    readonly Default: "Default";
    readonly RestoreExternalBackup: "RestoreExternalBackup";
    readonly PointInTimeRestore: "PointInTimeRestore";
    readonly Recovery: "Recovery";
    readonly RestoreLongTermRetentionBackup: "RestoreLongTermRetentionBackup";
};
/**
 * Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.
 */
export declare type ManagedDatabaseCreateMode = (typeof ManagedDatabaseCreateMode)[keyof typeof ManagedDatabaseCreateMode];
export declare const ManagedInstanceLicenseType: {
    readonly LicenseIncluded: "LicenseIncluded";
    readonly BasePrice: "BasePrice";
};
/**
 * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
 */
export declare type ManagedInstanceLicenseType = (typeof ManagedInstanceLicenseType)[keyof typeof ManagedInstanceLicenseType];
export declare const ManagedInstanceProxyOverride: {
    readonly Proxy: "Proxy";
    readonly Redirect: "Redirect";
    readonly Default: "Default";
};
/**
 * Connection type used for connecting to the instance.
 */
export declare type ManagedInstanceProxyOverride = (typeof ManagedInstanceProxyOverride)[keyof typeof ManagedInstanceProxyOverride];
export declare const ManagedServerCreateMode: {
    readonly Default: "Default";
    readonly PointInTimeRestore: "PointInTimeRestore";
};
/**
 * Specifies the mode of database creation.
 *
 * Default: Regular instance creation.
 *
 * Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.
 */
export declare type ManagedServerCreateMode = (typeof ManagedServerCreateMode)[keyof typeof ManagedServerCreateMode];
export declare const SecurityAlertPolicyState: {
    readonly New: "New";
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.
 */
export declare type SecurityAlertPolicyState = (typeof SecurityAlertPolicyState)[keyof typeof SecurityAlertPolicyState];
export declare const SensitivityLabelRank: {
    readonly None: "None";
    readonly Low: "Low";
    readonly Medium: "Medium";
    readonly High: "High";
    readonly Critical: "Critical";
};
export declare type SensitivityLabelRank = (typeof SensitivityLabelRank)[keyof typeof SensitivityLabelRank];
