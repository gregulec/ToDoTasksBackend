"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransparentDataEncryptionState = exports.SyncMemberDbType = exports.SyncDirection = exports.SyncConflictResolutionPolicy = exports.StorageAccountType = exports.ServerPublicNetworkAccess = exports.ServerKeyType = exports.SensitivityLabelRank = exports.SecurityAlertsPolicyState = exports.SecondaryType = exports.SampleName = exports.ReadWriteEndpointFailoverPolicy = exports.ReadOnlyEndpointFailoverPolicy = exports.PrivateLinkServiceConnectionStateStatus = exports.ManagedServerCreateMode = exports.ManagedInstanceProxyOverride = exports.ManagedInstanceLicenseType = exports.ManagedInstanceAdministratorType = exports.ManagedDatabaseCreateMode = exports.JobTargetType = exports.JobTargetGroupMembershipType = exports.JobStepOutputType = exports.JobStepActionType = exports.JobStepActionSource = exports.JobScheduleType = exports.InstancePoolLicenseType = exports.IdentityType = exports.ElasticPoolLicenseType = exports.DatabaseReadScale = exports.DatabaseLicenseType = exports.CreateMode = exports.CatalogCollationType = exports.BlobAuditingPolicyState = exports.AutoExecuteStatus = exports.AdministratorType = void 0;
exports.AdministratorType = {
    ActiveDirectory: "ActiveDirectory",
};
exports.AutoExecuteStatus = {
    Enabled: "Enabled",
    Disabled: "Disabled",
    Default: "Default",
};
exports.BlobAuditingPolicyState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.CatalogCollationType = {
    DATABASE_DEFAULT: "DATABASE_DEFAULT",
    SQL_Latin1_General_CP1_CI_AS: "SQL_Latin1_General_CP1_CI_AS",
};
exports.CreateMode = {
    Default: "Default",
    Copy: "Copy",
    Secondary: "Secondary",
    PointInTimeRestore: "PointInTimeRestore",
    Restore: "Restore",
    Recovery: "Recovery",
    RestoreExternalBackup: "RestoreExternalBackup",
    RestoreExternalBackupSecondary: "RestoreExternalBackupSecondary",
    RestoreLongTermRetentionBackup: "RestoreLongTermRetentionBackup",
    OnlineSecondary: "OnlineSecondary",
};
exports.DatabaseLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.DatabaseReadScale = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.ElasticPoolLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.IdentityType = {
    None: "None",
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
};
exports.InstancePoolLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.JobScheduleType = {
    Once: "Once",
    Recurring: "Recurring",
};
exports.JobStepActionSource = {
    Inline: "Inline",
};
exports.JobStepActionType = {
    TSql: "TSql",
};
exports.JobStepOutputType = {
    SqlDatabase: "SqlDatabase",
};
exports.JobTargetGroupMembershipType = {
    Include: "Include",
    Exclude: "Exclude",
};
exports.JobTargetType = {
    TargetGroup: "TargetGroup",
    SqlDatabase: "SqlDatabase",
    SqlElasticPool: "SqlElasticPool",
    SqlShardMap: "SqlShardMap",
    SqlServer: "SqlServer",
};
exports.ManagedDatabaseCreateMode = {
    Default: "Default",
    RestoreExternalBackup: "RestoreExternalBackup",
    PointInTimeRestore: "PointInTimeRestore",
    Recovery: "Recovery",
    RestoreLongTermRetentionBackup: "RestoreLongTermRetentionBackup",
};
exports.ManagedInstanceAdministratorType = {
    ActiveDirectory: "ActiveDirectory",
};
exports.ManagedInstanceLicenseType = {
    LicenseIncluded: "LicenseIncluded",
    BasePrice: "BasePrice",
};
exports.ManagedInstanceProxyOverride = {
    Proxy: "Proxy",
    Redirect: "Redirect",
    Default: "Default",
};
exports.ManagedServerCreateMode = {
    Default: "Default",
    PointInTimeRestore: "PointInTimeRestore",
};
exports.PrivateLinkServiceConnectionStateStatus = {
    Approved: "Approved",
    Pending: "Pending",
    Rejected: "Rejected",
    Disconnected: "Disconnected",
};
exports.ReadOnlyEndpointFailoverPolicy = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
exports.ReadWriteEndpointFailoverPolicy = {
    Manual: "Manual",
    Automatic: "Automatic",
};
exports.SampleName = {
    AdventureWorksLT: "AdventureWorksLT",
    WideWorldImportersStd: "WideWorldImportersStd",
    WideWorldImportersFull: "WideWorldImportersFull",
};
exports.SecondaryType = {
    Geo: "Geo",
    Named: "Named",
};
exports.SecurityAlertsPolicyState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.SensitivityLabelRank = {
    None: "None",
    Low: "Low",
    Medium: "Medium",
    High: "High",
    Critical: "Critical",
};
exports.ServerKeyType = {
    ServiceManaged: "ServiceManaged",
    AzureKeyVault: "AzureKeyVault",
};
exports.ServerPublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
exports.StorageAccountType = {
    GRS: "GRS",
    LRS: "LRS",
    ZRS: "ZRS",
};
exports.SyncConflictResolutionPolicy = {
    HubWin: "HubWin",
    MemberWin: "MemberWin",
};
exports.SyncDirection = {
    Bidirectional: "Bidirectional",
    OneWayMemberToHub: "OneWayMemberToHub",
    OneWayHubToMember: "OneWayHubToMember",
};
exports.SyncMemberDbType = {
    AzureSqlDatabase: "AzureSqlDatabase",
    SqlServerDatabase: "SqlServerDatabase",
};
exports.TransparentDataEncryptionState = {
    Enabled: "Enabled",
    Disabled: "Disabled",
};
//# sourceMappingURL=index.js.map