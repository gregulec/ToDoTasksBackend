export declare const AutoExecuteStatus: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
    readonly Default: "Default";
};
/**
 * Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'
 */
export declare type AutoExecuteStatus = (typeof AutoExecuteStatus)[keyof typeof AutoExecuteStatus];
export declare const BlobAuditingPolicyState: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
 */
export declare type BlobAuditingPolicyState = (typeof BlobAuditingPolicyState)[keyof typeof BlobAuditingPolicyState];
export declare const IdentityType: {
    readonly None: "None";
    readonly SystemAssigned: "SystemAssigned";
    readonly UserAssigned: "UserAssigned";
    readonly SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned";
};
/**
 * The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
 */
export declare type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const ManagedInstanceLicenseType: {
    readonly LicenseIncluded: "LicenseIncluded";
    readonly BasePrice: "BasePrice";
};
/**
 * The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses).
 */
export declare type ManagedInstanceLicenseType = (typeof ManagedInstanceLicenseType)[keyof typeof ManagedInstanceLicenseType];
export declare const ManagedInstanceProxyOverride: {
    readonly Proxy: "Proxy";
    readonly Redirect: "Redirect";
    readonly Default: "Default";
};
/**
 * Connection type used for connecting to the instance.
 */
export declare type ManagedInstanceProxyOverride = (typeof ManagedInstanceProxyOverride)[keyof typeof ManagedInstanceProxyOverride];
export declare const ManagedServerCreateMode: {
    readonly Default: "Default";
    readonly PointInTimeRestore: "PointInTimeRestore";
};
/**
 * Specifies the mode of database creation.
 *
 * Default: Regular instance creation.
 *
 * Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.
 */
export declare type ManagedServerCreateMode = (typeof ManagedServerCreateMode)[keyof typeof ManagedServerCreateMode];
export declare const ReadOnlyEndpointFailoverPolicy: {
    readonly Disabled: "Disabled";
    readonly Enabled: "Enabled";
};
/**
 * Failover policy of the read-only endpoint for the failover group.
 */
export declare type ReadOnlyEndpointFailoverPolicy = (typeof ReadOnlyEndpointFailoverPolicy)[keyof typeof ReadOnlyEndpointFailoverPolicy];
export declare const ReadWriteEndpointFailoverPolicy: {
    readonly Manual: "Manual";
    readonly Automatic: "Automatic";
};
/**
 * Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.
 */
export declare type ReadWriteEndpointFailoverPolicy = (typeof ReadWriteEndpointFailoverPolicy)[keyof typeof ReadWriteEndpointFailoverPolicy];
export declare const ServerKeyType: {
    readonly ServiceManaged: "ServiceManaged";
    readonly AzureKeyVault: "AzureKeyVault";
};
/**
 * The server key type like 'ServiceManaged', 'AzureKeyVault'.
 */
export declare type ServerKeyType = (typeof ServerKeyType)[keyof typeof ServerKeyType];
export declare const SyncConflictResolutionPolicy: {
    readonly HubWin: "HubWin";
    readonly MemberWin: "MemberWin";
};
/**
 * Conflict resolution policy of the sync group.
 */
export declare type SyncConflictResolutionPolicy = (typeof SyncConflictResolutionPolicy)[keyof typeof SyncConflictResolutionPolicy];
export declare const SyncDirection: {
    readonly Bidirectional: "Bidirectional";
    readonly OneWayMemberToHub: "OneWayMemberToHub";
    readonly OneWayHubToMember: "OneWayHubToMember";
};
/**
 * Sync direction of the sync member.
 */
export declare type SyncDirection = (typeof SyncDirection)[keyof typeof SyncDirection];
export declare const SyncMemberDbType: {
    readonly AzureSqlDatabase: "AzureSqlDatabase";
    readonly SqlServerDatabase: "SqlServerDatabase";
};
/**
 * Database type of the sync member.
 */
export declare type SyncMemberDbType = (typeof SyncMemberDbType)[keyof typeof SyncMemberDbType];
