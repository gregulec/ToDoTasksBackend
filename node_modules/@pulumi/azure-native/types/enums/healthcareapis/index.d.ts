import * as v20180820preview from "./v20180820preview";
import * as v20190916 from "./v20190916";
import * as v20200315 from "./v20200315";
import * as v20200330 from "./v20200330";
import * as v20210111 from "./v20210111";
import * as v20210601preview from "./v20210601preview";
export { v20180820preview, v20190916, v20200315, v20200330, v20210111, v20210601preview, };
export declare const FhirServiceKind: {
    readonly Fhir_Stu3: "fhir-Stu3";
    readonly Fhir_R4: "fhir-R4";
};
/**
 * The kind of the service.
 */
export declare type FhirServiceKind = (typeof FhirServiceKind)[keyof typeof FhirServiceKind];
export declare const IotIdentityResolutionType: {
    readonly Create: "Create";
    readonly Lookup: "Lookup";
};
/**
 * Determines how resource identity is resolved on the destination.
 */
export declare type IotIdentityResolutionType = (typeof IotIdentityResolutionType)[keyof typeof IotIdentityResolutionType];
export declare const Kind: {
    readonly Fhir: "fhir";
    readonly Fhir_Stu3: "fhir-Stu3";
    readonly Fhir_R4: "fhir-R4";
};
/**
 * The kind of the service.
 */
export declare type Kind = (typeof Kind)[keyof typeof Kind];
export declare const ManagedServiceIdentityType: {
    readonly SystemAssigned: "SystemAssigned";
    readonly None: "None";
};
/**
 * Type of identity being specified, currently SystemAssigned and None are allowed.
 */
export declare type ManagedServiceIdentityType = (typeof ManagedServiceIdentityType)[keyof typeof ManagedServiceIdentityType];
export declare const PrivateEndpointServiceConnectionStatus: {
    readonly Pending: "Pending";
    readonly Approved: "Approved";
    readonly Rejected: "Rejected";
};
/**
 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
 */
export declare type PrivateEndpointServiceConnectionStatus = (typeof PrivateEndpointServiceConnectionStatus)[keyof typeof PrivateEndpointServiceConnectionStatus];
export declare const PublicNetworkAccess: {
    readonly Enabled: "Enabled";
    readonly Disabled: "Disabled";
};
/**
 * Control permission for data plane traffic coming from public networks while private endpoint is enabled.
 */
export declare type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];
