import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Sku sub resource.
 * API Version: 2020-01-01-preview.
 */
export declare function getVendorSkus(args: GetVendorSkusArgs, opts?: pulumi.InvokeOptions): Promise<GetVendorSkusResult>;
export interface GetVendorSkusArgs {
    /**
     * The name of the sku.
     */
    skuName: string;
    /**
     * The name of the vendor.
     */
    vendorName: string;
}
/**
 * Sku sub resource.
 */
export interface GetVendorSkusResult {
    /**
     * The sku deployment mode.
     */
    readonly deploymentMode?: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The parameters for the managed application to be supplied by the vendor.
     */
    readonly managedApplicationParameters?: any;
    /**
     * The template for the managed application deployment.
     */
    readonly managedApplicationTemplate?: any;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The template definition of the network function.
     */
    readonly networkFunctionTemplate?: outputs.hybridnetwork.NetworkFunctionTemplateResponse;
    /**
     * Indicates if the vendor sku is in preview mode.
     */
    readonly preview?: boolean;
    /**
     * The provisioning state of the vendor sku sub resource.
     */
    readonly provisioningState: string;
    /**
     * The sku type.
     */
    readonly skuType?: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
