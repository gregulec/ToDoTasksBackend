import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * An elastic pool.
 */
export declare class ElasticPool extends pulumi.CustomResource {
    /**
     * Get an existing ElasticPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ElasticPool;
    /**
     * Returns true if the given object is an instance of ElasticPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ElasticPool;
    /**
     * The creation date of the elastic pool (ISO8601 format).
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * Kind of elastic pool. This is metadata used for the Azure portal experience.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The license type to apply for this elastic pool.
     */
    readonly licenseType: pulumi.Output<string | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur.
     */
    readonly maintenanceConfigurationId: pulumi.Output<string | undefined>;
    /**
     * The storage limit for the database elastic pool in bytes.
     */
    readonly maxSizeBytes: pulumi.Output<number | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The per database settings for the elastic pool.
     */
    readonly perDatabaseSettings: pulumi.Output<outputs.sql.v20201101preview.ElasticPoolPerDatabaseSettingsResponse | undefined>;
    /**
     * The elastic pool SKU.
     *
     * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
     *
     * ```azurecli
     * az sql elastic-pool list-editions -l <location> -o table
     * ````
     */
    readonly sku: pulumi.Output<outputs.sql.v20201101preview.SkuResponse | undefined>;
    /**
     * The state of the elastic pool.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.
     */
    readonly zoneRedundant: pulumi.Output<boolean | undefined>;
    /**
     * Create a ElasticPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ElasticPool resource.
 */
export interface ElasticPoolArgs {
    /**
     * The name of the elastic pool.
     */
    elasticPoolName?: pulumi.Input<string>;
    /**
     * The license type to apply for this elastic pool.
     */
    licenseType?: pulumi.Input<string | enums.sql.v20201101preview.ElasticPoolLicenseType>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur.
     */
    maintenanceConfigurationId?: pulumi.Input<string>;
    /**
     * The storage limit for the database elastic pool in bytes.
     */
    maxSizeBytes?: pulumi.Input<number>;
    /**
     * The per database settings for the elastic pool.
     */
    perDatabaseSettings?: pulumi.Input<inputs.sql.v20201101preview.ElasticPoolPerDatabaseSettingsArgs>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The elastic pool SKU.
     *
     * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or the following command:
     *
     * ```azurecli
     * az sql elastic-pool list-editions -l <location> -o table
     * ````
     */
    sku?: pulumi.Input<inputs.sql.v20201101preview.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.
     */
    zoneRedundant?: pulumi.Input<boolean>;
}
