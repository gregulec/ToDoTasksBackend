"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./backupShortTermRetentionPolicy"), exports);
__exportStar(require("./database"), exports);
__exportStar(require("./databaseAdvisor"), exports);
__exportStar(require("./databaseBlobAuditingPolicy"), exports);
__exportStar(require("./databaseSecurityAlertPolicy"), exports);
__exportStar(require("./databaseVulnerabilityAssessment"), exports);
__exportStar(require("./databaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./elasticPool"), exports);
__exportStar(require("./extendedDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./extendedServerBlobAuditingPolicy"), exports);
__exportStar(require("./failoverGroup"), exports);
__exportStar(require("./firewallRule"), exports);
__exportStar(require("./getBackupShortTermRetentionPolicy"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getDatabaseAdvisor"), exports);
__exportStar(require("./getDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./getDatabaseSecurityAlertPolicy"), exports);
__exportStar(require("./getDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./getDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./getElasticPool"), exports);
__exportStar(require("./getExtendedDatabaseBlobAuditingPolicy"), exports);
__exportStar(require("./getExtendedServerBlobAuditingPolicy"), exports);
__exportStar(require("./getFailoverGroup"), exports);
__exportStar(require("./getFirewallRule"), exports);
__exportStar(require("./getInstanceFailoverGroup"), exports);
__exportStar(require("./getInstancePool"), exports);
__exportStar(require("./getJob"), exports);
__exportStar(require("./getJobAgent"), exports);
__exportStar(require("./getJobCredential"), exports);
__exportStar(require("./getJobStep"), exports);
__exportStar(require("./getJobTargetGroup"), exports);
__exportStar(require("./getLongTermRetentionPolicy"), exports);
__exportStar(require("./getManagedDatabase"), exports);
__exportStar(require("./getManagedDatabaseSensitivityLabel"), exports);
__exportStar(require("./getManagedDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./getManagedDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./getManagedInstance"), exports);
__exportStar(require("./getManagedInstanceAdministrator"), exports);
__exportStar(require("./getManagedInstanceAzureADOnlyAuthentication"), exports);
__exportStar(require("./getManagedInstanceKey"), exports);
__exportStar(require("./getManagedInstancePrivateEndpointConnection"), exports);
__exportStar(require("./getManagedInstanceVulnerabilityAssessment"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getSensitivityLabel"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAdvisor"), exports);
__exportStar(require("./getServerAzureADAdministrator"), exports);
__exportStar(require("./getServerAzureADOnlyAuthentication"), exports);
__exportStar(require("./getServerBlobAuditingPolicy"), exports);
__exportStar(require("./getServerDnsAlias"), exports);
__exportStar(require("./getServerKey"), exports);
__exportStar(require("./getServerSecurityAlertPolicy"), exports);
__exportStar(require("./getServerTrustGroup"), exports);
__exportStar(require("./getServerVulnerabilityAssessment"), exports);
__exportStar(require("./getSyncAgent"), exports);
__exportStar(require("./getSyncGroup"), exports);
__exportStar(require("./getSyncMember"), exports);
__exportStar(require("./getTransparentDataEncryption"), exports);
__exportStar(require("./getVirtualNetworkRule"), exports);
__exportStar(require("./getWorkloadClassifier"), exports);
__exportStar(require("./getWorkloadGroup"), exports);
__exportStar(require("./instanceFailoverGroup"), exports);
__exportStar(require("./instancePool"), exports);
__exportStar(require("./job"), exports);
__exportStar(require("./jobAgent"), exports);
__exportStar(require("./jobCredential"), exports);
__exportStar(require("./jobStep"), exports);
__exportStar(require("./jobTargetGroup"), exports);
__exportStar(require("./longTermRetentionPolicy"), exports);
__exportStar(require("./managedDatabase"), exports);
__exportStar(require("./managedDatabaseSensitivityLabel"), exports);
__exportStar(require("./managedDatabaseVulnerabilityAssessment"), exports);
__exportStar(require("./managedDatabaseVulnerabilityAssessmentRuleBaseline"), exports);
__exportStar(require("./managedInstance"), exports);
__exportStar(require("./managedInstanceAdministrator"), exports);
__exportStar(require("./managedInstanceAzureADOnlyAuthentication"), exports);
__exportStar(require("./managedInstanceKey"), exports);
__exportStar(require("./managedInstancePrivateEndpointConnection"), exports);
__exportStar(require("./managedInstanceVulnerabilityAssessment"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./sensitivityLabel"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAdvisor"), exports);
__exportStar(require("./serverAzureADAdministrator"), exports);
__exportStar(require("./serverAzureADOnlyAuthentication"), exports);
__exportStar(require("./serverBlobAuditingPolicy"), exports);
__exportStar(require("./serverDnsAlias"), exports);
__exportStar(require("./serverKey"), exports);
__exportStar(require("./serverSecurityAlertPolicy"), exports);
__exportStar(require("./serverTrustGroup"), exports);
__exportStar(require("./serverVulnerabilityAssessment"), exports);
__exportStar(require("./syncAgent"), exports);
__exportStar(require("./syncGroup"), exports);
__exportStar(require("./syncMember"), exports);
__exportStar(require("./transparentDataEncryption"), exports);
__exportStar(require("./virtualNetworkRule"), exports);
__exportStar(require("./workloadClassifier"), exports);
__exportStar(require("./workloadGroup"), exports);
// Export enums:
__exportStar(require("../../types/enums/sql/v20201101preview"), exports);
// Import resources to register:
const backupShortTermRetentionPolicy_1 = require("./backupShortTermRetentionPolicy");
const database_1 = require("./database");
const databaseAdvisor_1 = require("./databaseAdvisor");
const databaseBlobAuditingPolicy_1 = require("./databaseBlobAuditingPolicy");
const databaseSecurityAlertPolicy_1 = require("./databaseSecurityAlertPolicy");
const databaseVulnerabilityAssessment_1 = require("./databaseVulnerabilityAssessment");
const databaseVulnerabilityAssessmentRuleBaseline_1 = require("./databaseVulnerabilityAssessmentRuleBaseline");
const elasticPool_1 = require("./elasticPool");
const extendedDatabaseBlobAuditingPolicy_1 = require("./extendedDatabaseBlobAuditingPolicy");
const extendedServerBlobAuditingPolicy_1 = require("./extendedServerBlobAuditingPolicy");
const failoverGroup_1 = require("./failoverGroup");
const firewallRule_1 = require("./firewallRule");
const instanceFailoverGroup_1 = require("./instanceFailoverGroup");
const instancePool_1 = require("./instancePool");
const job_1 = require("./job");
const jobAgent_1 = require("./jobAgent");
const jobCredential_1 = require("./jobCredential");
const jobStep_1 = require("./jobStep");
const jobTargetGroup_1 = require("./jobTargetGroup");
const longTermRetentionPolicy_1 = require("./longTermRetentionPolicy");
const managedDatabase_1 = require("./managedDatabase");
const managedDatabaseSensitivityLabel_1 = require("./managedDatabaseSensitivityLabel");
const managedDatabaseVulnerabilityAssessment_1 = require("./managedDatabaseVulnerabilityAssessment");
const managedDatabaseVulnerabilityAssessmentRuleBaseline_1 = require("./managedDatabaseVulnerabilityAssessmentRuleBaseline");
const managedInstance_1 = require("./managedInstance");
const managedInstanceAdministrator_1 = require("./managedInstanceAdministrator");
const managedInstanceAzureADOnlyAuthentication_1 = require("./managedInstanceAzureADOnlyAuthentication");
const managedInstanceKey_1 = require("./managedInstanceKey");
const managedInstancePrivateEndpointConnection_1 = require("./managedInstancePrivateEndpointConnection");
const managedInstanceVulnerabilityAssessment_1 = require("./managedInstanceVulnerabilityAssessment");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const sensitivityLabel_1 = require("./sensitivityLabel");
const server_1 = require("./server");
const serverAdvisor_1 = require("./serverAdvisor");
const serverAzureADAdministrator_1 = require("./serverAzureADAdministrator");
const serverAzureADOnlyAuthentication_1 = require("./serverAzureADOnlyAuthentication");
const serverBlobAuditingPolicy_1 = require("./serverBlobAuditingPolicy");
const serverDnsAlias_1 = require("./serverDnsAlias");
const serverKey_1 = require("./serverKey");
const serverSecurityAlertPolicy_1 = require("./serverSecurityAlertPolicy");
const serverTrustGroup_1 = require("./serverTrustGroup");
const serverVulnerabilityAssessment_1 = require("./serverVulnerabilityAssessment");
const syncAgent_1 = require("./syncAgent");
const syncGroup_1 = require("./syncGroup");
const syncMember_1 = require("./syncMember");
const transparentDataEncryption_1 = require("./transparentDataEncryption");
const virtualNetworkRule_1 = require("./virtualNetworkRule");
const workloadClassifier_1 = require("./workloadClassifier");
const workloadGroup_1 = require("./workloadGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:sql/v20201101preview:BackupShortTermRetentionPolicy":
                return new backupShortTermRetentionPolicy_1.BackupShortTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:DatabaseAdvisor":
                return new databaseAdvisor_1.DatabaseAdvisor(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:DatabaseBlobAuditingPolicy":
                return new databaseBlobAuditingPolicy_1.DatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:DatabaseSecurityAlertPolicy":
                return new databaseSecurityAlertPolicy_1.DatabaseSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessment":
                return new databaseVulnerabilityAssessment_1.DatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:DatabaseVulnerabilityAssessmentRuleBaseline":
                return new databaseVulnerabilityAssessmentRuleBaseline_1.DatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ElasticPool":
                return new elasticPool_1.ElasticPool(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ExtendedDatabaseBlobAuditingPolicy":
                return new extendedDatabaseBlobAuditingPolicy_1.ExtendedDatabaseBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ExtendedServerBlobAuditingPolicy":
                return new extendedServerBlobAuditingPolicy_1.ExtendedServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:FailoverGroup":
                return new failoverGroup_1.FailoverGroup(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:FirewallRule":
                return new firewallRule_1.FirewallRule(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:InstanceFailoverGroup":
                return new instanceFailoverGroup_1.InstanceFailoverGroup(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:InstancePool":
                return new instancePool_1.InstancePool(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:JobAgent":
                return new jobAgent_1.JobAgent(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:JobCredential":
                return new jobCredential_1.JobCredential(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:JobStep":
                return new jobStep_1.JobStep(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:JobTargetGroup":
                return new jobTargetGroup_1.JobTargetGroup(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:LongTermRetentionPolicy":
                return new longTermRetentionPolicy_1.LongTermRetentionPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedDatabase":
                return new managedDatabase_1.ManagedDatabase(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedDatabaseSensitivityLabel":
                return new managedDatabaseSensitivityLabel_1.ManagedDatabaseSensitivityLabel(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedDatabaseVulnerabilityAssessment":
                return new managedDatabaseVulnerabilityAssessment_1.ManagedDatabaseVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedDatabaseVulnerabilityAssessmentRuleBaseline":
                return new managedDatabaseVulnerabilityAssessmentRuleBaseline_1.ManagedDatabaseVulnerabilityAssessmentRuleBaseline(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstance":
                return new managedInstance_1.ManagedInstance(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstanceAdministrator":
                return new managedInstanceAdministrator_1.ManagedInstanceAdministrator(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstanceAzureADOnlyAuthentication":
                return new managedInstanceAzureADOnlyAuthentication_1.ManagedInstanceAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstanceKey":
                return new managedInstanceKey_1.ManagedInstanceKey(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstancePrivateEndpointConnection":
                return new managedInstancePrivateEndpointConnection_1.ManagedInstancePrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ManagedInstanceVulnerabilityAssessment":
                return new managedInstanceVulnerabilityAssessment_1.ManagedInstanceVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:SensitivityLabel":
                return new sensitivityLabel_1.SensitivityLabel(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerAdvisor":
                return new serverAdvisor_1.ServerAdvisor(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerAzureADAdministrator":
                return new serverAzureADAdministrator_1.ServerAzureADAdministrator(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerAzureADOnlyAuthentication":
                return new serverAzureADOnlyAuthentication_1.ServerAzureADOnlyAuthentication(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerBlobAuditingPolicy":
                return new serverBlobAuditingPolicy_1.ServerBlobAuditingPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerDnsAlias":
                return new serverDnsAlias_1.ServerDnsAlias(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerKey":
                return new serverKey_1.ServerKey(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerSecurityAlertPolicy":
                return new serverSecurityAlertPolicy_1.ServerSecurityAlertPolicy(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerTrustGroup":
                return new serverTrustGroup_1.ServerTrustGroup(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:ServerVulnerabilityAssessment":
                return new serverVulnerabilityAssessment_1.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:SyncAgent":
                return new syncAgent_1.SyncAgent(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:SyncGroup":
                return new syncGroup_1.SyncGroup(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:SyncMember":
                return new syncMember_1.SyncMember(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:TransparentDataEncryption":
                return new transparentDataEncryption_1.TransparentDataEncryption(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:VirtualNetworkRule":
                return new virtualNetworkRule_1.VirtualNetworkRule(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:WorkloadClassifier":
                return new workloadClassifier_1.WorkloadClassifier(name, undefined, { urn });
            case "azure-native:sql/v20201101preview:WorkloadGroup":
                return new workloadGroup_1.WorkloadGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20201101preview", _module);
//# sourceMappingURL=index.js.map