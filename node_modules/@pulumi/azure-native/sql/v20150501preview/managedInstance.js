"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagedInstance = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * An Azure SQL managed instance.
 */
class ManagedInstance extends pulumi.CustomResource {
    /**
     * Create a ManagedInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["administratorLogin"] = args ? args.administratorLogin : undefined;
            inputs["administratorLoginPassword"] = args ? args.administratorLoginPassword : undefined;
            inputs["collation"] = args ? args.collation : undefined;
            inputs["dnsZonePartner"] = args ? args.dnsZonePartner : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["instancePoolId"] = args ? args.instancePoolId : undefined;
            inputs["licenseType"] = args ? args.licenseType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["maintenanceConfigurationId"] = args ? args.maintenanceConfigurationId : undefined;
            inputs["managedInstanceCreateMode"] = args ? args.managedInstanceCreateMode : undefined;
            inputs["managedInstanceName"] = args ? args.managedInstanceName : undefined;
            inputs["minimalTlsVersion"] = args ? args.minimalTlsVersion : undefined;
            inputs["proxyOverride"] = args ? args.proxyOverride : undefined;
            inputs["publicDataEndpointEnabled"] = args ? args.publicDataEndpointEnabled : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["restorePointInTime"] = args ? args.restorePointInTime : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["sourceManagedInstanceId"] = args ? args.sourceManagedInstanceId : undefined;
            inputs["storageSizeInGB"] = args ? args.storageSizeInGB : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["timezoneId"] = args ? args.timezoneId : undefined;
            inputs["vCores"] = args ? args.vCores : undefined;
            inputs["dnsZone"] = undefined /*out*/;
            inputs["fullyQualifiedDomainName"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["administratorLogin"] = undefined /*out*/;
            inputs["collation"] = undefined /*out*/;
            inputs["dnsZone"] = undefined /*out*/;
            inputs["fullyQualifiedDomainName"] = undefined /*out*/;
            inputs["identity"] = undefined /*out*/;
            inputs["instancePoolId"] = undefined /*out*/;
            inputs["licenseType"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["maintenanceConfigurationId"] = undefined /*out*/;
            inputs["minimalTlsVersion"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["proxyOverride"] = undefined /*out*/;
            inputs["publicDataEndpointEnabled"] = undefined /*out*/;
            inputs["sku"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["storageSizeInGB"] = undefined /*out*/;
            inputs["subnetId"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["timezoneId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["vCores"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:sql/v20150501preview:ManagedInstance" }, { type: "azure-native:sql:ManagedInstance" }, { type: "azure-nextgen:sql:ManagedInstance" }, { type: "azure-native:sql/v20180601preview:ManagedInstance" }, { type: "azure-nextgen:sql/v20180601preview:ManagedInstance" }, { type: "azure-native:sql/v20200202preview:ManagedInstance" }, { type: "azure-nextgen:sql/v20200202preview:ManagedInstance" }, { type: "azure-native:sql/v20200801preview:ManagedInstance" }, { type: "azure-nextgen:sql/v20200801preview:ManagedInstance" }, { type: "azure-native:sql/v20201101preview:ManagedInstance" }, { type: "azure-nextgen:sql/v20201101preview:ManagedInstance" }, { type: "azure-native:sql/v20210201preview:ManagedInstance" }, { type: "azure-nextgen:sql/v20210201preview:ManagedInstance" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ManagedInstance.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ManagedInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ManagedInstance(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagedInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstance.__pulumiType;
    }
}
exports.ManagedInstance = ManagedInstance;
/** @internal */
ManagedInstance.__pulumiType = 'azure-native:sql/v20150501preview:ManagedInstance';
//# sourceMappingURL=managedInstance.js.map