"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./database"), exports);
__exportStar(require("./getDatabase"), exports);
__exportStar(require("./getManagedDatabase"), exports);
__exportStar(require("./getServer"), exports);
__exportStar(require("./getServerAzureADAdministrator"), exports);
__exportStar(require("./getSyncGroup"), exports);
__exportStar(require("./getSyncMember"), exports);
__exportStar(require("./getWorkloadClassifier"), exports);
__exportStar(require("./getWorkloadGroup"), exports);
__exportStar(require("./managedDatabase"), exports);
__exportStar(require("./server"), exports);
__exportStar(require("./serverAzureADAdministrator"), exports);
__exportStar(require("./syncGroup"), exports);
__exportStar(require("./syncMember"), exports);
__exportStar(require("./workloadClassifier"), exports);
__exportStar(require("./workloadGroup"), exports);
// Export enums:
__exportStar(require("../../types/enums/sql/v20190601preview"), exports);
// Import resources to register:
const database_1 = require("./database");
const managedDatabase_1 = require("./managedDatabase");
const server_1 = require("./server");
const serverAzureADAdministrator_1 = require("./serverAzureADAdministrator");
const syncGroup_1 = require("./syncGroup");
const syncMember_1 = require("./syncMember");
const workloadClassifier_1 = require("./workloadClassifier");
const workloadGroup_1 = require("./workloadGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:sql/v20190601preview:Database":
                return new database_1.Database(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:ManagedDatabase":
                return new managedDatabase_1.ManagedDatabase(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:Server":
                return new server_1.Server(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:ServerAzureADAdministrator":
                return new serverAzureADAdministrator_1.ServerAzureADAdministrator(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:SyncGroup":
                return new syncGroup_1.SyncGroup(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:SyncMember":
                return new syncMember_1.SyncMember(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:WorkloadClassifier":
                return new workloadClassifier_1.WorkloadClassifier(name, undefined, { urn });
            case "azure-native:sql/v20190601preview:WorkloadGroup":
                return new workloadGroup_1.WorkloadGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "sql/v20190601preview", _module);
//# sourceMappingURL=index.js.map