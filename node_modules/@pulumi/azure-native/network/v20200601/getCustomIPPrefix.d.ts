import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Custom IP prefix resource.
 */
export declare function getCustomIPPrefix(args: GetCustomIPPrefixArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomIPPrefixResult>;
export interface GetCustomIPPrefixArgs {
    /**
     * The name of the custom IP prefix.
     */
    customIpPrefixName: string;
    /**
     * Expands referenced resources.
     */
    expand?: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Custom IP prefix resource.
 */
export interface GetCustomIPPrefixResult {
    /**
     * The prefix range in CIDR notation. Should include the start address and the prefix length.
     */
    readonly cidr?: string;
    /**
     * The commissioned state of the Custom IP Prefix.
     */
    readonly commissionedState?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Resource ID.
     */
    readonly id?: string;
    /**
     * Resource location.
     */
    readonly location?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The provisioning state of the custom IP prefix resource.
     */
    readonly provisioningState: string;
    /**
     * The list of all referenced PublicIpPrefixes.
     */
    readonly publicIpPrefixes: outputs.network.v20200601.SubResourceResponse[];
    /**
     * The resource GUID property of the custom IP prefix resource.
     */
    readonly resourceGuid: string;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * A list of availability zones denoting the IP allocated for the resource needs to come from.
     */
    readonly zones?: string[];
}
