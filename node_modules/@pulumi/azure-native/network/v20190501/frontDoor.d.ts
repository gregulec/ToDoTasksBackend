import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.
 */
export declare class FrontDoor extends pulumi.CustomResource {
    /**
     * Get an existing FrontDoor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FrontDoor;
    /**
     * Returns true if the given object is an instance of FrontDoor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FrontDoor;
    /**
     * Backend pools available to routing rules.
     */
    readonly backendPools: pulumi.Output<outputs.network.v20190501.BackendPoolResponse[] | undefined>;
    /**
     * Settings for all backendPools
     */
    readonly backendPoolsSettings: pulumi.Output<outputs.network.v20190501.BackendPoolsSettingsResponse | undefined>;
    /**
     * The host that each frontendEndpoint must CNAME to.
     */
    readonly cname: pulumi.Output<string>;
    /**
     * Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
     */
    readonly enabledState: pulumi.Output<string | undefined>;
    /**
     * A friendly name for the frontDoor
     */
    readonly friendlyName: pulumi.Output<string | undefined>;
    /**
     * Frontend endpoints available to routing rules.
     */
    readonly frontendEndpoints: pulumi.Output<outputs.network.v20190501.FrontendEndpointResponse[] | undefined>;
    /**
     * Health probe settings associated with this Front Door instance.
     */
    readonly healthProbeSettings: pulumi.Output<outputs.network.v20190501.HealthProbeSettingsModelResponse[] | undefined>;
    /**
     * Load balancing settings associated with this Front Door instance.
     */
    readonly loadBalancingSettings: pulumi.Output<outputs.network.v20190501.LoadBalancingSettingsModelResponse[] | undefined>;
    /**
     * Resource location.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * Resource name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the Front Door.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * Resource status of the Front Door.
     */
    readonly resourceState: pulumi.Output<string>;
    /**
     * Routing rules associated with this Front Door.
     */
    readonly routingRules: pulumi.Output<outputs.network.v20190501.RoutingRuleResponse[] | undefined>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a FrontDoor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrontDoorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FrontDoor resource.
 */
export interface FrontDoorArgs {
    /**
     * Backend pools available to routing rules.
     */
    backendPools?: pulumi.Input<pulumi.Input<inputs.network.v20190501.BackendPoolArgs>[]>;
    /**
     * Settings for all backendPools
     */
    backendPoolsSettings?: pulumi.Input<inputs.network.v20190501.BackendPoolsSettingsArgs>;
    /**
     * Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
     */
    enabledState?: pulumi.Input<string | enums.network.v20190501.FrontDoorEnabledState>;
    /**
     * A friendly name for the frontDoor
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Name of the Front Door which is globally unique.
     */
    frontDoorName?: pulumi.Input<string>;
    /**
     * Frontend endpoints available to routing rules.
     */
    frontendEndpoints?: pulumi.Input<pulumi.Input<inputs.network.v20190501.FrontendEndpointArgs>[]>;
    /**
     * Health probe settings associated with this Front Door instance.
     */
    healthProbeSettings?: pulumi.Input<pulumi.Input<inputs.network.v20190501.HealthProbeSettingsModelArgs>[]>;
    /**
     * Load balancing settings associated with this Front Door instance.
     */
    loadBalancingSettings?: pulumi.Input<pulumi.Input<inputs.network.v20190501.LoadBalancingSettingsModelArgs>[]>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the Resource group within the Azure subscription.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Routing rules associated with this Front Door.
     */
    routingRules?: pulumi.Input<pulumi.Input<inputs.network.v20190501.RoutingRuleArgs>[]>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
