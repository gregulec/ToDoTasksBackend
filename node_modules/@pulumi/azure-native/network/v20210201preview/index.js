"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./adminRule"), exports);
__exportStar(require("./adminRuleCollection"), exports);
__exportStar(require("./connectivityConfiguration"), exports);
__exportStar(require("./defaultAdminRule"), exports);
__exportStar(require("./defaultUserRule"), exports);
__exportStar(require("./getAdminRule"), exports);
__exportStar(require("./getAdminRuleCollection"), exports);
__exportStar(require("./getConnectivityConfiguration"), exports);
__exportStar(require("./getDefaultAdminRule"), exports);
__exportStar(require("./getDefaultUserRule"), exports);
__exportStar(require("./getNetworkGroup"), exports);
__exportStar(require("./getNetworkManager"), exports);
__exportStar(require("./getNetworkSecurityPerimeter"), exports);
__exportStar(require("./getSecurityAdminConfiguration"), exports);
__exportStar(require("./getSecurityUserConfiguration"), exports);
__exportStar(require("./getUserRule"), exports);
__exportStar(require("./getUserRuleCollection"), exports);
__exportStar(require("./listActiveConnectivityConfiguration"), exports);
__exportStar(require("./listActiveSecurityAdminRule"), exports);
__exportStar(require("./listActiveSecurityUserRule"), exports);
__exportStar(require("./listEffectiveConnectivityConfiguration"), exports);
__exportStar(require("./listEffectiveVirtualNetworkByNetworkGroup"), exports);
__exportStar(require("./listEffectiveVirtualNetworkByNetworkManager"), exports);
__exportStar(require("./listNetworkManagerDeploymentStatus"), exports);
__exportStar(require("./listNetworkManagerEffectiveSecurityAdminRule"), exports);
__exportStar(require("./networkGroup"), exports);
__exportStar(require("./networkManager"), exports);
__exportStar(require("./networkSecurityPerimeter"), exports);
__exportStar(require("./securityAdminConfiguration"), exports);
__exportStar(require("./securityUserConfiguration"), exports);
__exportStar(require("./userRule"), exports);
__exportStar(require("./userRuleCollection"), exports);
// Export enums:
__exportStar(require("../../types/enums/network/v20210201preview"), exports);
// Import resources to register:
const adminRule_1 = require("./adminRule");
const adminRuleCollection_1 = require("./adminRuleCollection");
const connectivityConfiguration_1 = require("./connectivityConfiguration");
const defaultAdminRule_1 = require("./defaultAdminRule");
const defaultUserRule_1 = require("./defaultUserRule");
const networkGroup_1 = require("./networkGroup");
const networkManager_1 = require("./networkManager");
const networkSecurityPerimeter_1 = require("./networkSecurityPerimeter");
const securityAdminConfiguration_1 = require("./securityAdminConfiguration");
const securityUserConfiguration_1 = require("./securityUserConfiguration");
const userRule_1 = require("./userRule");
const userRuleCollection_1 = require("./userRuleCollection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:network/v20210201preview:AdminRule":
                return new adminRule_1.AdminRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:AdminRuleCollection":
                return new adminRuleCollection_1.AdminRuleCollection(name, undefined, { urn });
            case "azure-native:network/v20210201preview:ConnectivityConfiguration":
                return new connectivityConfiguration_1.ConnectivityConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:DefaultAdminRule":
                return new defaultAdminRule_1.DefaultAdminRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:DefaultUserRule":
                return new defaultUserRule_1.DefaultUserRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkGroup":
                return new networkGroup_1.NetworkGroup(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkManager":
                return new networkManager_1.NetworkManager(name, undefined, { urn });
            case "azure-native:network/v20210201preview:NetworkSecurityPerimeter":
                return new networkSecurityPerimeter_1.NetworkSecurityPerimeter(name, undefined, { urn });
            case "azure-native:network/v20210201preview:SecurityAdminConfiguration":
                return new securityAdminConfiguration_1.SecurityAdminConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:SecurityUserConfiguration":
                return new securityUserConfiguration_1.SecurityUserConfiguration(name, undefined, { urn });
            case "azure-native:network/v20210201preview:UserRule":
                return new userRule_1.UserRule(name, undefined, { urn });
            case "azure-native:network/v20210201preview:UserRuleCollection":
                return new userRuleCollection_1.UserRuleCollection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "network/v20210201preview", _module);
//# sourceMappingURL=index.js.map