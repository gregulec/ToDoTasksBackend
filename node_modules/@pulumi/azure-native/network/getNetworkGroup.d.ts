import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * The network group resource
 * API Version: 2021-02-01-preview.
 */
export declare function getNetworkGroup(args: GetNetworkGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkGroupResult>;
export interface GetNetworkGroupArgs {
    /**
     * The name of the network group to get.
     */
    networkGroupName: string;
    /**
     * The name of the network manager.
     */
    networkManagerName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The network group resource
 */
export interface GetNetworkGroupResult {
    /**
     * Network group conditional filter.
     */
    readonly conditionalMembership?: string;
    /**
     * A description of the network group.
     */
    readonly description?: string;
    /**
     * A friendly name for the network group.
     */
    readonly displayName?: string;
    /**
     * A unique read-only string that changes whenever the resource is updated.
     */
    readonly etag: string;
    /**
     * Group members of network group.
     */
    readonly groupMembers?: outputs.network.GroupMembersItemResponse[];
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Group member type.
     */
    readonly memberType?: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The provisioning state of the scope assignment resource.
     */
    readonly provisioningState: string;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: outputs.network.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
