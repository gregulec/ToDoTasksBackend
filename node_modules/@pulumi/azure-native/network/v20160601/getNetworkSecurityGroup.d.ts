import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * NetworkSecurityGroup resource
 */
export declare function getNetworkSecurityGroup(args: GetNetworkSecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkSecurityGroupResult>;
export interface GetNetworkSecurityGroupArgs {
    /**
     * expand references resources.
     */
    expand?: string;
    /**
     * The name of the network security group.
     */
    networkSecurityGroupName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * NetworkSecurityGroup resource
 */
export interface GetNetworkSecurityGroupResult {
    /**
     * Gets or default security rules of network security group
     */
    readonly defaultSecurityRules?: outputs.network.v20160601.SecurityRuleResponse[];
    /**
     * Gets a unique read-only string that changes whenever the resource is updated
     */
    readonly etag?: string;
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Resource location
     */
    readonly location?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Gets collection of references to Network Interfaces
     */
    readonly networkInterfaces: outputs.network.v20160601.NetworkInterfaceResponse[];
    /**
     * Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
     */
    readonly provisioningState?: string;
    /**
     * Gets or sets resource guid property of the network security group resource
     */
    readonly resourceGuid?: string;
    /**
     * Gets or sets security rules of network security group
     */
    readonly securityRules?: outputs.network.v20160601.SecurityRuleResponse[];
    /**
     * Gets collection of references to subnets
     */
    readonly subnets: outputs.network.v20160601.SubnetResponse[];
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
