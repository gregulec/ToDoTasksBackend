import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Virtual Network resource
 */
export declare function getVirtualNetwork(args: GetVirtualNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualNetworkResult>;
export interface GetVirtualNetworkArgs {
    /**
     * expand references resources.
     */
    expand?: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the virtual network.
     */
    virtualNetworkName: string;
}
/**
 * Virtual Network resource
 */
export interface GetVirtualNetworkResult {
    /**
     * Gets or sets AddressSpace that contains an array of IP address ranges that can be used by subnets
     */
    readonly addressSpace?: outputs.network.v20160330.AddressSpaceResponse;
    /**
     * Gets or sets DHCPOptions that contains an array of DNS servers available to VMs deployed in the virtual network
     */
    readonly dhcpOptions?: outputs.network.v20160330.DhcpOptionsResponse;
    /**
     * Gets a unique read-only string that changes whenever the resource is updated
     */
    readonly etag?: string;
    /**
     * Resource Id
     */
    readonly id?: string;
    /**
     * Resource location
     */
    readonly location?: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
     */
    readonly provisioningState?: string;
    /**
     * Gets or sets resource GUID property of the VirtualNetwork resource
     */
    readonly resourceGuid?: string;
    /**
     * Gets or sets List of subnets in a VirtualNetwork
     */
    readonly subnets?: outputs.network.v20160330.SubnetResponse[];
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
