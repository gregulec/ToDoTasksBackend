import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * PublicIPAddress resource
 */
export declare function getPublicIpAddress(args: GetPublicIpAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicIpAddressResult>;
export interface GetPublicIpAddressArgs {
    /**
     * The name of the subnet.
     */
    publicIpAddressName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * PublicIPAddress resource
 */
export interface GetPublicIpAddressResult {
    /**
     * Gets or sets FQDN of the DNS record associated with the public IP address
     */
    readonly dnsSettings?: outputs.network.v20150501preview.PublicIpAddressDnsSettingsResponse;
    /**
     * Gets a unique read-only string that changes whenever the resource is updated
     */
    readonly etag?: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Gets or sets the idle timeout of the public IP address
     */
    readonly idleTimeoutInMinutes?: number;
    /**
     * Gets the assigned public IP address
     */
    readonly ipAddress?: string;
    /**
     * Gets a reference to the network interface IP configurations using this public IP address
     */
    readonly ipConfiguration?: outputs.network.v20150501preview.SubResourceResponse;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Gets or sets Provisioning state of the PublicIP resource Updating/Deleting/Failed
     */
    readonly provisioningState?: string;
    /**
     * Gets or sets PublicIP allocation method (Static/Dynamic)
     */
    readonly publicIPAllocationMethod: string;
    /**
     * Gets or sets resource guid property of the PublicIP resource
     */
    readonly resourceGuid?: string;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
