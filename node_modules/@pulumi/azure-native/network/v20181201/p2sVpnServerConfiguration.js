"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.P2sVpnServerConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * P2SVpnServerConfiguration Resource.
 */
class P2sVpnServerConfiguration extends pulumi.CustomResource {
    /**
     * Create a P2sVpnServerConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.virtualWanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualWanName'");
            }
            inputs["etag"] = args ? args.etag : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["p2SVpnServerConfigRadiusClientRootCertificates"] = args ? args.p2SVpnServerConfigRadiusClientRootCertificates : undefined;
            inputs["p2SVpnServerConfigRadiusServerRootCertificates"] = args ? args.p2SVpnServerConfigRadiusServerRootCertificates : undefined;
            inputs["p2SVpnServerConfigVpnClientRevokedCertificates"] = args ? args.p2SVpnServerConfigVpnClientRevokedCertificates : undefined;
            inputs["p2SVpnServerConfigVpnClientRootCertificates"] = args ? args.p2SVpnServerConfigVpnClientRootCertificates : undefined;
            inputs["p2SVpnServerConfigurationName"] = args ? args.p2SVpnServerConfigurationName : undefined;
            inputs["radiusServerAddress"] = args ? args.radiusServerAddress : undefined;
            inputs["radiusServerSecret"] = args ? args.radiusServerSecret : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["virtualWanName"] = args ? args.virtualWanName : undefined;
            inputs["vpnClientIpsecPolicies"] = args ? args.vpnClientIpsecPolicies : undefined;
            inputs["vpnProtocols"] = args ? args.vpnProtocols : undefined;
            inputs["p2SVpnGateways"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
        }
        else {
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["p2SVpnGateways"] = undefined /*out*/;
            inputs["p2SVpnServerConfigRadiusClientRootCertificates"] = undefined /*out*/;
            inputs["p2SVpnServerConfigRadiusServerRootCertificates"] = undefined /*out*/;
            inputs["p2SVpnServerConfigVpnClientRevokedCertificates"] = undefined /*out*/;
            inputs["p2SVpnServerConfigVpnClientRootCertificates"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["radiusServerAddress"] = undefined /*out*/;
            inputs["radiusServerSecret"] = undefined /*out*/;
            inputs["vpnClientIpsecPolicies"] = undefined /*out*/;
            inputs["vpnProtocols"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:network/v20181201:P2sVpnServerConfiguration" }, { type: "azure-native:network:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20180801:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20180801:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20181001:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20181001:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20181101:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20181101:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20190201:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20190201:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20190401:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20190401:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20190601:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20190601:P2sVpnServerConfiguration" }, { type: "azure-native:network/v20190701:P2sVpnServerConfiguration" }, { type: "azure-nextgen:network/v20190701:P2sVpnServerConfiguration" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(P2sVpnServerConfiguration.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing P2sVpnServerConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new P2sVpnServerConfiguration(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of P2sVpnServerConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === P2sVpnServerConfiguration.__pulumiType;
    }
}
exports.P2sVpnServerConfiguration = P2sVpnServerConfiguration;
/** @internal */
P2sVpnServerConfiguration.__pulumiType = 'azure-native:network/v20181201:P2sVpnServerConfiguration';
//# sourceMappingURL=p2sVpnServerConfiguration.js.map