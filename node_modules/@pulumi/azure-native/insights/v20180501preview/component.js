"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Component = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * An Application Insights component definition.
 */
class Component extends pulumi.CustomResource {
    /**
     * Create a Component resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        var _a, _b, _c, _d, _e;
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.applicationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationType'");
            }
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["applicationType"] = (_a = (args ? args.applicationType : undefined)) !== null && _a !== void 0 ? _a : "web";
            inputs["disableIpMasking"] = args ? args.disableIpMasking : undefined;
            inputs["flowType"] = (_b = (args ? args.flowType : undefined)) !== null && _b !== void 0 ? _b : "Bluefield";
            inputs["hockeyAppId"] = args ? args.hockeyAppId : undefined;
            inputs["immediatePurgeDataOn30Days"] = args ? args.immediatePurgeDataOn30Days : undefined;
            inputs["ingestionMode"] = (_c = (args ? args.ingestionMode : undefined)) !== null && _c !== void 0 ? _c : "ApplicationInsights";
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["publicNetworkAccessForIngestion"] = args ? args.publicNetworkAccessForIngestion : undefined;
            inputs["publicNetworkAccessForQuery"] = args ? args.publicNetworkAccessForQuery : undefined;
            inputs["requestSource"] = (_d = (args ? args.requestSource : undefined)) !== null && _d !== void 0 ? _d : "rest";
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["retentionInDays"] = (_e = (args ? args.retentionInDays : undefined)) !== null && _e !== void 0 ? _e : 90;
            inputs["samplingPercentage"] = args ? args.samplingPercentage : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["appId"] = undefined /*out*/;
            inputs["applicationId"] = undefined /*out*/;
            inputs["connectionString"] = undefined /*out*/;
            inputs["creationDate"] = undefined /*out*/;
            inputs["hockeyAppToken"] = undefined /*out*/;
            inputs["instrumentationKey"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["privateLinkScopedResources"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["appId"] = undefined /*out*/;
            inputs["applicationId"] = undefined /*out*/;
            inputs["applicationType"] = undefined /*out*/;
            inputs["connectionString"] = undefined /*out*/;
            inputs["creationDate"] = undefined /*out*/;
            inputs["disableIpMasking"] = undefined /*out*/;
            inputs["flowType"] = undefined /*out*/;
            inputs["hockeyAppId"] = undefined /*out*/;
            inputs["hockeyAppToken"] = undefined /*out*/;
            inputs["immediatePurgeDataOn30Days"] = undefined /*out*/;
            inputs["ingestionMode"] = undefined /*out*/;
            inputs["instrumentationKey"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["privateLinkScopedResources"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["publicNetworkAccessForIngestion"] = undefined /*out*/;
            inputs["publicNetworkAccessForQuery"] = undefined /*out*/;
            inputs["requestSource"] = undefined /*out*/;
            inputs["retentionInDays"] = undefined /*out*/;
            inputs["samplingPercentage"] = undefined /*out*/;
            inputs["tags"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:insights/v20180501preview:Component" }, { type: "azure-native:insights:Component" }, { type: "azure-nextgen:insights:Component" }, { type: "azure-native:insights/v20150501:Component" }, { type: "azure-nextgen:insights/v20150501:Component" }, { type: "azure-native:insights/v20200202:Component" }, { type: "azure-nextgen:insights/v20200202:Component" }, { type: "azure-native:insights/v20200202preview:Component" }, { type: "azure-nextgen:insights/v20200202preview:Component" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Component.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Component resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Component(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Component.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Component.__pulumiType;
    }
}
exports.Component = Component;
/** @internal */
Component.__pulumiType = 'azure-native:insights/v20180501preview:Component';
//# sourceMappingURL=component.js.map