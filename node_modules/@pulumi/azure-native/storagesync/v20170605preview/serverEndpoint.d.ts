import * as pulumi from "@pulumi/pulumi";
/**
 * Server Endpoint object.
 */
export declare class ServerEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ServerEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServerEndpoint;
    /**
     * Returns true if the given object is an instance of ServerEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServerEndpoint;
    /**
     * Bytes in progress
     */
    readonly byteProgress: pulumi.Output<number | undefined>;
    /**
     * Bytes total
     */
    readonly byteTotal: pulumi.Output<number | undefined>;
    /**
     * Cloud Tiering.
     */
    readonly cloudTiering: pulumi.Output<string | undefined>;
    /**
     * current progress type.
     */
    readonly currentProgressType: pulumi.Output<string | undefined>;
    /**
     * Friendly Name
     */
    readonly friendlyName: pulumi.Output<string | undefined>;
    /**
     * Item download error count.
     */
    readonly itemDownloadErrorCount: pulumi.Output<number | undefined>;
    /**
     * Item Progress Count
     */
    readonly itemProgressCount: pulumi.Output<number | undefined>;
    /**
     * Item Total Count
     */
    readonly itemTotalCount: pulumi.Output<number | undefined>;
    /**
     * Item Upload Error Count.
     */
    readonly itemUploadErrorCount: pulumi.Output<number | undefined>;
    /**
     * Last Sync Success
     */
    readonly lastSyncSuccess: pulumi.Output<string | undefined>;
    /**
     * ServerEndpoint lastWorkflowId
     */
    readonly lastWorkflowId: pulumi.Output<string | undefined>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * ServerEndpoint Provisioning State
     */
    readonly provisioningState: pulumi.Output<string | undefined>;
    /**
     * Server Local path.
     */
    readonly serverLocalPath: pulumi.Output<string | undefined>;
    /**
     * Server Resource Id.
     */
    readonly serverResourceId: pulumi.Output<string | undefined>;
    /**
     * sync error context.
     */
    readonly syncErrorContext: pulumi.Output<string | undefined>;
    /**
     * Sync Error Direction.
     */
    readonly syncErrorDirection: pulumi.Output<string | undefined>;
    /**
     * Sync Error State
     */
    readonly syncErrorState: pulumi.Output<string | undefined>;
    /**
     * Sync Error State Timestamp
     */
    readonly syncErrorStateTimestamp: pulumi.Output<string | undefined>;
    /**
     * Total progress
     */
    readonly totalProgress: pulumi.Output<number | undefined>;
    /**
     * The type of the resource
     */
    readonly type: pulumi.Output<string>;
    /**
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    readonly volumeFreeSpacePercent: pulumi.Output<number | undefined>;
    /**
     * Create a ServerEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ServerEndpoint resource.
 */
export interface ServerEndpointArgs {
    /**
     * Bytes in progress
     */
    byteProgress?: pulumi.Input<number>;
    /**
     * Bytes total
     */
    byteTotal?: pulumi.Input<number>;
    /**
     * Cloud Tiering.
     */
    cloudTiering?: pulumi.Input<string>;
    /**
     * current progress type.
     */
    currentProgressType?: pulumi.Input<string>;
    /**
     * Friendly Name
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Item download error count.
     */
    itemDownloadErrorCount?: pulumi.Input<number>;
    /**
     * Item Progress Count
     */
    itemProgressCount?: pulumi.Input<number>;
    /**
     * Item Total Count
     */
    itemTotalCount?: pulumi.Input<number>;
    /**
     * Item Upload Error Count.
     */
    itemUploadErrorCount?: pulumi.Input<number>;
    /**
     * Last Sync Success
     */
    lastSyncSuccess?: pulumi.Input<string>;
    /**
     * ServerEndpoint lastWorkflowId
     */
    lastWorkflowId?: pulumi.Input<string>;
    /**
     * ServerEndpoint Provisioning State
     */
    provisioningState?: pulumi.Input<string>;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of Server Endpoint object.
     */
    serverEndpointName?: pulumi.Input<string>;
    /**
     * Server Local path.
     */
    serverLocalPath?: pulumi.Input<string>;
    /**
     * Server Resource Id.
     */
    serverResourceId?: pulumi.Input<string>;
    /**
     * Name of Storage Sync Service resource.
     */
    storageSyncServiceName: pulumi.Input<string>;
    /**
     * sync error context.
     */
    syncErrorContext?: pulumi.Input<string>;
    /**
     * Sync Error Direction.
     */
    syncErrorDirection?: pulumi.Input<string>;
    /**
     * Sync Error State
     */
    syncErrorState?: pulumi.Input<string>;
    /**
     * Sync Error State Timestamp
     */
    syncErrorStateTimestamp?: pulumi.Input<string>;
    /**
     * Name of Sync Group resource.
     */
    syncGroupName: pulumi.Input<string>;
    /**
     * Total progress
     */
    totalProgress?: pulumi.Input<number>;
    /**
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    volumeFreeSpacePercent?: pulumi.Input<number>;
}
