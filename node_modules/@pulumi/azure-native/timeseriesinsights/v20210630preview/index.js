"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./accessPolicy"), exports);
__exportStar(require("./environment"), exports);
__exportStar(require("./eventHubEventSource"), exports);
__exportStar(require("./eventSource"), exports);
__exportStar(require("./gen1Environment"), exports);
__exportStar(require("./gen2Environment"), exports);
__exportStar(require("./getAccessPolicy"), exports);
__exportStar(require("./getEnvironment"), exports);
__exportStar(require("./getEventHubEventSource"), exports);
__exportStar(require("./getEventSource"), exports);
__exportStar(require("./getGen1Environment"), exports);
__exportStar(require("./getGen2Environment"), exports);
__exportStar(require("./getIoTHubEventSource"), exports);
__exportStar(require("./getReferenceDataSet"), exports);
__exportStar(require("./ioTHubEventSource"), exports);
__exportStar(require("./referenceDataSet"), exports);
// Export enums:
__exportStar(require("../../types/enums/timeseriesinsights/v20210630preview"), exports);
// Import resources to register:
const accessPolicy_1 = require("./accessPolicy");
const environment_1 = require("./environment");
const eventHubEventSource_1 = require("./eventHubEventSource");
const eventSource_1 = require("./eventSource");
const gen1Environment_1 = require("./gen1Environment");
const gen2Environment_1 = require("./gen2Environment");
const ioTHubEventSource_1 = require("./ioTHubEventSource");
const referenceDataSet_1 = require("./referenceDataSet");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:timeseriesinsights/v20210630preview:AccessPolicy":
                return new accessPolicy_1.AccessPolicy(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:Environment":
                return new environment_1.Environment(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:EventHubEventSource":
                return new eventHubEventSource_1.EventHubEventSource(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:EventSource":
                return new eventSource_1.EventSource(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:Gen1Environment":
                return new gen1Environment_1.Gen1Environment(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:Gen2Environment":
                return new gen2Environment_1.Gen2Environment(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:IoTHubEventSource":
                return new ioTHubEventSource_1.IoTHubEventSource(name, undefined, { urn });
            case "azure-native:timeseriesinsights/v20210630preview:ReferenceDataSet":
                return new referenceDataSet_1.ReferenceDataSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "timeseriesinsights/v20210630preview", _module);
//# sourceMappingURL=index.js.map