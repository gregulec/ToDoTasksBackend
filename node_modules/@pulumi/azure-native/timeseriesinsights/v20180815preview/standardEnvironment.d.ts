import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Standard environments have data retention limits.
 */
export declare class StandardEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing StandardEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StandardEnvironment;
    /**
     * Returns true if the given object is an instance of StandardEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StandardEnvironment;
    /**
     * The time the resource was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    readonly dataAccessFqdn: pulumi.Output<string>;
    /**
     * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    readonly dataAccessId: pulumi.Output<string>;
    /**
     * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
     */
    readonly dataRetentionTime: pulumi.Output<string>;
    /**
     * The kind of the environment.
     * Expected value is 'Standard'.
     */
    readonly kind: pulumi.Output<"Standard">;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
     */
    readonly partitionKeyProperties: pulumi.Output<outputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyResponse[] | undefined>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    readonly sku: pulumi.Output<outputs.timeseriesinsights.v20180815preview.SkuResponse>;
    /**
     * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     */
    readonly status: pulumi.Output<outputs.timeseriesinsights.v20180815preview.EnvironmentStatusResponse>;
    /**
     * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
     */
    readonly storageLimitExceededBehavior: pulumi.Output<string | undefined>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a StandardEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StandardEnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StandardEnvironment resource.
 */
export interface StandardEnvironmentArgs {
    /**
     * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
     */
    dataRetentionTime: pulumi.Input<string>;
    /**
     * Name of the environment
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The kind of the environment.
     * Expected value is 'Standard'.
     */
    kind: pulumi.Input<"Standard">;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
     */
    partitionKeyProperties?: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyArgs>[]>;
    /**
     * Name of an Azure Resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    sku: pulumi.Input<inputs.timeseriesinsights.v20180815preview.SkuArgs>;
    /**
     * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
     */
    storageLimitExceededBehavior?: pulumi.Input<string | enums.timeseriesinsights.v20180815preview.StorageLimitExceededBehavior>;
    /**
     * Key-value pairs of additional properties for the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
