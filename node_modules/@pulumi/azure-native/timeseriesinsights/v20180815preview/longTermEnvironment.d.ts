import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. LongTerm environments do not have set data retention limits.
 */
export declare class LongTermEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing LongTermEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LongTermEnvironment;
    /**
     * Returns true if the given object is an instance of LongTermEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LongTermEnvironment;
    /**
     * The time the resource was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    readonly dataAccessFqdn: pulumi.Output<string>;
    /**
     * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
     */
    readonly dataAccessId: pulumi.Output<string>;
    /**
     * The kind of the environment.
     * Expected value is 'LongTerm'.
     */
    readonly kind: pulumi.Output<"LongTerm">;
    /**
     * Resource location
     */
    readonly location: pulumi.Output<string>;
    /**
     * Resource name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Provisioning state of the resource.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    readonly sku: pulumi.Output<outputs.timeseriesinsights.v20180815preview.SkuResponse>;
    /**
     * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     */
    readonly status: pulumi.Output<outputs.timeseriesinsights.v20180815preview.EnvironmentStatusResponse>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    readonly storageConfiguration: pulumi.Output<outputs.timeseriesinsights.v20180815preview.LongTermStorageConfigurationOutputResponse>;
    /**
     * Resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    readonly timeSeriesIdProperties: pulumi.Output<outputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyResponse[]>;
    /**
     * Resource type
     */
    readonly type: pulumi.Output<string>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    readonly warmStoreConfiguration: pulumi.Output<outputs.timeseriesinsights.v20180815preview.WarmStoreConfigurationPropertiesResponse | undefined>;
    /**
     * Create a LongTermEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LongTermEnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LongTermEnvironment resource.
 */
export interface LongTermEnvironmentArgs {
    /**
     * Name of the environment
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The kind of the environment.
     * Expected value is 'LongTerm'.
     */
    kind: pulumi.Input<"LongTerm">;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of an Azure Resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     */
    sku: pulumi.Input<inputs.timeseriesinsights.v20180815preview.SkuArgs>;
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    storageConfiguration: pulumi.Input<inputs.timeseriesinsights.v20180815preview.LongTermStorageConfigurationInputArgs>;
    /**
     * Key-value pairs of additional properties for the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    timeSeriesIdProperties: pulumi.Input<pulumi.Input<inputs.timeseriesinsights.v20180815preview.TimeSeriesIdPropertyArgs>[]>;
    /**
     * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
     */
    warmStoreConfiguration?: pulumi.Input<inputs.timeseriesinsights.v20180815preview.WarmStoreConfigurationPropertiesArgs>;
}
