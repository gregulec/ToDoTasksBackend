import * as pulumi from "@pulumi/pulumi";
/**
 * The Connection Monitor Test class.
 */
export declare function getConnectionMonitorTest(args: GetConnectionMonitorTestArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionMonitorTestResult>;
export interface GetConnectionMonitorTestArgs {
    /**
     * The name of the connection monitor test
     */
    connectionMonitorTestName: string;
    /**
     * The name of the peering service.
     */
    peeringServiceName: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * The Connection Monitor Test class.
 */
export interface GetConnectionMonitorTestResult {
    /**
     * The Connection Monitor test destination
     */
    readonly destination?: string;
    /**
     * The Connection Monitor test destination port
     */
    readonly destinationPort?: number;
    /**
     * The ID of the resource.
     */
    readonly id: string;
    /**
     * The flag that indicates if the Connection Monitor test is successful or not.
     */
    readonly isTestSuccessful: boolean;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The path representing the Connection Monitor test.
     */
    readonly path: string[];
    /**
     * The provisioning state of the resource.
     */
    readonly provisioningState: string;
    /**
     * The Connection Monitor test source agent
     */
    readonly sourceAgent?: string;
    /**
     * The Connection Monitor test frequency in seconds
     */
    readonly testFrequencyInSec?: number;
    /**
     * The type of the resource.
     */
    readonly type: string;
}
