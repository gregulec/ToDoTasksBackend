import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
 */
export declare function getConfigurationStore(args: GetConfigurationStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigurationStoreResult>;
export interface GetConfigurationStoreArgs {
    /**
     * The name of the configuration store.
     */
    configStoreName: string;
    /**
     * The name of the resource group to which the container registry belongs.
     */
    resourceGroupName: string;
}
/**
 * The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
 */
export interface GetConfigurationStoreResult {
    /**
     * The creation date of configuration store.
     */
    readonly creationDate: string;
    /**
     * The DNS endpoint where the configuration store API will be available.
     */
    readonly endpoint: string;
    /**
     * The resource ID.
     */
    readonly id: string;
    /**
     * The managed identity information, if configured.
     */
    readonly identity?: outputs.appconfiguration.v20191001.ResourceIdentityResponse;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    readonly location: string;
    /**
     * The name of the resource.
     */
    readonly name: string;
    /**
     * The provisioning state of the configuration store.
     */
    readonly provisioningState: string;
    /**
     * The sku of the configuration store.
     */
    readonly sku: outputs.appconfiguration.v20191001.SkuResponse;
    /**
     * The tags of the resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource.
     */
    readonly type: string;
}
