import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * A Media Services account.
 * API Version: 2020-05-01.
 */
export declare function getMediaService(args: GetMediaServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaServiceResult>;
export interface GetMediaServiceArgs {
    /**
     * The Media Services account name.
     */
    accountName: string;
    /**
     * The name of the resource group within the Azure subscription.
     */
    resourceGroupName: string;
}
/**
 * A Media Services account.
 */
export interface GetMediaServiceResult {
    /**
     * The account encryption properties.
     */
    readonly encryption?: outputs.media.AccountEncryptionResponse;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The Managed Identity for the Media Services account.
     */
    readonly identity?: outputs.media.MediaServiceIdentityResponse;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The Media Services account ID.
     */
    readonly mediaServiceId: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The storage accounts for this resource.
     */
    readonly storageAccounts?: outputs.media.StorageAccountResponse[];
    readonly storageAuthentication?: string;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.media.SystemDataResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
