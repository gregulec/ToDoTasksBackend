"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./asset"), exports);
__exportStar(require("./contentKeyPolicy"), exports);
__exportStar(require("./getAsset"), exports);
__exportStar(require("./getAssetEncryptionKey"), exports);
__exportStar(require("./getContentKeyPolicy"), exports);
__exportStar(require("./getContentKeyPolicyPropertiesWithSecrets"), exports);
__exportStar(require("./getJob"), exports);
__exportStar(require("./getLiveEvent"), exports);
__exportStar(require("./getLiveOutput"), exports);
__exportStar(require("./getMediaService"), exports);
__exportStar(require("./getStreamingEndpoint"), exports);
__exportStar(require("./getStreamingLocator"), exports);
__exportStar(require("./getStreamingPolicy"), exports);
__exportStar(require("./getTransform"), exports);
__exportStar(require("./job"), exports);
__exportStar(require("./listAssetContainerSas"), exports);
__exportStar(require("./listStreamingLocatorContentKeys"), exports);
__exportStar(require("./listStreamingLocatorPaths"), exports);
__exportStar(require("./liveEvent"), exports);
__exportStar(require("./liveOutput"), exports);
__exportStar(require("./mediaService"), exports);
__exportStar(require("./streamingEndpoint"), exports);
__exportStar(require("./streamingLocator"), exports);
__exportStar(require("./streamingPolicy"), exports);
__exportStar(require("./transform"), exports);
// Export enums:
__exportStar(require("../../types/enums/media/v20180601preview"), exports);
// Import resources to register:
const asset_1 = require("./asset");
const contentKeyPolicy_1 = require("./contentKeyPolicy");
const job_1 = require("./job");
const liveEvent_1 = require("./liveEvent");
const liveOutput_1 = require("./liveOutput");
const mediaService_1 = require("./mediaService");
const streamingEndpoint_1 = require("./streamingEndpoint");
const streamingLocator_1 = require("./streamingLocator");
const streamingPolicy_1 = require("./streamingPolicy");
const transform_1 = require("./transform");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:media/v20180601preview:Asset":
                return new asset_1.Asset(name, undefined, { urn });
            case "azure-native:media/v20180601preview:ContentKeyPolicy":
                return new contentKeyPolicy_1.ContentKeyPolicy(name, undefined, { urn });
            case "azure-native:media/v20180601preview:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure-native:media/v20180601preview:LiveEvent":
                return new liveEvent_1.LiveEvent(name, undefined, { urn });
            case "azure-native:media/v20180601preview:LiveOutput":
                return new liveOutput_1.LiveOutput(name, undefined, { urn });
            case "azure-native:media/v20180601preview:MediaService":
                return new mediaService_1.MediaService(name, undefined, { urn });
            case "azure-native:media/v20180601preview:StreamingEndpoint":
                return new streamingEndpoint_1.StreamingEndpoint(name, undefined, { urn });
            case "azure-native:media/v20180601preview:StreamingLocator":
                return new streamingLocator_1.StreamingLocator(name, undefined, { urn });
            case "azure-native:media/v20180601preview:StreamingPolicy":
                return new streamingPolicy_1.StreamingPolicy(name, undefined, { urn });
            case "azure-native:media/v20180601preview:Transform":
                return new transform_1.Transform(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "media/v20180601preview", _module);
//# sourceMappingURL=index.js.map