"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210601 = exports.v20210501 = exports.v20200501 = exports.v20200201preview = exports.v20190901preview = exports.v20190501preview = exports.v20180701 = exports.v20180601preview = exports.v20180330preview = exports.v20151001 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./accountFilter"), exports);
__exportStar(require("./asset"), exports);
__exportStar(require("./assetFilter"), exports);
__exportStar(require("./contentKeyPolicy"), exports);
__exportStar(require("./getAccountFilter"), exports);
__exportStar(require("./getAsset"), exports);
__exportStar(require("./getAssetEncryptionKey"), exports);
__exportStar(require("./getAssetFilter"), exports);
__exportStar(require("./getContentKeyPolicy"), exports);
__exportStar(require("./getContentKeyPolicyPropertiesWithSecrets"), exports);
__exportStar(require("./getJob"), exports);
__exportStar(require("./getLiveEvent"), exports);
__exportStar(require("./getLiveOutput"), exports);
__exportStar(require("./getMediaGraph"), exports);
__exportStar(require("./getMediaService"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./getStreamingEndpoint"), exports);
__exportStar(require("./getStreamingLocator"), exports);
__exportStar(require("./getStreamingPolicy"), exports);
__exportStar(require("./getTransform"), exports);
__exportStar(require("./job"), exports);
__exportStar(require("./listAssetContainerSas"), exports);
__exportStar(require("./listAssetStreamingLocators"), exports);
__exportStar(require("./listMediaServiceEdgePolicies"), exports);
__exportStar(require("./listMediaServiceKeys"), exports);
__exportStar(require("./listStreamingLocatorContentKeys"), exports);
__exportStar(require("./listStreamingLocatorPaths"), exports);
__exportStar(require("./liveEvent"), exports);
__exportStar(require("./liveOutput"), exports);
__exportStar(require("./mediaGraph"), exports);
__exportStar(require("./mediaService"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
__exportStar(require("./streamingEndpoint"), exports);
__exportStar(require("./streamingLocator"), exports);
__exportStar(require("./streamingPolicy"), exports);
__exportStar(require("./transform"), exports);
// Export enums:
__exportStar(require("../types/enums/media"), exports);
// Export sub-modules:
const v20151001 = require("./v20151001");
exports.v20151001 = v20151001;
const v20180330preview = require("./v20180330preview");
exports.v20180330preview = v20180330preview;
const v20180601preview = require("./v20180601preview");
exports.v20180601preview = v20180601preview;
const v20180701 = require("./v20180701");
exports.v20180701 = v20180701;
const v20190501preview = require("./v20190501preview");
exports.v20190501preview = v20190501preview;
const v20190901preview = require("./v20190901preview");
exports.v20190901preview = v20190901preview;
const v20200201preview = require("./v20200201preview");
exports.v20200201preview = v20200201preview;
const v20200501 = require("./v20200501");
exports.v20200501 = v20200501;
const v20210501 = require("./v20210501");
exports.v20210501 = v20210501;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
// Import resources to register:
const accountFilter_1 = require("./accountFilter");
const asset_1 = require("./asset");
const assetFilter_1 = require("./assetFilter");
const contentKeyPolicy_1 = require("./contentKeyPolicy");
const job_1 = require("./job");
const liveEvent_1 = require("./liveEvent");
const liveOutput_1 = require("./liveOutput");
const mediaGraph_1 = require("./mediaGraph");
const mediaService_1 = require("./mediaService");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const streamingEndpoint_1 = require("./streamingEndpoint");
const streamingLocator_1 = require("./streamingLocator");
const streamingPolicy_1 = require("./streamingPolicy");
const transform_1 = require("./transform");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:media:AccountFilter":
                return new accountFilter_1.AccountFilter(name, undefined, { urn });
            case "azure-native:media:Asset":
                return new asset_1.Asset(name, undefined, { urn });
            case "azure-native:media:AssetFilter":
                return new assetFilter_1.AssetFilter(name, undefined, { urn });
            case "azure-native:media:ContentKeyPolicy":
                return new contentKeyPolicy_1.ContentKeyPolicy(name, undefined, { urn });
            case "azure-native:media:Job":
                return new job_1.Job(name, undefined, { urn });
            case "azure-native:media:LiveEvent":
                return new liveEvent_1.LiveEvent(name, undefined, { urn });
            case "azure-native:media:LiveOutput":
                return new liveOutput_1.LiveOutput(name, undefined, { urn });
            case "azure-native:media:MediaGraph":
                return new mediaGraph_1.MediaGraph(name, undefined, { urn });
            case "azure-native:media:MediaService":
                return new mediaService_1.MediaService(name, undefined, { urn });
            case "azure-native:media:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:media:StreamingEndpoint":
                return new streamingEndpoint_1.StreamingEndpoint(name, undefined, { urn });
            case "azure-native:media:StreamingLocator":
                return new streamingLocator_1.StreamingLocator(name, undefined, { urn });
            case "azure-native:media:StreamingPolicy":
                return new streamingPolicy_1.StreamingPolicy(name, undefined, { urn });
            case "azure-native:media:Transform":
                return new transform_1.Transform(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "media", _module);
//# sourceMappingURL=index.js.map