import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Describes the RedisEnterprise cluster
 */
export declare function getRedisEnterprise(args: GetRedisEnterpriseArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisEnterpriseResult>;
export interface GetRedisEnterpriseArgs {
    /**
     * The name of the RedisEnterprise cluster.
     */
    clusterName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * Describes the RedisEnterprise cluster
 */
export interface GetRedisEnterpriseResult {
    /**
     * DNS name of the cluster endpoint
     */
    readonly hostName: string;
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The geo-location where the resource lives
     */
    readonly location: string;
    /**
     * The minimum TLS version for the cluster to support, e.g. '1.2'
     */
    readonly minimumTlsVersion?: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * List of private endpoint connections associated with the specified RedisEnterprise cluster
     */
    readonly privateEndpointConnections: outputs.cache.v20210801.PrivateEndpointConnectionResponse[];
    /**
     * Current provisioning status of the cluster
     */
    readonly provisioningState: string;
    /**
     * Version of redis the cluster supports, e.g. '6'
     */
    readonly redisVersion: string;
    /**
     * Current resource status of the cluster
     */
    readonly resourceState: string;
    /**
     * The SKU to create, which affects price, performance, and features.
     */
    readonly sku: outputs.cache.v20210801.EnterpriseSkuResponse;
    /**
     * Resource tags.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
    /**
     * The Availability Zones where this cluster will be deployed.
     */
    readonly zones?: string[];
}
