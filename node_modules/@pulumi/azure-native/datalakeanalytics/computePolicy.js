"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComputePolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Data Lake Analytics compute policy information.
 * API Version: 2016-11-01.
 */
class ComputePolicy extends pulumi.CustomResource {
    /**
     * Create a ComputePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.objectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if ((!args || args.objectType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            inputs["accountName"] = args ? args.accountName : undefined;
            inputs["computePolicyName"] = args ? args.computePolicyName : undefined;
            inputs["maxDegreeOfParallelismPerJob"] = args ? args.maxDegreeOfParallelismPerJob : undefined;
            inputs["minPriorityPerJob"] = args ? args.minPriorityPerJob : undefined;
            inputs["objectId"] = args ? args.objectId : undefined;
            inputs["objectType"] = args ? args.objectType : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        else {
            inputs["maxDegreeOfParallelismPerJob"] = undefined /*out*/;
            inputs["minPriorityPerJob"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["objectId"] = undefined /*out*/;
            inputs["objectType"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        const aliasOpts = { aliases: [{ type: "azure-nextgen:datalakeanalytics:ComputePolicy" }, { type: "azure-native:datalakeanalytics/v20151001preview:ComputePolicy" }, { type: "azure-nextgen:datalakeanalytics/v20151001preview:ComputePolicy" }, { type: "azure-native:datalakeanalytics/v20161101:ComputePolicy" }, { type: "azure-nextgen:datalakeanalytics/v20161101:ComputePolicy" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ComputePolicy.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing ComputePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ComputePolicy(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ComputePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputePolicy.__pulumiType;
    }
}
exports.ComputePolicy = ComputePolicy;
/** @internal */
ComputePolicy.__pulumiType = 'azure-native:datalakeanalytics:ComputePolicy';
//# sourceMappingURL=computePolicy.js.map