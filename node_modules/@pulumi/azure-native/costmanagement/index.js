"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210101 = exports.v20201201preview = exports.v20200601 = exports.v20200301preview = exports.v20191101 = exports.v20191001 = exports.v20190901 = exports.v20190401preview = exports.v20190301preview = exports.v20190101 = exports.v20180801preview = exports.v20180531 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./cloudConnector"), exports);
__exportStar(require("./costAllocationRule"), exports);
__exportStar(require("./export"), exports);
__exportStar(require("./getCloudConnector"), exports);
__exportStar(require("./getCostAllocationRule"), exports);
__exportStar(require("./getExport"), exports);
__exportStar(require("./getReport"), exports);
__exportStar(require("./getReportByBillingAccount"), exports);
__exportStar(require("./getReportByDepartment"), exports);
__exportStar(require("./getReportByResourceGroupName"), exports);
__exportStar(require("./getSetting"), exports);
__exportStar(require("./getView"), exports);
__exportStar(require("./getViewByScope"), exports);
__exportStar(require("./report"), exports);
__exportStar(require("./reportByBillingAccount"), exports);
__exportStar(require("./reportByDepartment"), exports);
__exportStar(require("./reportByResourceGroupName"), exports);
__exportStar(require("./setting"), exports);
__exportStar(require("./view"), exports);
__exportStar(require("./viewByScope"), exports);
// Export enums:
__exportStar(require("../types/enums/costmanagement"), exports);
// Export sub-modules:
const v20180531 = require("./v20180531");
exports.v20180531 = v20180531;
const v20180801preview = require("./v20180801preview");
exports.v20180801preview = v20180801preview;
const v20190101 = require("./v20190101");
exports.v20190101 = v20190101;
const v20190301preview = require("./v20190301preview");
exports.v20190301preview = v20190301preview;
const v20190401preview = require("./v20190401preview");
exports.v20190401preview = v20190401preview;
const v20190901 = require("./v20190901");
exports.v20190901 = v20190901;
const v20191001 = require("./v20191001");
exports.v20191001 = v20191001;
const v20191101 = require("./v20191101");
exports.v20191101 = v20191101;
const v20200301preview = require("./v20200301preview");
exports.v20200301preview = v20200301preview;
const v20200601 = require("./v20200601");
exports.v20200601 = v20200601;
const v20201201preview = require("./v20201201preview");
exports.v20201201preview = v20201201preview;
const v20210101 = require("./v20210101");
exports.v20210101 = v20210101;
// Import resources to register:
const cloudConnector_1 = require("./cloudConnector");
const costAllocationRule_1 = require("./costAllocationRule");
const export_1 = require("./export");
const report_1 = require("./report");
const reportByBillingAccount_1 = require("./reportByBillingAccount");
const reportByDepartment_1 = require("./reportByDepartment");
const reportByResourceGroupName_1 = require("./reportByResourceGroupName");
const setting_1 = require("./setting");
const view_1 = require("./view");
const viewByScope_1 = require("./viewByScope");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:costmanagement:CloudConnector":
                return new cloudConnector_1.CloudConnector(name, undefined, { urn });
            case "azure-native:costmanagement:CostAllocationRule":
                return new costAllocationRule_1.CostAllocationRule(name, undefined, { urn });
            case "azure-native:costmanagement:Export":
                return new export_1.Export(name, undefined, { urn });
            case "azure-native:costmanagement:Report":
                return new report_1.Report(name, undefined, { urn });
            case "azure-native:costmanagement:ReportByBillingAccount":
                return new reportByBillingAccount_1.ReportByBillingAccount(name, undefined, { urn });
            case "azure-native:costmanagement:ReportByDepartment":
                return new reportByDepartment_1.ReportByDepartment(name, undefined, { urn });
            case "azure-native:costmanagement:ReportByResourceGroupName":
                return new reportByResourceGroupName_1.ReportByResourceGroupName(name, undefined, { urn });
            case "azure-native:costmanagement:Setting":
                return new setting_1.Setting(name, undefined, { urn });
            case "azure-native:costmanagement:View":
                return new view_1.View(name, undefined, { urn });
            case "azure-native:costmanagement:ViewByScope":
                return new viewByScope_1.ViewByScope(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "costmanagement", _module);
//# sourceMappingURL=index.js.map