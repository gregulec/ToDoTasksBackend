import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
export declare function getJitNetworkAccessPolicy(args: GetJitNetworkAccessPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetJitNetworkAccessPolicyResult>;
export interface GetJitNetworkAccessPolicyArgs {
    /**
     * The location where ASC stores the data of the subscription. can be retrieved from Get locations
     */
    ascLocation: string;
    /**
     * Name of a Just-in-Time access configuration policy.
     */
    jitNetworkAccessPolicyName: string;
    /**
     * The name of the resource group within the user's subscription. The name is case insensitive.
     */
    resourceGroupName: string;
}
export interface GetJitNetworkAccessPolicyResult {
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Kind of the resource
     */
    readonly kind?: string;
    /**
     * Location where the resource is stored
     */
    readonly location: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Gets the provisioning state of the Just-in-Time policy.
     */
    readonly provisioningState: string;
    readonly requests?: outputs.security.v20150601preview.JitNetworkAccessRequestResponse[];
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * Configurations for Microsoft.Compute/virtualMachines resource type.
     */
    readonly virtualMachines: outputs.security.v20150601preview.JitNetworkAccessPolicyVirtualMachineResponse[];
}
