"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.v20210601 = exports.v20210115preview = exports.v20200701preview = exports.v20200101preview = exports.v20200101 = exports.v20190801 = exports.v20190101preview = exports.v20170801preview = exports.v20150601preview = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./adaptiveApplicationControl"), exports);
__exportStar(require("./alertsSuppressionRule"), exports);
__exportStar(require("./assessment"), exports);
__exportStar(require("./assessmentMetadataInSubscription"), exports);
__exportStar(require("./automation"), exports);
__exportStar(require("./connector"), exports);
__exportStar(require("./deviceSecurityGroup"), exports);
__exportStar(require("./getAdaptiveApplicationControl"), exports);
__exportStar(require("./getAlertsSuppressionRule"), exports);
__exportStar(require("./getAssessment"), exports);
__exportStar(require("./getAssessmentMetadataInSubscription"), exports);
__exportStar(require("./getAutomation"), exports);
__exportStar(require("./getConnector"), exports);
__exportStar(require("./getDeviceSecurityGroup"), exports);
__exportStar(require("./getIngestionSetting"), exports);
__exportStar(require("./getIotSecuritySolution"), exports);
__exportStar(require("./getJitNetworkAccessPolicy"), exports);
__exportStar(require("./getSecurityContact"), exports);
__exportStar(require("./getServerVulnerabilityAssessment"), exports);
__exportStar(require("./getSqlVulnerabilityAssessmentBaselineRule"), exports);
__exportStar(require("./getWorkspaceSetting"), exports);
__exportStar(require("./ingestionSetting"), exports);
__exportStar(require("./iotSecuritySolution"), exports);
__exportStar(require("./jitNetworkAccessPolicy"), exports);
__exportStar(require("./listIngestionSettingConnectionStrings"), exports);
__exportStar(require("./listIngestionSettingTokens"), exports);
__exportStar(require("./securityContact"), exports);
__exportStar(require("./serverVulnerabilityAssessment"), exports);
__exportStar(require("./sqlVulnerabilityAssessmentBaselineRule"), exports);
__exportStar(require("./workspaceSetting"), exports);
// Export enums:
__exportStar(require("../types/enums/security"), exports);
// Export sub-modules:
const v20150601preview = require("./v20150601preview");
exports.v20150601preview = v20150601preview;
const v20170801preview = require("./v20170801preview");
exports.v20170801preview = v20170801preview;
const v20190101preview = require("./v20190101preview");
exports.v20190101preview = v20190101preview;
const v20190801 = require("./v20190801");
exports.v20190801 = v20190801;
const v20200101 = require("./v20200101");
exports.v20200101 = v20200101;
const v20200101preview = require("./v20200101preview");
exports.v20200101preview = v20200101preview;
const v20200701preview = require("./v20200701preview");
exports.v20200701preview = v20200701preview;
const v20210115preview = require("./v20210115preview");
exports.v20210115preview = v20210115preview;
const v20210601 = require("./v20210601");
exports.v20210601 = v20210601;
// Import resources to register:
const adaptiveApplicationControl_1 = require("./adaptiveApplicationControl");
const alertsSuppressionRule_1 = require("./alertsSuppressionRule");
const assessment_1 = require("./assessment");
const assessmentMetadataInSubscription_1 = require("./assessmentMetadataInSubscription");
const automation_1 = require("./automation");
const connector_1 = require("./connector");
const deviceSecurityGroup_1 = require("./deviceSecurityGroup");
const ingestionSetting_1 = require("./ingestionSetting");
const iotSecuritySolution_1 = require("./iotSecuritySolution");
const jitNetworkAccessPolicy_1 = require("./jitNetworkAccessPolicy");
const securityContact_1 = require("./securityContact");
const serverVulnerabilityAssessment_1 = require("./serverVulnerabilityAssessment");
const sqlVulnerabilityAssessmentBaselineRule_1 = require("./sqlVulnerabilityAssessmentBaselineRule");
const workspaceSetting_1 = require("./workspaceSetting");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:security:AdaptiveApplicationControl":
                return new adaptiveApplicationControl_1.AdaptiveApplicationControl(name, undefined, { urn });
            case "azure-native:security:AlertsSuppressionRule":
                return new alertsSuppressionRule_1.AlertsSuppressionRule(name, undefined, { urn });
            case "azure-native:security:Assessment":
                return new assessment_1.Assessment(name, undefined, { urn });
            case "azure-native:security:AssessmentMetadataInSubscription":
                return new assessmentMetadataInSubscription_1.AssessmentMetadataInSubscription(name, undefined, { urn });
            case "azure-native:security:Automation":
                return new automation_1.Automation(name, undefined, { urn });
            case "azure-native:security:Connector":
                return new connector_1.Connector(name, undefined, { urn });
            case "azure-native:security:DeviceSecurityGroup":
                return new deviceSecurityGroup_1.DeviceSecurityGroup(name, undefined, { urn });
            case "azure-native:security:IngestionSetting":
                return new ingestionSetting_1.IngestionSetting(name, undefined, { urn });
            case "azure-native:security:IotSecuritySolution":
                return new iotSecuritySolution_1.IotSecuritySolution(name, undefined, { urn });
            case "azure-native:security:JitNetworkAccessPolicy":
                return new jitNetworkAccessPolicy_1.JitNetworkAccessPolicy(name, undefined, { urn });
            case "azure-native:security:SecurityContact":
                return new securityContact_1.SecurityContact(name, undefined, { urn });
            case "azure-native:security:ServerVulnerabilityAssessment":
                return new serverVulnerabilityAssessment_1.ServerVulnerabilityAssessment(name, undefined, { urn });
            case "azure-native:security:SqlVulnerabilityAssessmentBaselineRule":
                return new sqlVulnerabilityAssessmentBaselineRule_1.SqlVulnerabilityAssessmentBaselineRule(name, undefined, { urn });
            case "azure-native:security:WorkspaceSetting":
                return new workspaceSetting_1.WorkspaceSetting(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "security", _module);
//# sourceMappingURL=index.js.map