import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Security assessment on a resource
 * API Version: 2020-01-01.
 */
export declare function getAssessment(args: GetAssessmentArgs, opts?: pulumi.InvokeOptions): Promise<GetAssessmentResult>;
export interface GetAssessmentArgs {
    /**
     * The Assessment Key - Unique key for the assessment type
     */
    assessmentName: string;
    /**
     * OData expand. Optional.
     */
    expand?: string;
    /**
     * The identifier of the resource.
     */
    resourceId: string;
}
/**
 * Security assessment on a resource
 */
export interface GetAssessmentResult {
    /**
     * Additional data regarding the assessment
     */
    readonly additionalData?: {
        [key: string]: string;
    };
    /**
     * User friendly display name of the assessment
     */
    readonly displayName: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Links relevant to the assessment
     */
    readonly links: outputs.security.AssessmentLinksResponse;
    /**
     * Describes properties of an assessment metadata.
     */
    readonly metadata?: outputs.security.SecurityAssessmentMetadataPropertiesResponse;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Data regarding 3rd party partner integration
     */
    readonly partnersData?: outputs.security.SecurityAssessmentPartnerDataResponse;
    /**
     * Details of the resource that was assessed
     */
    readonly resourceDetails: outputs.security.AzureResourceDetailsResponse | outputs.security.OnPremiseResourceDetailsResponse | outputs.security.OnPremiseSqlResourceDetailsResponse;
    /**
     * The result of the assessment
     */
    readonly status: outputs.security.AssessmentStatusResponse;
    /**
     * Resource type
     */
    readonly type: string;
}
