import * as pulumi from "@pulumi/pulumi";
/**
 * An object that represents a machine learning project.
 */
export declare class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Project;
    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Project;
    /**
     * The immutable id of the team account which contains this project.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The creation date of the project in ISO8601 format.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * The description of this project.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The friendly name for this project.
     */
    readonly friendlyName: pulumi.Output<string>;
    /**
     * The reference to git repo for this project.
     */
    readonly gitrepo: pulumi.Output<string | undefined>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The immutable id of this project.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * The current deployment state of project resource. The provisioningState is to indicate states for resource provisioning.
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The tags of the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The immutable id of the workspace which contains this project.
     */
    readonly workspaceId: pulumi.Output<string>;
    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * The name of the machine learning team account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The description of this project.
     */
    description?: pulumi.Input<string>;
    /**
     * The friendly name for this project.
     */
    friendlyName: pulumi.Input<string>;
    /**
     * The reference to git repo for this project.
     */
    gitrepo?: pulumi.Input<string>;
    /**
     * The location of the resource. This cannot be changed after the resource is created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the machine learning project under a team account workspace.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The name of the resource group to which the machine learning team account belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The tags of the resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the machine learning team account workspace.
     */
    workspaceName: pulumi.Input<string>;
}
