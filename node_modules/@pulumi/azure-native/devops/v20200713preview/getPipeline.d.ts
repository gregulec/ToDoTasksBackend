import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
 */
export declare function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult>;
export interface GetPipelineArgs {
    /**
     * The name of the Pipeline resource in ARM.
     */
    pipelineName: string;
    /**
     * Name of the resource group within the Azure subscription.
     */
    resourceGroupName: string;
}
/**
 * Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
 */
export interface GetPipelineResult {
    /**
     * Configuration used to bootstrap the Pipeline.
     */
    readonly bootstrapConfiguration: outputs.devops.v20200713preview.BootstrapConfigurationResponse;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource Location
     */
    readonly location?: string;
    /**
     * Resource Name
     */
    readonly name: string;
    /**
     * Unique identifier of the Pipeline
     */
    readonly pipelineId: number;
    /**
     * Specifies which CI/CD provider to use. Valid options are 'azurePipeline', 'githubWorkflow'.
     */
    readonly pipelineType: string;
    /**
     * The system metadata pertaining to this resource.
     */
    readonly systemData: outputs.devops.v20200713preview.SystemDataResponse;
    /**
     * Resource Tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource Type
     */
    readonly type: string;
}
