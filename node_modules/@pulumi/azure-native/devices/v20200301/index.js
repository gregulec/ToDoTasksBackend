"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./certificate"), exports);
__exportStar(require("./dpsCertificate"), exports);
__exportStar(require("./getCertificate"), exports);
__exportStar(require("./getDpsCertificate"), exports);
__exportStar(require("./getIotDpsResource"), exports);
__exportStar(require("./getIotDpsResourcePrivateEndpointConnection"), exports);
__exportStar(require("./getIotHubResource"), exports);
__exportStar(require("./getIotHubResourceEventHubConsumerGroup"), exports);
__exportStar(require("./getPrivateEndpointConnection"), exports);
__exportStar(require("./iotDpsResource"), exports);
__exportStar(require("./iotDpsResourcePrivateEndpointConnection"), exports);
__exportStar(require("./iotHubResource"), exports);
__exportStar(require("./iotHubResourceEventHubConsumerGroup"), exports);
__exportStar(require("./listIotDpsResourceKeys"), exports);
__exportStar(require("./listIotDpsResourceKeysForKeyName"), exports);
__exportStar(require("./listIotHubResourceKeys"), exports);
__exportStar(require("./listIotHubResourceKeysForKeyName"), exports);
__exportStar(require("./privateEndpointConnection"), exports);
// Export enums:
__exportStar(require("../../types/enums/devices/v20200301"), exports);
// Import resources to register:
const certificate_1 = require("./certificate");
const dpsCertificate_1 = require("./dpsCertificate");
const iotDpsResource_1 = require("./iotDpsResource");
const iotDpsResourcePrivateEndpointConnection_1 = require("./iotDpsResourcePrivateEndpointConnection");
const iotHubResource_1 = require("./iotHubResource");
const iotHubResourceEventHubConsumerGroup_1 = require("./iotHubResourceEventHubConsumerGroup");
const privateEndpointConnection_1 = require("./privateEndpointConnection");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:devices/v20200301:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure-native:devices/v20200301:DpsCertificate":
                return new dpsCertificate_1.DpsCertificate(name, undefined, { urn });
            case "azure-native:devices/v20200301:IotDpsResource":
                return new iotDpsResource_1.IotDpsResource(name, undefined, { urn });
            case "azure-native:devices/v20200301:IotDpsResourcePrivateEndpointConnection":
                return new iotDpsResourcePrivateEndpointConnection_1.IotDpsResourcePrivateEndpointConnection(name, undefined, { urn });
            case "azure-native:devices/v20200301:IotHubResource":
                return new iotHubResource_1.IotHubResource(name, undefined, { urn });
            case "azure-native:devices/v20200301:IotHubResourceEventHubConsumerGroup":
                return new iotHubResourceEventHubConsumerGroup_1.IotHubResourceEventHubConsumerGroup(name, undefined, { urn });
            case "azure-native:devices/v20200301:PrivateEndpointConnection":
                return new privateEndpointConnection_1.PrivateEndpointConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "devices/v20200301", _module);
//# sourceMappingURL=index.js.map