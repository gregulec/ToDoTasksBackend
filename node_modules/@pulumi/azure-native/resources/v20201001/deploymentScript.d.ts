import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
/**
 * Deployment script object.
 *
 * @deprecated Please use one of the variants: AzureCliScript, AzurePowerShellScript.
 */
export declare class DeploymentScript extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentScript;
    /**
     * Returns true if the given object is an instance of DeploymentScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeploymentScript;
    /**
     * Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
     */
    readonly identity: pulumi.Output<outputs.resources.v20201001.ManagedServiceIdentityResponse | undefined>;
    /**
     * Type of the script.
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The location of the ACI and the storage account for the deployment script.
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of this resource.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The system metadata related to this resource.
     */
    readonly systemData: pulumi.Output<outputs.resources.v20201001.SystemDataResponse>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Type of this resource.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a DeploymentScript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Please use one of the variants: AzureCliScript, AzurePowerShellScript. */
    constructor(name: string, args: DeploymentScriptArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DeploymentScript resource.
 */
export interface DeploymentScriptArgs {
    /**
     * Optional property. Managed identity to be used for this deployment script. Currently, only user-assigned MSI is supported.
     */
    identity?: pulumi.Input<inputs.resources.v20201001.ManagedServiceIdentityArgs>;
    /**
     * Type of the script.
     */
    kind: pulumi.Input<string | enums.resources.v20201001.ScriptType>;
    /**
     * The location of the ACI and the storage account for the deployment script.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the deployment script.
     */
    scriptName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
