"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./automationAccount"), exports);
__exportStar(require("./certificate"), exports);
__exportStar(require("./connection"), exports);
__exportStar(require("./connectionType"), exports);
__exportStar(require("./credential"), exports);
__exportStar(require("./dscConfiguration"), exports);
__exportStar(require("./dscNodeConfiguration"), exports);
__exportStar(require("./getAutomationAccount"), exports);
__exportStar(require("./getCertificate"), exports);
__exportStar(require("./getConnection"), exports);
__exportStar(require("./getConnectionType"), exports);
__exportStar(require("./getCredential"), exports);
__exportStar(require("./getDscConfiguration"), exports);
__exportStar(require("./getDscNodeConfiguration"), exports);
__exportStar(require("./getJobSchedule"), exports);
__exportStar(require("./getModule"), exports);
__exportStar(require("./getPython2Package"), exports);
__exportStar(require("./getRunbook"), exports);
__exportStar(require("./getSchedule"), exports);
__exportStar(require("./getSoftwareUpdateConfigurationByName"), exports);
__exportStar(require("./getSourceControl"), exports);
__exportStar(require("./getVariable"), exports);
__exportStar(require("./getWatcher"), exports);
__exportStar(require("./jobSchedule"), exports);
__exportStar(require("./listKeyByAutomationAccount"), exports);
__exportStar(require("./module"), exports);
__exportStar(require("./python2Package"), exports);
__exportStar(require("./runbook"), exports);
__exportStar(require("./schedule"), exports);
__exportStar(require("./softwareUpdateConfigurationByName"), exports);
__exportStar(require("./sourceControl"), exports);
__exportStar(require("./variable"), exports);
__exportStar(require("./watcher"), exports);
// Export enums:
__exportStar(require("../../types/enums/automation/v20190601"), exports);
// Import resources to register:
const automationAccount_1 = require("./automationAccount");
const certificate_1 = require("./certificate");
const connection_1 = require("./connection");
const connectionType_1 = require("./connectionType");
const credential_1 = require("./credential");
const dscConfiguration_1 = require("./dscConfiguration");
const dscNodeConfiguration_1 = require("./dscNodeConfiguration");
const jobSchedule_1 = require("./jobSchedule");
const module_1 = require("./module");
const python2Package_1 = require("./python2Package");
const runbook_1 = require("./runbook");
const schedule_1 = require("./schedule");
const softwareUpdateConfigurationByName_1 = require("./softwareUpdateConfigurationByName");
const sourceControl_1 = require("./sourceControl");
const variable_1 = require("./variable");
const watcher_1 = require("./watcher");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "azure-native:automation/v20190601:AutomationAccount":
                return new automationAccount_1.AutomationAccount(name, undefined, { urn });
            case "azure-native:automation/v20190601:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "azure-native:automation/v20190601:Connection":
                return new connection_1.Connection(name, undefined, { urn });
            case "azure-native:automation/v20190601:ConnectionType":
                return new connectionType_1.ConnectionType(name, undefined, { urn });
            case "azure-native:automation/v20190601:Credential":
                return new credential_1.Credential(name, undefined, { urn });
            case "azure-native:automation/v20190601:DscConfiguration":
                return new dscConfiguration_1.DscConfiguration(name, undefined, { urn });
            case "azure-native:automation/v20190601:DscNodeConfiguration":
                return new dscNodeConfiguration_1.DscNodeConfiguration(name, undefined, { urn });
            case "azure-native:automation/v20190601:JobSchedule":
                return new jobSchedule_1.JobSchedule(name, undefined, { urn });
            case "azure-native:automation/v20190601:Module":
                return new module_1.Module(name, undefined, { urn });
            case "azure-native:automation/v20190601:Python2Package":
                return new python2Package_1.Python2Package(name, undefined, { urn });
            case "azure-native:automation/v20190601:Runbook":
                return new runbook_1.Runbook(name, undefined, { urn });
            case "azure-native:automation/v20190601:Schedule":
                return new schedule_1.Schedule(name, undefined, { urn });
            case "azure-native:automation/v20190601:SoftwareUpdateConfigurationByName":
                return new softwareUpdateConfigurationByName_1.SoftwareUpdateConfigurationByName(name, undefined, { urn });
            case "azure-native:automation/v20190601:SourceControl":
                return new sourceControl_1.SourceControl(name, undefined, { urn });
            case "azure-native:automation/v20190601:Variable":
                return new variable_1.Variable(name, undefined, { urn });
            case "azure-native:automation/v20190601:Watcher":
                return new watcher_1.Watcher(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "automation/v20190601", _module);
//# sourceMappingURL=index.js.map