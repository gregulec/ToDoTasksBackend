import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * OpenShift Managed cluster.
 * API Version: 2019-04-30.
 */
export declare function getOpenShiftManagedCluster(args: GetOpenShiftManagedClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetOpenShiftManagedClusterResult>;
export interface GetOpenShiftManagedClusterArgs {
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
    /**
     * The name of the OpenShift managed cluster resource.
     */
    resourceName: string;
}
/**
 * OpenShift Managed cluster.
 */
export interface GetOpenShiftManagedClusterResult {
    /**
     * Configuration of OpenShift cluster VMs.
     */
    readonly agentPoolProfiles?: outputs.containerservice.OpenShiftManagedClusterAgentPoolProfileResponse[];
    /**
     * Configures OpenShift authentication.
     */
    readonly authProfile?: outputs.containerservice.OpenShiftManagedClusterAuthProfileResponse;
    /**
     * Version of OpenShift specified when creating the cluster.
     */
    readonly clusterVersion: string;
    /**
     * Service generated FQDN for OpenShift API server loadbalancer internal hostname.
     */
    readonly fqdn: string;
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Configuration for OpenShift master VMs.
     */
    readonly masterPoolProfile?: outputs.containerservice.OpenShiftManagedClusterMasterPoolProfileResponse;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * Configuration for OpenShift networking.
     */
    readonly networkProfile?: outputs.containerservice.NetworkProfileResponse;
    /**
     * Version of OpenShift specified when creating the cluster.
     */
    readonly openShiftVersion: string;
    /**
     * Define the resource plan as required by ARM for billing purposes
     */
    readonly plan?: outputs.containerservice.PurchasePlanResponse;
    /**
     * The current deployment or provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * Service generated FQDN for OpenShift API server.
     */
    readonly publicHostname: string;
    /**
     * Configuration for OpenShift router(s).
     */
    readonly routerProfiles?: outputs.containerservice.OpenShiftRouterProfileResponse[];
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resource type
     */
    readonly type: string;
}
