import * as pulumi from "@pulumi/pulumi";
/**
 * SAP monitor info on Azure (ARM properties and SAP monitor properties)
 * API Version: 2020-02-07-preview.
 */
export declare class SapMonitor extends pulumi.CustomResource {
    /**
     * Get an existing SapMonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SapMonitor;
    /**
     * Returns true if the given object is an instance of SapMonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SapMonitor;
    /**
     * The value indicating whether to send analytics to Microsoft
     */
    readonly enableCustomerAnalytics: pulumi.Output<boolean | undefined>;
    /**
     * The geo-location where the resource lives
     */
    readonly location: pulumi.Output<string>;
    /**
     * The ARM ID of the Log Analytics Workspace that is used for monitoring
     */
    readonly logAnalyticsWorkspaceArmId: pulumi.Output<string | undefined>;
    /**
     * The workspace ID of the log analytics workspace to be used for monitoring
     */
    readonly logAnalyticsWorkspaceId: pulumi.Output<string | undefined>;
    /**
     * The shared key of the log analytics workspace that is used for monitoring
     */
    readonly logAnalyticsWorkspaceSharedKey: pulumi.Output<string | undefined>;
    /**
     * The name of the resource group the SAP Monitor resources get deployed into.
     */
    readonly managedResourceGroupName: pulumi.Output<string>;
    /**
     * The subnet which the SAP monitor will be deployed in
     */
    readonly monitorSubnet: pulumi.Output<string | undefined>;
    /**
     * The name of the resource
     */
    readonly name: pulumi.Output<string>;
    /**
     * State of provisioning of the HanaInstance
     */
    readonly provisioningState: pulumi.Output<string>;
    /**
     * The version of the payload running in the Collector VM
     */
    readonly sapMonitorCollectorVersion: pulumi.Output<string>;
    /**
     * Resource tags.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a SapMonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SapMonitorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SapMonitor resource.
 */
export interface SapMonitorArgs {
    /**
     * The value indicating whether to send analytics to Microsoft
     */
    enableCustomerAnalytics?: pulumi.Input<boolean>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The ARM ID of the Log Analytics Workspace that is used for monitoring
     */
    logAnalyticsWorkspaceArmId?: pulumi.Input<string>;
    /**
     * The workspace ID of the log analytics workspace to be used for monitoring
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * The shared key of the log analytics workspace that is used for monitoring
     */
    logAnalyticsWorkspaceSharedKey?: pulumi.Input<string>;
    /**
     * The subnet which the SAP monitor will be deployed in
     */
    monitorSubnet?: pulumi.Input<string>;
    /**
     * Name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the SAP monitor resource.
     */
    sapMonitorName?: pulumi.Input<string>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
