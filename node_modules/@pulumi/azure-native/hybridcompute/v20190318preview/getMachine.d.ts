import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * Describes a hybrid machine.
 */
export declare function getMachine(args: GetMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetMachineResult>;
export interface GetMachineArgs {
    /**
     * The expand expression to apply on the operation.
     */
    expand?: string;
    /**
     * The name of the hybrid machine.
     */
    name: string;
    /**
     * The name of the resource group.
     */
    resourceGroupName: string;
}
/**
 * Describes a hybrid machine.
 */
export interface GetMachineResult {
    /**
     * The hybrid machine agent full version.
     */
    readonly agentVersion: string;
    /**
     * Public Key that the client provides to be used during initial resource onboarding
     */
    readonly clientPublicKey?: string;
    /**
     * Specifies the hybrid machine display name.
     */
    readonly displayName: string;
    /**
     * Details about the error state.
     */
    readonly errorDetails: outputs.hybridcompute.v20190318preview.ErrorDetailResponse[];
    /**
     * Resource Id
     */
    readonly id: string;
    /**
     * The time of the last status change.
     */
    readonly lastStatusChange: string;
    /**
     * Resource location
     */
    readonly location: string;
    /**
     * Specifies the hybrid machine FQDN.
     */
    readonly machineFqdn: string;
    /**
     * Resource name
     */
    readonly name: string;
    /**
     * The Operating System running on the hybrid machine.
     */
    readonly osName: string;
    /**
     * Specifies the operating system settings for the hybrid machine.
     */
    readonly osProfile: outputs.hybridcompute.v20190318preview.OSProfileResponse;
    /**
     * The version of Operating System running on the hybrid machine.
     */
    readonly osVersion: string;
    /**
     * Resource's Physical Location
     */
    readonly physicalLocation?: string;
    /**
     * The identity's principal id.
     */
    readonly principalId: string;
    /**
     * The provisioning state, which only appears in the response.
     */
    readonly provisioningState: string;
    /**
     * The status of the hybrid machine agent.
     */
    readonly status: string;
    /**
     * Resource tags
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The identity's tenant id.
     */
    readonly tenantId: string;
    /**
     * Resource type
     */
    readonly type: string;
    /**
     * Specifies the hybrid machine unique ID.
     */
    readonly vmId: string;
}
