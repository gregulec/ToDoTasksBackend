import * as pulumi from "@pulumi/pulumi";
/**
 * A global reach connection resource
 */
export declare function getGlobalReachConnection(args: GetGlobalReachConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalReachConnectionResult>;
export interface GetGlobalReachConnectionArgs {
    /**
     * Name of the global reach connection in the private cloud
     */
    globalReachConnectionName: string;
    /**
     * Name of the private cloud
     */
    privateCloudName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
}
/**
 * A global reach connection resource
 */
export interface GetGlobalReachConnectionResult {
    /**
     * The network used for global reach carved out from the original network block provided for the private cloud
     */
    readonly addressPrefix: string;
    /**
     * Authorization key from the peer express route used for the global reach connection
     */
    readonly authorizationKey?: string;
    /**
     * The connection status of the global reach connection
     */
    readonly circuitConnectionStatus: string;
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Identifier of the ExpressRoute Circuit to peer with in the global reach connection
     */
    readonly peerExpressRouteCircuit?: string;
    /**
     * The state of the  ExpressRoute Circuit Authorization provisioning
     */
    readonly provisioningState: string;
    /**
     * Resource type.
     */
    readonly type: string;
}
