import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../../types";
/**
 * A Sql pool vulnerability assessment rule baseline.
 */
export declare function getSqlPoolVulnerabilityAssessmentRuleBaseline(args: GetSqlPoolVulnerabilityAssessmentRuleBaselineArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlPoolVulnerabilityAssessmentRuleBaselineResult>;
export interface GetSqlPoolVulnerabilityAssessmentRuleBaselineArgs {
    /**
     * The name of the vulnerability assessment rule baseline (default implies a baseline on a Sql pool level rule and master for server level rule).
     */
    baselineName: string;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: string;
    /**
     * The vulnerability assessment rule ID.
     */
    ruleId: string;
    /**
     * SQL pool name
     */
    sqlPoolName: string;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: string;
    /**
     * The name of the workspace
     */
    workspaceName: string;
}
/**
 * A Sql pool vulnerability assessment rule baseline.
 */
export interface GetSqlPoolVulnerabilityAssessmentRuleBaselineResult {
    /**
     * The rule baseline result
     */
    readonly baselineResults: outputs.synapse.v20210601preview.SqlPoolVulnerabilityAssessmentRuleBaselineItemResponse[];
    /**
     * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     */
    readonly id: string;
    /**
     * The name of the resource
     */
    readonly name: string;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    readonly type: string;
}
